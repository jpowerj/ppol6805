[
  {
    "objectID": "w14/slides.html#references",
    "href": "w14/slides.html#references",
    "title": "Week 14: Final Project Poster Session",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "w14/index.html",
    "href": "w14/index.html",
    "title": "Week 14: Final Project Poster Session",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 14: Dec 3"
    ]
  },
  {
    "objectID": "w14/index.html#references",
    "href": "w14/index.html#references",
    "title": "Week 14: Final Project Poster Session",
    "section": "References",
    "text": "References",
    "crumbs": [
      "Week 14: Dec 3"
    ]
  },
  {
    "objectID": "w12/slides.html#choose-your-own-adventure",
    "href": "w12/slides.html#choose-your-own-adventure",
    "title": "Week 12: Tools for Final Projects",
    "section": "Choose Your Own Adventure",
    "text": "Choose Your Own Adventure\n\nBonus HW5A: Re-doing Midterm Q3-Q5 (with new dataset)\n\nYou‚Äôve incurred ‚Äúfixed cost‚Äù of understanding Q1-Q3‚Ä¶\n\\(\\implies\\) Build on this fixed cost and complete ~Q4 + ~Q5 without time limit!\n\nBonus HW5B: Spatial Regression\n\nYour final project uses areal rather than point data‚Ä¶\n\\(\\implies\\) To prepare, do HW5B to learn/practice spatial regression and earn bonus points for doing so!"
  },
  {
    "objectID": "w12/slides.html#presentation-setup",
    "href": "w12/slides.html#presentation-setup",
    "title": "Week 12: Tools for Final Projects",
    "section": "Presentation Setup",
    "text": "Presentation Setup\n\nEach of your desks becomes a ‚Äútable‚Äù at a GIS conference!\nEveryone can go around and ask others about their projects üòª\nOnce I have grilled you on yours (~2-5mins), you are free to leave\nBut, FOOD \\(\\implies\\) you can also stay!"
  },
  {
    "objectID": "w12/slides.html#report-setup",
    "href": "w12/slides.html#report-setup",
    "title": "Week 12: Tools for Final Projects",
    "section": "Report Setup",
    "text": "Report Setup\n\nGitHub repository (for your portfolio!)\n\nGH Pages site: your_username.github.io/gis_project\n\n‚Ä¶What do you put in that GitHub repository?\nQuarto Manuscript\nWhat do you put in the Quarto manuscript?\nWriteup + Visualizations + Code, interspersed!\n\n‚ÄúLiterate Programming‚Äù \\(\\implies\\) Reproducible Results!"
  },
  {
    "objectID": "w12/slides.html#research-methodology-hypotheses",
    "href": "w12/slides.html#research-methodology-hypotheses",
    "title": "Week 12: Tools for Final Projects",
    "section": "Research Methodology: Hypotheses",
    "text": "Research Methodology: Hypotheses\n\nSocial Science (McCourt):\n\n\n\nMachine Learning (DSAN):"
  },
  {
    "objectID": "w12/slides.html#secretly-my-opportunity-to-do-more-spatial-regression",
    "href": "w12/slides.html#secretly-my-opportunity-to-do-more-spatial-regression",
    "title": "Week 12: Tools for Final Projects",
    "section": "(Secretly My Opportunity to do More Spatial Regression!)",
    "text": "(Secretly My Opportunity to do More Spatial Regression!)\n\nWhat explains previously-observed instances of separatist insurgencies?\nCan we predict separatist insurgencies?\nOne (spatial) idea: how far away are [centers of power] from [regions of countervailing power]?\n\\(X\\) = Distance from capital, \\(Y\\) = Insurgency\nUnit of observation: Regions? Insurgent uprisings? Countries?"
  },
  {
    "objectID": "w12/slides.html#operationalizing",
    "href": "w12/slides.html#operationalizing",
    "title": "Week 12: Tools for Final Projects",
    "section": "Operationalizing",
    "text": "Operationalizing\n\nThe variables in previous slide are conceptual\nOperationalizing = ‚ÄúTurning into measurable quantities‚Äù\n\\(X\\) = MeanDistance(Capital, Insurgent Region), \\(Y = \\mathbf{1}[\\text{Insurgency}]\\)\nAlternative:\n\n\\[\nY = \\begin{cases}\n2 &\\text{if Successful Insurgency} \\\\\n1 &\\text{if Failed Insurgency} \\\\\n0 &\\text{if No Insurgency}\n\\end{cases}\n\\]"
  },
  {
    "objectID": "w12/slides.html#connection-matrices",
    "href": "w12/slides.html#connection-matrices",
    "title": "Week 12: Tools for Final Projects",
    "section": "Connection Matrices",
    "text": "Connection Matrices\n\nspdep\nNeighbors if Centroids are close\nNeighbors if Capitals are close\nü§î"
  },
  {
    "objectID": "w12/slides.html#visualizing-spatial-data",
    "href": "w12/slides.html#visualizing-spatial-data",
    "title": "Week 12: Tools for Final Projects",
    "section": "Visualizing Spatial Data",
    "text": "Visualizing Spatial Data\n\nMy recommendation for final presentations: Leaflet"
  },
  {
    "objectID": "w12/slides.html#remote-sensed-raster-data",
    "href": "w12/slides.html#remote-sensed-raster-data",
    "title": "Week 12: Tools for Final Projects",
    "section": "Remote-Sensed / Raster Data",
    "text": "Remote-Sensed / Raster Data\n\nYou‚Äôve seen (to some extent) terra\nstars: Same group behind sf\nGoogle solar panel data\n.tif files: Dynamically loaded"
  },
  {
    "objectID": "w12/slides.html#anonymization-synthetic-datasets",
    "href": "w12/slides.html#anonymization-synthetic-datasets",
    "title": "Week 12: Tools for Final Projects",
    "section": "Anonymization / Synthetic Datasets",
    "text": "Anonymization / Synthetic Datasets\n\nDifferential privacy\nUsed by the US Census(!) Since 2020"
  },
  {
    "objectID": "w12/slides.html#references",
    "href": "w12/slides.html#references",
    "title": "Week 12: Tools for Final Projects",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "w12/index.html",
    "href": "w12/index.html",
    "title": "Week 12: Tools for Final Projects",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#choose-your-own-adventure",
    "href": "w12/index.html#choose-your-own-adventure",
    "title": "Week 12: Tools for Final Projects",
    "section": "Choose Your Own Adventure",
    "text": "Choose Your Own Adventure\n\nBonus HW5A: Re-doing Midterm Q3-Q5 (with new dataset)\n\nYou‚Äôve incurred ‚Äúfixed cost‚Äù of understanding Q1-Q3‚Ä¶\n\\(\\implies\\) Build on this fixed cost and complete ~Q4 + ~Q5 without time limit!\n\nBonus HW5B: Spatial Regression\n\nYour final project uses areal rather than point data‚Ä¶\n\\(\\implies\\) To prepare, do HW5B to learn/practice spatial regression and earn bonus points for doing so!",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#presentation-setup",
    "href": "w12/index.html#presentation-setup",
    "title": "Week 12: Tools for Final Projects",
    "section": "Presentation Setup",
    "text": "Presentation Setup\n\nEach of your desks becomes a ‚Äútable‚Äù at a GIS conference!\nEveryone can go around and ask others about their projects üòª\nOnce I have grilled you on yours (~2-5mins), you are free to leave\nBut, FOOD \\(\\implies\\) you can also stay!",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#report-setup",
    "href": "w12/index.html#report-setup",
    "title": "Week 12: Tools for Final Projects",
    "section": "Report Setup",
    "text": "Report Setup\n\nGitHub repository (for your portfolio!)\n\nGH Pages site: your_username.github.io/gis_project\n\n‚Ä¶What do you put in that GitHub repository?\nQuarto Manuscript\nWhat do you put in the Quarto manuscript?\nWriteup + Visualizations + Code, interspersed!\n\n‚ÄúLiterate Programming‚Äù \\(\\implies\\) Reproducible Results!",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#research-methodology-hypotheses",
    "href": "w12/index.html#research-methodology-hypotheses",
    "title": "Week 12: Tools for Final Projects",
    "section": "Research Methodology: Hypotheses",
    "text": "Research Methodology: Hypotheses\n\nSocial Science (McCourt):\n\n\n\nMachine Learning (DSAN):",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#secretly-my-opportunity-to-do-more-spatial-regression",
    "href": "w12/index.html#secretly-my-opportunity-to-do-more-spatial-regression",
    "title": "Week 12: Tools for Final Projects",
    "section": "(Secretly My Opportunity to do More Spatial Regression!)",
    "text": "(Secretly My Opportunity to do More Spatial Regression!)\n\nWhat explains previously-observed instances of separatist insurgencies?\nCan we predict separatist insurgencies?\nOne (spatial) idea: how far away are [centers of power] from [regions of countervailing power]?\n\\(X\\) = Distance from capital, \\(Y\\) = Insurgency\nUnit of observation: Regions? Insurgent uprisings? Countries?",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#operationalizing",
    "href": "w12/index.html#operationalizing",
    "title": "Week 12: Tools for Final Projects",
    "section": "Operationalizing",
    "text": "Operationalizing\n\nThe variables in previous slide are conceptual\nOperationalizing = ‚ÄúTurning into measurable quantities‚Äù\n\\(X\\) = MeanDistance(Capital, Insurgent Region), \\(Y = \\mathbf{1}[\\text{Insurgency}]\\)\nAlternative:\n\n\\[\nY = \\begin{cases}\n2 &\\text{if Successful Insurgency} \\\\\n1 &\\text{if Failed Insurgency} \\\\\n0 &\\text{if No Insurgency}\n\\end{cases}\n\\]",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#connection-matrices",
    "href": "w12/index.html#connection-matrices",
    "title": "Week 12: Tools for Final Projects",
    "section": "Connection Matrices",
    "text": "Connection Matrices\n\nspdep\nNeighbors if Centroids are close\nNeighbors if Capitals are close\nü§î",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#visualizing-spatial-data",
    "href": "w12/index.html#visualizing-spatial-data",
    "title": "Week 12: Tools for Final Projects",
    "section": "Visualizing Spatial Data",
    "text": "Visualizing Spatial Data\n\nMy recommendation for final presentations: Leaflet",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#remote-sensed-raster-data",
    "href": "w12/index.html#remote-sensed-raster-data",
    "title": "Week 12: Tools for Final Projects",
    "section": "Remote-Sensed / Raster Data",
    "text": "Remote-Sensed / Raster Data\n\nYou‚Äôve seen (to some extent) terra\nstars: Same group behind sf\nGoogle solar panel data\n.tif files: Dynamically loaded",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#anonymization-synthetic-datasets",
    "href": "w12/index.html#anonymization-synthetic-datasets",
    "title": "Week 12: Tools for Final Projects",
    "section": "Anonymization / Synthetic Datasets",
    "text": "Anonymization / Synthetic Datasets\n\nDifferential privacy\nUsed by the US Census(!) Since 2020",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "w12/index.html#references",
    "href": "w12/index.html#references",
    "title": "Week 12: Tools for Final Projects",
    "section": "References",
    "text": "References",
    "crumbs": [
      "Week 12: Nov 12"
    ]
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "",
    "text": "Welcome to the Fall 2025 version of Geographic Information Systems (GIS) for Spatial Data Science at Georgetown University! Please note that the most up-to-date version of this syllabus will always be available at jjacobs.me/ppol6805",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-staff-and-office-hours",
    "href": "syllabus.html#course-staff-and-office-hours",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Course Staff and Office Hours",
    "text": "Course Staff and Office Hours\n\nProf.¬†Jeff Jacobs, jj1088@georgetown.edu: Schedule office hour slots at jjacobs.me/meet\n\nTuesdays 3:30-6:00pm\n(Please try to schedule at least 8 hours in advance, and let me know briefly what you‚Äôd like to discuss, so I have time to prepare! For example, you can provide links to anything you‚Äôd like me to read beforehand, via the ‚ÄúAdditional Info‚Äù portion of the signup form)\n\nTA Christy Hsu, [th1010@georgetown.edu]\n\nCoding Workshop Coordinator (Fridays, 2-3pm in Car Barn 230)\n\nTA Yumi Li, [xl794@georgetown.edu]\n\nOffice hours by appointment",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-description",
    "href": "syllabus.html#course-description",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Course Description",
    "text": "Course Description\nThis course provides students with an overview of Geographic Information Systems (GIS), encompassing both general principles of geospatial data analysis and their applications for studying important issues of climate change, international conflict, economic development, and urban planning, among other areas of application.\nThe beginning of the course emphasizes fundamentals of GIS design and use, such as projection systems, raster and vector data, and efficient representation and storage of geospatial data. As students become more comfortable with these foundations, the course will shift to a greater emphasis on applications during the second half of the semester. Particular emphasis will be placed on effective visualization of spatial data, through creation of static publication-quality maps as well as interactive maps for web applications and data dashboards.\nThe course will utilize libraries from R, Python, and JavaScript as needed, so experience using any of these languages will be helpful, but is not required.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#assignment-structure",
    "href": "syllabus.html#assignment-structure",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Assignment Structure",
    "text": "Assignment Structure\nOn the basis of the guidelines we‚Äôve developed for courses offered through DSAN, this course will have one in-class midterm but no final exam! Instead, you will work on a final project throughout the second half of the course. Each of the four units will involve a homework assignment, and final grades will be determined using the following weighting scheme:\n\n\n\nCategory\nPercent of Final Grade\n\n\n\n\nIn-Class Midterm (Nov 5)\n25%\n\n\nFinal Project\n30%\n\n\nHomeworks\n45%\n\n\nHW1: GIS Concepts: Fun with Vectors and Rasters\n9%\n\n\nHW2: Unary and Binary Operations, Spatial Joins\n9%\n\n\nHW3: Autocorrelation and Clustering\n9%\n\n\nHW4: Point Hypothesis Evaluation\n9%\n\n\nHW5: Spatial Regression\n9%\n\n\n\nThe course does not have any ‚Äúofficial‚Äù prerequisites, but a general comfort with R and/or Python is helpful: most of the code shown on slides is in R, but we will also discuss equivalent Python libraries you can use if you prefer!\nIf you have never used R or Python before, however (or if you haven‚Äôt used it in a while and feel like your skills are rusty), you can:\n\nFirst browse the materials on the Resources page, and then\nAttend the weekly coding workshops led by TA Christy Hsu!",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-topics-calendar",
    "href": "syllabus.html#course-topics-calendar",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Course Topics / Calendar",
    "text": "Course Topics / Calendar\nThe following is a rough map of what we will work through together throughout the semester; given that everyone learns at a different pace, my aim is to leave us with a good amount of flexibility in terms of how much time we spend on each topic.\nIf I find that it takes me longer than a week to convey a certain topic in sufficient depth, for example, then I view it as a strength rather than a weakness of the course that we can then rearrange the calendar below by adding an extra week on that particular topic! Similarly, if it seems like I am spending too much time on a topic, to the point that students seem bored or impatient to move onto the next topic, we can move a topic intended for the next week to the current week!\nIf you find any discrepancies between this schedule and Georgetown‚Äôs official calendar, please let me know.\n\n\n\n\n\n\n\n\n\nUnit\nWeek\nDate\nTopic\n\n\n\n\nUnit 1: GIS Concepts\n1\nAug 27\nIntroduction to GIS\n\n\n\n2\nSep 3\nHow Do Maps Work?\n\n\n\n3\nSep 10\nVector and Raster Representations\nHW1 Released\n\n\nUnit 2: Geospatial Operations\n4\nSep 17\nUnary and Binary Operations\n\n\n\n5\nSep 24\nBinary Operations and Spatial Joins\n[Deliverable] HW1 due 11:59pm EDT; HW2 Release\n\n\nUnit 3: Spatial Data Science I: Foundations\n6\nOct 1\nSpatial Data Science: Random Fields and Spatial Autocorrelation\n\n\n\n7\nOct 8\nPoint Processes, Clustering, and Regularity\n[Deliverable] HW2 due 11:59pm EDT; HW3 Release\n\n\nUnit 4: Spatial Data Science II: Methods\n8\nOct 15\nNull Models and Marked Point Processes\n\n\n\n9\nOct 22\nEvaluating Spatial Hypotheses I: Point Data\n[Deliverable] HW3 due 11:59pm EDT; Midterm Guide Release\n\n\n\n10\nOct 29\nEvaluating Spatial Hypotheses II: Areal Data\n\n\n\n\n11\nNov 5\nIn-Class Midterm\nHW4 Release\n\n\nUnit 5: Final Projects\n12\nNov 12\nTools for Final Projects\n\n\n\n13\nNov 19\nIn-Class Office Hours\n[Deliverable] HW4 due 11:59pm EDT; HW5 Release\n\n\n\n\nNov 26\nNo Class (Fall Break)\n\n\n\n14\nDec 3\nFinal Project Poster Session\n\n\n\n\nDec 5 (Friday), 5:59pm\n[Deliverable] Final Project, HW5",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#assignment-distribution-submission-and-grading",
    "href": "syllabus.html#assignment-distribution-submission-and-grading",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Assignment Distribution, Submission, and Grading",
    "text": "Assignment Distribution, Submission, and Grading\nThe programming assignments for the course will be managed through a JupyterHub server, which you will connect to in order to work on assignments with more computing power than is possible on your laptops (and with the necessary GIS libraries pre-installed)! This means that, to work on and submit the assignments, you will use the workflow described in the Positron connection guide, which you can always find within the ‚ÄúWriteups‚Äù section linked in the sidebar.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#late-policy",
    "href": "syllabus.html#late-policy",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Late Policy",
    "text": "Late Policy\nAfter the due date, for each homework assignment, you will have a grace period of 24 hours to submit the assignment without a lateness penalty. After this 24 hour grace period, late penalties will be applied up until 66 hours after the due date. Specifically, late penalties will be applied based on the following scale (unless you obtain an excused lateness from one of the instructional staff!):\n\n0 to 24 hours after due date: no penalty\n24 to 30 hours after due date: 2.5% penalty\n30 to 42 hours after due date: 5% penalty\n42 to 54 hours after due date: 10% penalty\n54 to 66 hours after due date: 20% penalty\nMore than 66 hours after due date: Assignment submissions no longer accepted (without instructor approval)",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#final-letter-grade-determination",
    "href": "syllabus.html#final-letter-grade-determination",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Final Letter Grade Determination",
    "text": "Final Letter Grade Determination\nOnce all assignments have been graded, we will compute your final numeric grade according to the above weighting, rounded to two decimal places. The letter grade that we report to Georgetown on the basis of this numeric grade will then follow the DSAN letter grade policy as follows, where the start and end points for each range are inclusive:\n\n\n\nRange Start\nRange End\nLetter Grade\n\n\n\n\n92.50\n100.00\nA\n\n\n89.50\n92.49\nA-\n\n\n87.99\n89.49\nB+\n\n\n81.50\n87.98\nB\n\n\n79.50\n81.49\nB-\n\n\n69.50\n79.49\nC\n\n\n59.50\n69.49\nD\n\n\n0.00\n59.49\nF",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#title-ixsexual-misconduct-statement",
    "href": "syllabus.html#title-ixsexual-misconduct-statement",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Title IX/Sexual Misconduct Statement",
    "text": "Title IX/Sexual Misconduct Statement\nGeorgetown University and its faculty are committed to supporting survivors and those impacted by sexual misconduct, which includes sexual assault, sexual harassment, relationship violence, and stalking. Georgetown requires faculty members, unless otherwise designated as confidential, to report all disclosures of sexual misconduct to the University Title IX Coordinator or a Deputy Title IX Coordinator.\nIf you disclose an incident of sexual misconduct to a professor in or outside of the classroom (with the exception of disclosures in papers), that faculty member must report the incident to the Title IX Coordinator, or Deputy Title IX Coordinator. The coordinator will, in turn, reach out to the student to provide support, resources, and the option to meet. [Please note that the student is not required to meet with the Title IX coordinator.]. More information about reporting options and resources can be found in the Sexual Misconduct Resource Center.\nIf you would prefer to speak to someone confidentially, Georgetown has a number of fully confidential professional resources that can provide support and assistance. These resources include:\n\nHealth Education Services for Sexual Assault Response and Prevention: Confidential email sarp@georgetown.edu\nCounseling and Psychiatric Services (CAPS): 202-687-6985\n\nAfter hours you can call 833-960-3006 to reach Fonemed, a telehealth service, and ask for the on-call CAPS clinician",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#gsas-and-mccourt-resources-and-policies",
    "href": "syllabus.html#gsas-and-mccourt-resources-and-policies",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "GSAS and McCourt Resources and Policies",
    "text": "GSAS and McCourt Resources and Policies\nYou can find a collection of relevant resources and policies for students on the GSAS website, and the Provost‚Äôs policy on accommodating students‚Äô religious observances on the Campus Ministry website.\nYou can also make use of the Student Academic Resource Center. In particular, within the Resource Center there is a link to Georgetown‚Äôs Disability Support page. If you believe you have a disability, you can contact the Academic Resource Center (arc@georgetown.edu) for further information. The ARC is located in the Leavey Center, Suite 335 (202-687-8354), and it is the campus office responsible for reviewing documentation provided by students with disabilities and for determining reasonable accommodations in accordance with the Americans with Disabilities Act (ADA) and University policies.\n\nMcCourt Academic Integrity Policy\nMcCourt School students are expected to uphold the academic policies set forth by Georgetown University and the Graduate School of Arts and Sciences. Students should therefore familiarize themselves with all the rules, regulations, and procedures relevant to their pursuit of a Graduate School degree. The relevant policies are listed at this link.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "w06/slides.html#key-notation-definition",
    "href": "w06/slides.html#key-notation-definition",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Key Notation / Definition",
    "text": "Key Notation / Definition\n\n\n\\(d\\)-Dimensional ‚ÄúSpatial Process‚Äù (Schabenberger and Gotway 2004, 6)\n\n\\[\n\\text{Data} = \\left\\{Z(\\mathbf{s}) \\mid \\mathbf{s} \\in D \\subset \\mathbb{R}^d\\right\\}\n\\]\n\n\\(d &gt; 1\\): Data forms a Random Field (this class: \\(d = 2\\)!)\n\n\n\n\n\n\n\n\n\n\n\n\nGeostatistical Data\nLattice/Region Data\nPoint Pattern\n\n\n\n\nCriteria\nFixed \\(D\\), Continuous\nFixed \\(D\\), Discrete\nRandom subset \\(D^* \\subseteq D\\)\n\n\nInterest\nInfer non-observed parts of \\(D\\)\nAutocorrelation, clustering\nPoint-generating process\n\n\nExample\n\n\\(N\\) trees \\(\\mathbf{s}_1, \\mathbf{s}_2, \\ldots, \\mathbf{s}_N\\), observed within a sample window \\(D \\subset \\mathbb{R}^2\\), (\\(D\\) some finite plot of land)\n\\(Z(\\mathbf{s}_i)\\): Attribute(s) at site \\(\\mathbf{s}_i\\)\nExample: Height. \\(Z(\\mathbf{s}_1) = 500\\text{m}\\), \\(Z(\\mathbf{s}_2) = 850\\text{m}\\), \\(\\ldots\\)\n\n\n\\(Z(\\mathbf{s})\\) observed over \\(N \\times N\\) grid of plots\n\\(\\Rightarrow\\) Contiguity, Neighbors (next section of slides!)\n\\(\\Rightarrow\\) Autocorrelation: Are points around \\(\\mathbf{s}_i\\) likely to have values similar to \\(Z(\\mathbf{s}_i)\\)?\n\n\nUnknown number of lightning strikes \\(\\mathbf{s}_1, \\mathbf{s}_2, \\ldots\\)\nContrast with geostatistical: all of \\(D\\) is observed, but what determines the subset \\(D^*\\) where events occur?\n‚ÄúUnmarked‚Äù: Just locations\n‚ÄúMarked‚Äù: Locations+info (e.g., intensity of strike)"
  },
  {
    "objectID": "w06/slides.html#geostatistical-data-dumping-sand-onto-a-table",
    "href": "w06/slides.html#geostatistical-data-dumping-sand-onto-a-table",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Geostatistical Data: Dumping Sand onto a Table",
    "text": "Geostatistical Data: Dumping Sand onto a Table\n\nDomain \\(D\\): tabletop; Random process: dumping sand onto the tabletop\n\\(\\Omega\\): All possible realizations of process. \\(\\omega_i \\in \\Omega\\) Particular realization\n\n\n\n\n\n\n\nFigure¬†1: \\(\\omega_1 \\in \\Omega\\)\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†2: \\(\\omega_2 \\in \\Omega\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†3: \\(\\omega_3 \\in \\Omega\\)\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†4: \\(\\omega_4 \\in \\Omega\\)"
  },
  {
    "objectID": "w06/slides.html#geostatistical-modeling-terrains-are-not-spiky-chaotic-landscapes",
    "href": "w06/slides.html#geostatistical-modeling-terrains-are-not-spiky-chaotic-landscapes",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Geostatistical Modeling: Terrains Are Not Spiky Chaotic Landscapes!",
    "text": "Geostatistical Modeling: Terrains Are Not Spiky Chaotic Landscapes!"
  },
  {
    "objectID": "w06/slides.html#geostatistical-data-rightarrow-point-pattern",
    "href": "w06/slides.html#geostatistical-data-rightarrow-point-pattern",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Geostatistical Data \\(\\rightarrow\\) Point Pattern",
    "text": "Geostatistical Data \\(\\rightarrow\\) Point Pattern\n\n\n\nIndicator function: \\(\\mathbb{1}\\left[Z(\\mathbf{s}) &gt; 860\\text{m}\\right]\\)\n\n\n\nCode\nset.seed(6805)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(latex2exp)\n#### Define area\nlat_range &lt;- c(-5.0, -6.0)\nlon_range &lt;- c(15, 20)\n#lon_center &lt;- -5.4\n#lat_center &lt;- 36.75\n# And the window around this centroid\nlat_radius &lt;- 0.05\nlon_radius &lt;- 0.1\n\ngen_random_table &lt;- function(world_num=1, return_data=FALSE, rand_seed=NULL) {\n  if (!is.null(rand_seed)) {\n    set.seed(rand_seed)\n  } else {\n    rand_seed &lt;- sample(1:9999, size=1)\n    set.seed(rand_seed)\n  }\n  lat_center &lt;- runif(1, min=min(lat_range), max=max(lat_range))\n  lon_center &lt;- runif(1, min=min(lon_range), max=max(lon_range))\n  lon_lower &lt;- lon_center - lon_radius\n  lon_upper &lt;- lon_center + lon_radius\n  lat_lower &lt;- lat_center - lat_radius\n  lat_upper &lt;- lat_center + lat_radius\n  coords &lt;- data.frame(x = c(lon_lower, lon_lower, lon_upper, lon_upper),\n                       y = c(lat_lower, lat_upper, lat_lower, lat_upper))\n  coords_sf &lt;- st_as_sf(coords, coords = c(\"x\", \"y\"), crs = 4326)\n  # Using geodata\n  elev &lt;- geodata::elevation_3s(lon = lon_center, lat = lat_center, res=2.5, path = getwd())\n  elev &lt;- terra::crop(elev, coords_sf)\n  return(elev)\n}\n\ncompute_hillshade &lt;- function(elev) {\n  # Calculate hillshade\n  slopes &lt;- terra::terrain(elev, \"slope\", unit = \"radians\")\n  aspect &lt;- terra::terrain(elev, \"aspect\", unit = \"radians\")\n  hs &lt;- terra::shade(slopes, aspect)\n  return(hs)\n}\n\nplot_hillshade &lt;- function(elev, hs, title=NULL) {\n  ## Plot hillshading as basemap\n  # (here using terra::plot, but could use tmap)\n  # lat_upper_trimmed &lt;- lat_upper - 0.001*lat_upper\n  # lat_lower_trimmed &lt;- lat_lower - 0.001*lat_lower\n  base_plot &lt;- terra::plot(\n    hs, col = gray(0:100 / 100), legend = FALSE, axes = FALSE, mar=c(0,0,1,0), grid=TRUE\n  )\n  #    xlim = c(elev_xmin, elev_xmax), ylim = c(elev_ymin, elev_ymax))\n  # overlay with elevation\n  \n  color_vec &lt;- terrain.colors(25)\n  plot(elev, col = color_vec, alpha = 0.5, legend = FALSE, axes = FALSE, add = TRUE)\n  \n  # add contour lines\n  terra::contour(elev, col = \"grey30\", add = TRUE)\n  if (!is.null(title)) {\n    world_name &lt;- TeX(sprintf(r\"(World $\\omega_{%d} \\in \\Omega$)\", world_num))\n    title(world_name)\n  }\n}\nelev_r1 &lt;- gen_random_table(rand_seed=6810)\nhs_r1 &lt;- compute_hillshade(elev_r1)\nplot_hillshade(elev_r1, hs_r1)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nelev_indic_r1 &lt;- terra::ifel(\n  elev_r1 &gt; 860, elev_r1, NA\n)\nplot(elev_indic_r1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nelev_r2 &lt;- gen_random_table(rand_seed=6815)\nhs_r2 &lt;- compute_hillshade(elev_r2)\nplot_hillshade(elev_r2, hs_r2)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nmy_quant &lt;- function(x) quantile(x, 0.99)\nelev_99 &lt;- terra::global(elev_r2, my_quant)[1,1]\nelev_indic_r2 &lt;- terra::ifel(\n  elev_r2 &gt; elev_99, elev_r2, NA\n)\nplot(elev_indic_r2)"
  },
  {
    "objectID": "w06/slides.html#geospatial-data-rightarrow-latticeregion-data",
    "href": "w06/slides.html#geospatial-data-rightarrow-latticeregion-data",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Geospatial Data \\(\\rightarrow\\) Lattice/Region Data",
    "text": "Geospatial Data \\(\\rightarrow\\) Lattice/Region Data\n\n\n\n\nCode\ntable_elev &lt;- gen_random_table(rand_seed=6805)\ntable_hs &lt;- compute_hillshade(table_elev)\n#plot_hillshade(table_elev, table_hs)\n#par(mfrow=c(1,2), mar=c(0,0,1,1))\nplot(table_elev)\n\n\n\n\n\n(Pretend this is infinite-resolution) Infinite number of neighbors around each point!\n\n\n\n\n\n\n\nCode\nelev_coarse &lt;- terra::aggregate(table_elev, 12)\nplot(elev_coarse)\n\n\n\n\n\nFinite number of neighbors around each observation \\(\\implies\\) Can study correlations between neighboring cells!"
  },
  {
    "objectID": "w06/slides.html#who-are-my-neighbors",
    "href": "w06/slides.html#who-are-my-neighbors",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Who Are My Neighbors?",
    "text": "Who Are My Neighbors?\n\nContiguity-Based:\n\n\n\n\n\n\n\n\nDistance-Based\n\\(K\\)-Nearest Neighbors"
  },
  {
    "objectID": "w06/slides.html#distance-based-neighbors",
    "href": "w06/slides.html#distance-based-neighbors",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Distance-Based Neighbors",
    "text": "Distance-Based Neighbors\n\nFrom Xie (2023)"
  },
  {
    "objectID": "w06/slides.html#spatial-autocorrelation",
    "href": "w06/slides.html#spatial-autocorrelation",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Spatial Autocorrelation",
    "text": "Spatial Autocorrelation\n\nLocation \\(i\\) has high value \\(\\implies\\) locations near \\(i\\) more likely to have high values"
  },
  {
    "objectID": "w06/slides.html#morans-i",
    "href": "w06/slides.html#morans-i",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Moran‚Äôs \\(I\\)",
    "text": "Moran‚Äôs \\(I\\)\n\\[\nI =\n\\underset{\\text{Inverse of Variance}}{\\boxed{\\frac{n}{\\sum_{i=1}^{n}(y_i - \\overline{y})^2}}}\n\\frac\n  {\\overbrace{\\sum_{i=1}^{n}\\sum_{j=1}^{n}w_{ij}(y_i - \\overline{y})(y_j - \\overline{y})}^{\\text{Weighted Covariance}}}\n  {\\underbrace{\\sum_{i=1}^{n}\\sum_{j=1}^{n}w_{ij}}_{\\text{Normalize Weights}}}\n\\]\n\n\\(I\\) is Large when:\n\n\\(y_i\\) and \\(y_j\\) are neighbors: \\(w_{ij}\\), and\n\\(y_i\\) and \\(y_j\\) large at the same time: \\((y_i - \\overline{y})(y_j - \\overline{y})\\)"
  },
  {
    "objectID": "w06/slides.html#local-indicators-of-spatial-autocorrelation-lisa",
    "href": "w06/slides.html#local-indicators-of-spatial-autocorrelation-lisa",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Local Indicators of Spatial Autocorrelation (LISA)",
    "text": "Local Indicators of Spatial Autocorrelation (LISA)\n\ntldr: See how much a given location \\(\\mathbf{s}\\) contributes to overall Moran‚Äôs \\(I\\)\nLocal Moran‚Äôs \\(I\\):\n\n\\[\nI_i = \\frac{y_i - \\overline{y}}{S_i^2}\\sum_{j=1}^{n}w_{ij}(y_j - \\overline{y})\n\\]"
  },
  {
    "objectID": "w06/slides.html#leaving-you-with-a-challenge",
    "href": "w06/slides.html#leaving-you-with-a-challenge",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Leaving You With a Challenge",
    "text": "Leaving You With a Challenge\n\nThese point patterns can be classified as clustered or regular:"
  },
  {
    "objectID": "w06/slides.html#leaving-you-with-a-challenge-1",
    "href": "w06/slides.html#leaving-you-with-a-challenge-1",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Leaving You With a Challenge",
    "text": "Leaving You With a Challenge"
  },
  {
    "objectID": "w06/slides.html#references",
    "href": "w06/slides.html#references",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "References",
    "text": "References\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2004. Statistical Methods for Spatial Data Analysis. CRC Press.\n\n\nXie, Sherrie. 2023. ‚ÄúAnalyzing Geospatial Data in R.‚Äù"
  },
  {
    "objectID": "w06/index.html",
    "href": "w06/index.html",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#key-notation-definition",
    "href": "w06/index.html#key-notation-definition",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Key Notation / Definition",
    "text": "Key Notation / Definition\n\n\n\\(d\\)-Dimensional ‚ÄúSpatial Process‚Äù (Schabenberger and Gotway 2004, 6)\n\n\\[\n\\text{Data} = \\left\\{Z(\\mathbf{s}) \\mid \\mathbf{s} \\in D \\subset \\mathbb{R}^d\\right\\}\n\\]\n\n\\(d &gt; 1\\): Data forms a Random Field (this class: \\(d = 2\\)!)\n\n\n\n\n\n\n\n\n\n\n\n\nGeostatistical Data\nLattice/Region Data\nPoint Pattern\n\n\n\n\nCriteria\nFixed \\(D\\), Continuous\nFixed \\(D\\), Discrete\nRandom subset \\(D^* \\subseteq D\\)\n\n\nInterest\nInfer non-observed parts of \\(D\\)\nAutocorrelation, clustering\nPoint-generating process\n\n\nExample\n\n\\(N\\) trees \\(\\mathbf{s}_1, \\mathbf{s}_2, \\ldots, \\mathbf{s}_N\\), observed within a sample window \\(D \\subset \\mathbb{R}^2\\), (\\(D\\) some finite plot of land)\n\\(Z(\\mathbf{s}_i)\\): Attribute(s) at site \\(\\mathbf{s}_i\\)\nExample: Height. \\(Z(\\mathbf{s}_1) = 500\\text{m}\\), \\(Z(\\mathbf{s}_2) = 850\\text{m}\\), \\(\\ldots\\)\n\n\n\\(Z(\\mathbf{s})\\) observed over \\(N \\times N\\) grid of plots\n\\(\\Rightarrow\\) Contiguity, Neighbors (next section of slides!)\n\\(\\Rightarrow\\) Autocorrelation: Are points around \\(\\mathbf{s}_i\\) likely to have values similar to \\(Z(\\mathbf{s}_i)\\)?\n\n\nUnknown number of lightning strikes \\(\\mathbf{s}_1, \\mathbf{s}_2, \\ldots\\)\nContrast with geostatistical: all of \\(D\\) is observed, but what determines the subset \\(D^*\\) where events occur?\n‚ÄúUnmarked‚Äù: Just locations\n‚ÄúMarked‚Äù: Locations+info (e.g., intensity of strike)",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#geostatistical-data-dumping-sand-onto-a-table",
    "href": "w06/index.html#geostatistical-data-dumping-sand-onto-a-table",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Geostatistical Data: Dumping Sand onto a Table",
    "text": "Geostatistical Data: Dumping Sand onto a Table\n\nDomain \\(D\\): tabletop; Random process: dumping sand onto the tabletop\n\\(\\Omega\\): All possible realizations of process. \\(\\omega_i \\in \\Omega\\) Particular realization\n\n\n\n\n\n\n\nFigure¬†1: \\(\\omega_1 \\in \\Omega\\)\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†2: \\(\\omega_2 \\in \\Omega\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†3: \\(\\omega_3 \\in \\Omega\\)\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†4: \\(\\omega_4 \\in \\Omega\\)",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#geostatistical-modeling-terrains-are-not-spiky-chaotic-landscapes",
    "href": "w06/index.html#geostatistical-modeling-terrains-are-not-spiky-chaotic-landscapes",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Geostatistical Modeling: Terrains Are Not Spiky Chaotic Landscapes!",
    "text": "Geostatistical Modeling: Terrains Are Not Spiky Chaotic Landscapes!",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#geostatistical-data-rightarrow-point-pattern",
    "href": "w06/index.html#geostatistical-data-rightarrow-point-pattern",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Geostatistical Data \\(\\rightarrow\\) Point Pattern",
    "text": "Geostatistical Data \\(\\rightarrow\\) Point Pattern\n\n\n\nIndicator function: \\(\\mathbb{1}\\left[Z(\\mathbf{s}) &gt; 860\\text{m}\\right]\\)\n\n\n\nCode\nset.seed(6805)\nlibrary(tidyverse)\n\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.5.1     ‚úî tibble    3.3.0\n‚úî lubridate 1.9.4     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.4     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(sf)\n\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\nCode\nlibrary(terra)\n\n\nterra 1.8.60\n\nAttaching package: 'terra'\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\n\nCode\nlibrary(latex2exp)\n#### Define area\nlat_range &lt;- c(-5.0, -6.0)\nlon_range &lt;- c(15, 20)\n#lon_center &lt;- -5.4\n#lat_center &lt;- 36.75\n# And the window around this centroid\nlat_radius &lt;- 0.05\nlon_radius &lt;- 0.1\n\ngen_random_table &lt;- function(world_num=1, return_data=FALSE, rand_seed=NULL) {\n  if (!is.null(rand_seed)) {\n    set.seed(rand_seed)\n  } else {\n    rand_seed &lt;- sample(1:9999, size=1)\n    set.seed(rand_seed)\n  }\n  lat_center &lt;- runif(1, min=min(lat_range), max=max(lat_range))\n  lon_center &lt;- runif(1, min=min(lon_range), max=max(lon_range))\n  lon_lower &lt;- lon_center - lon_radius\n  lon_upper &lt;- lon_center + lon_radius\n  lat_lower &lt;- lat_center - lat_radius\n  lat_upper &lt;- lat_center + lat_radius\n  coords &lt;- data.frame(x = c(lon_lower, lon_lower, lon_upper, lon_upper),\n                       y = c(lat_lower, lat_upper, lat_lower, lat_upper))\n  coords_sf &lt;- st_as_sf(coords, coords = c(\"x\", \"y\"), crs = 4326)\n  # Using geodata\n  elev &lt;- geodata::elevation_3s(lon = lon_center, lat = lat_center, res=2.5, path = getwd())\n  elev &lt;- terra::crop(elev, coords_sf)\n  return(elev)\n}\n\ncompute_hillshade &lt;- function(elev) {\n  # Calculate hillshade\n  slopes &lt;- terra::terrain(elev, \"slope\", unit = \"radians\")\n  aspect &lt;- terra::terrain(elev, \"aspect\", unit = \"radians\")\n  hs &lt;- terra::shade(slopes, aspect)\n  return(hs)\n}\n\nplot_hillshade &lt;- function(elev, hs, title=NULL) {\n  ## Plot hillshading as basemap\n  # (here using terra::plot, but could use tmap)\n  # lat_upper_trimmed &lt;- lat_upper - 0.001*lat_upper\n  # lat_lower_trimmed &lt;- lat_lower - 0.001*lat_lower\n  base_plot &lt;- terra::plot(\n    hs, col = gray(0:100 / 100), legend = FALSE, axes = FALSE, mar=c(0,0,1,0), grid=TRUE\n  )\n  #    xlim = c(elev_xmin, elev_xmax), ylim = c(elev_ymin, elev_ymax))\n  # overlay with elevation\n  \n  color_vec &lt;- terrain.colors(25)\n  plot(elev, col = color_vec, alpha = 0.5, legend = FALSE, axes = FALSE, add = TRUE)\n  \n  # add contour lines\n  terra::contour(elev, col = \"grey30\", add = TRUE)\n  if (!is.null(title)) {\n    world_name &lt;- TeX(sprintf(r\"(World $\\omega_{%d} \\in \\Omega$)\", world_num))\n    title(world_name)\n  }\n}\nelev_r1 &lt;- gen_random_table(rand_seed=6810)\nhs_r1 &lt;- compute_hillshade(elev_r1)\nplot_hillshade(elev_r1, hs_r1)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nelev_indic_r1 &lt;- terra::ifel(\n  elev_r1 &gt; 860, elev_r1, NA\n)\nplot(elev_indic_r1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nelev_r2 &lt;- gen_random_table(rand_seed=6815)\nhs_r2 &lt;- compute_hillshade(elev_r2)\nplot_hillshade(elev_r2, hs_r2)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nmy_quant &lt;- function(x) quantile(x, 0.99)\nelev_99 &lt;- terra::global(elev_r2, my_quant)[1,1]\nelev_indic_r2 &lt;- terra::ifel(\n  elev_r2 &gt; elev_99, elev_r2, NA\n)\nplot(elev_indic_r2)",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#geospatial-data-rightarrow-latticeregion-data",
    "href": "w06/index.html#geospatial-data-rightarrow-latticeregion-data",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Geospatial Data \\(\\rightarrow\\) Lattice/Region Data",
    "text": "Geospatial Data \\(\\rightarrow\\) Lattice/Region Data\n\n\n\n\nCode\ntable_elev &lt;- gen_random_table(rand_seed=6805)\ntable_hs &lt;- compute_hillshade(table_elev)\n#plot_hillshade(table_elev, table_hs)\n#par(mfrow=c(1,2), mar=c(0,0,1,1))\nplot(table_elev)\n\n\n\n\n\n(Pretend this is infinite-resolution) Infinite number of neighbors around each point!\n\n\n\n\n\n\n\nCode\nelev_coarse &lt;- terra::aggregate(table_elev, 12)\nplot(elev_coarse)\n\n\n\n\n\nFinite number of neighbors around each observation \\(\\implies\\) Can study correlations between neighboring cells!",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#who-are-my-neighbors",
    "href": "w06/index.html#who-are-my-neighbors",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Who Are My Neighbors?",
    "text": "Who Are My Neighbors?\n\nContiguity-Based:\n\n\n\n\n\n\n\n\nDistance-Based\n\\(K\\)-Nearest Neighbors",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#distance-based-neighbors",
    "href": "w06/index.html#distance-based-neighbors",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Distance-Based Neighbors",
    "text": "Distance-Based Neighbors\n\n\n\nFrom Xie (2023)",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#spatial-autocorrelation",
    "href": "w06/index.html#spatial-autocorrelation",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Spatial Autocorrelation",
    "text": "Spatial Autocorrelation\n\nLocation \\(i\\) has high value \\(\\implies\\) locations near \\(i\\) more likely to have high values",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#morans-i",
    "href": "w06/index.html#morans-i",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Moran‚Äôs \\(I\\)",
    "text": "Moran‚Äôs \\(I\\)\n\\[\nI =\n\\underset{\\text{Inverse of Variance}}{\\boxed{\\frac{n}{\\sum_{i=1}^{n}(y_i - \\overline{y})^2}}}\n\\frac\n  {\\overbrace{\\sum_{i=1}^{n}\\sum_{j=1}^{n}w_{ij}(y_i - \\overline{y})(y_j - \\overline{y})}^{\\text{Weighted Covariance}}}\n  {\\underbrace{\\sum_{i=1}^{n}\\sum_{j=1}^{n}w_{ij}}_{\\text{Normalize Weights}}}\n\\]\n\n\\(I\\) is Large when:\n\n\\(y_i\\) and \\(y_j\\) are neighbors: \\(w_{ij}\\), and\n\\(y_i\\) and \\(y_j\\) large at the same time: \\((y_i - \\overline{y})(y_j - \\overline{y})\\)",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#local-indicators-of-spatial-autocorrelation-lisa",
    "href": "w06/index.html#local-indicators-of-spatial-autocorrelation-lisa",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Local Indicators of Spatial Autocorrelation (LISA)",
    "text": "Local Indicators of Spatial Autocorrelation (LISA)\n\ntldr: See how much a given location \\(\\mathbf{s}\\) contributes to overall Moran‚Äôs \\(I\\)\nLocal Moran‚Äôs \\(I\\):\n\n\\[\nI_i = \\frac{y_i - \\overline{y}}{S_i^2}\\sum_{j=1}^{n}w_{ij}(y_j - \\overline{y})\n\\]",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#leaving-you-with-a-challenge",
    "href": "w06/index.html#leaving-you-with-a-challenge",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Leaving You With a Challenge",
    "text": "Leaving You With a Challenge\n\nThese point patterns can be classified as clustered or regular:",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#leaving-you-with-a-challenge-1",
    "href": "w06/index.html#leaving-you-with-a-challenge-1",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "Leaving You With a Challenge",
    "text": "Leaving You With a Challenge",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w06/index.html#references",
    "href": "w06/index.html#references",
    "title": "Week 6: Spatial Data Science: Random Fields and Spatial Autocorrelation",
    "section": "References",
    "text": "References\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2004. Statistical Methods for Spatial Data Analysis. CRC Press.\n\n\nXie, Sherrie. 2023. ‚ÄúAnalyzing Geospatial Data in R.‚Äù",
    "crumbs": [
      "Week 6: Oct 1"
    ]
  },
  {
    "objectID": "w08/slides.html#from-last-week-our-new-library-spatstat",
    "href": "w08/slides.html#from-last-week-our-new-library-spatstat",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "[From Last Week] Our New Library: spatstat!",
    "text": "[From Last Week] Our New Library: spatstat!\n\n\n\nHomepage: spatstat.org\nGitHub: github.com/spatstat\nBook: Baddeley, Rubak, and Turner (2015) [Companion website]\nPDF: here"
  },
  {
    "objectID": "w08/slides.html#ppp-objects",
    "href": "w08/slides.html#ppp-objects",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "ppp Objects",
    "text": "ppp Objects\n\nThe main datatype used to represent Planar Point Patterns [spatstat book p.¬†41]\nUnlike sf objects, which contain data+geometries for any desired collection of \\(N\\) entities, ppp objects are required to have at least an observation window!\n\n\n\nsf Creation:\n\n\nCode\ntree_df &lt;- tibble::tibble(lon=runif(100,0,1), lat=runif(100,0,1), age=runif(100,0,1))\ntree_sf &lt;- sf::st_as_sf(\n  tree_df,\n  coords = c('lon', 'lat')\n)\ntree_sf |&gt; head(4)\n\n\n\n\n\n\nage\ngeometry\n\n\n\n\n0.0233144\nPOINT (0.1487039 0.5640943)\n\n\n0.6882371\nPOINT (0.1248064 0.8612631)\n\n\n0.3889197\nPOINT (0.6370261 0.5268693)\n\n\n0.6638135\nPOINT (0.5211425 0.4551448)\n\n\n\n\n\n\n\nppp Creation:\n\n\nCode\npois_ppp &lt;- spatstat.random::rpoispp(\n  lambda=100, win=spatstat.geom::square(1)\n)\npois_ppp\n\n\nPlanar point pattern: 91 points\nwindow: rectangle = [0, 1] x [0, 1] units\n\n\nCode\nattributes(pois_ppp)$names\n\n\n[1] \"window\"     \"n\"          \"x\"          \"y\"          \"markformat\"\n\n\nCode\npois_ppp$x |&gt; head(4)\n\n\n[1] 0.5735346 0.7526621 0.8129999 0.7419696"
  },
  {
    "objectID": "w08/slides.html#ppp-leftrightarrow-sf-conversion",
    "href": "w08/slides.html#ppp-leftrightarrow-sf-conversion",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "ppp \\(\\leftrightarrow\\) sf Conversion",
    "text": "ppp \\(\\leftrightarrow\\) sf Conversion\n\n\nppp to sf Conversion:\n\n\nCode\npois_sf &lt;- pois_ppp |&gt; sf::st_as_sf()\npois_sf |&gt; head(4)\n\n\n\n\n\n\nlabel\ngeom\n\n\n\n\nwindow\nPOLYGON ((0 0, 1 0, 1 1, 0 ‚Ä¶\n\n\npoint\nPOINT (0.5735346 0.6204983)\n\n\npoint\nPOINT (0.7526621 0.4205887)\n\n\npoint\nPOINT (0.8129999 0.6844816)\n\n\n\n\n\n\n\n\nCode\npois_sf |&gt; ggplot() +\n  geom_sf(data=pois_sf |&gt; filter(label==\"window\"), aes(fill='grey')) +\n  geom_sf(data=pois_sf |&gt; filter(label != \"window\"), aes(color='black')) +\n  md_theme_classic(base_size=26) +\n  scale_fill_manual(name=NULL, values=c(\"gray90\"), labels=c(\"&lt;span style='font-family: mono'&gt;label == 'window'&lt;/span&gt;\")) +\n  scale_color_manual(name=NULL, values=c(\"black\"), labels=c(\"&lt;span style='font-family: mono'&gt;label == 'point'&lt;/span&gt;\")) +\n  labs(title = \"&lt;span style='font-family: mono'&gt;ppp&lt;/span&gt; &rarr; &lt;span style='font-family: mono'&gt;sf&lt;/span&gt; Result\")\n\n\n\n\n\n\n\n\n\n\nsf to ppp Conversion:\n\n\nCode\nsquare_sfc &lt;- sf::st_polygon(list(\n  matrix(c(0,0,1,0,1,1,0,1,0,0), nrow=5, byrow=TRUE)\n)) |&gt; sf::st_sfc()\ntree_ppp &lt;- as.ppp(\n  sf::st_as_sfc(tree_sf),\n  W=as.owin(square_sfc)\n)\ntree_ppp\n\n\nPlanar point pattern: 100 points\nwindow: polygonal boundary\nenclosing rectangle: [0, 1] x [0, 1] units\n\n\n\n\nCode\ntree_ppp_sf &lt;- tree_ppp |&gt; sf::st_as_sf()\ntree_ppp_sf |&gt; ggplot() +\n  geom_sf(aes(fill='gray90')) +\n  geom_sf(data=tree_ppp_sf |&gt; filter(label != \"window\"), aes(color='black')) +\n  md_theme_classic(base_size=26) +\n  scale_fill_manual(name=NULL, values=c(\"gray90\"), labels=c(\"&lt;span style='font-family: mono'&gt;tree_ppp$window&lt;/span&gt;\")) +\n  scale_color_manual(name=NULL, values=c(\"black\"), labels=c(\"&lt;span style='font-family: mono'&gt;tree_ppp${x,y}&lt;/span&gt;\")) +\n  labs(\n    title = \"&lt;span style='font-family: mono'&gt;sf&lt;/span&gt; &rarr; &lt;span style='font-family: mono'&gt;ppp&lt;/span&gt; Result\",\n    x=\"&lt;span style='font-family: mono'&gt;tree_ppp$x&lt;/span&gt;\",\n    y=\"&lt;span style='font-family: mono'&gt;tree_ppp$y&lt;/span&gt;\"\n  ) + \n  guides(fill = guide_legend(order = 1), \n              color = guide_legend(order = 2))"
  },
  {
    "objectID": "w08/slides.html#the-tree-grid-mystery",
    "href": "w08/slides.html#the-tree-grid-mystery",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "The Tree-Grid Mystery",
    "text": "The Tree-Grid Mystery\n\nYou‚Äôve been hired as an archaeologist‚Äîcongratulations! Your job: determine whether arrangement of trees formed:\n\nNaturally, via a process of resource competition, or\nArtificially, via an ancient civilization planting in a grid‚Ä¶"
  },
  {
    "objectID": "w08/slides.html#two-possible-histories",
    "href": "w08/slides.html#two-possible-histories",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Two Possible Histories‚Ä¶",
    "text": "Two Possible Histories‚Ä¶\n\nHypothesis \\(\\mathcal{H}_{\\textsf{Art}}\\): Artificial Formation\n\n\n\n\n\nCode (Step 1: Grid Creation)\nha_base &lt;- 28\nsquare_sf &lt;- sf::st_as_sf(spatstat.geom::square(1))\ngrid_sf &lt;- sf::st_as_sf(sf::st_make_grid(square_sf))\ngrid_buffer_sf &lt;- grid_sf |&gt; sf::st_buffer(dist=-0.01, singleSide = TRUE)\ngrid_buffer_sf |&gt; ggplot() +\n  geom_sf() +\n  theme_classic(base_size=ha_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode (Step 2: Point Generation)\ngrid_points &lt;- sf::st_sample(grid_buffer_sf, size=rep(1,100))\ngrid_buffer_sf |&gt; ggplot() +\n  geom_sf() +\n  geom_sf(data=grid_points) +\n  theme_classic(base_size=ha_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode (Step 3: Observed Result)\ngrid_ppp &lt;- as.ppp(grid_points, W=spatstat.geom::square(1))\ngrid_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf() +\n  theme_classic(base_size=ha_base)\n\n\n\n\n\n\n\n\n\n\n\nHypothesis \\(\\mathcal{H}_{\\textsf{Nat}}\\): Natural Formation\n\n\n\n\n\nCode (Step 1: Tree Generation)\nhn_base &lt;- 28\nr &lt;- 0.05\npois_ppp &lt;- rpoispp(150)\npois_sf &lt;- pois_ppp |&gt; sf::st_as_sf()\npois_sf |&gt; ggplot() +\n  geom_sf() +\n  theme_classic(base_size=hn_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode (Step 2: Competition)\nage &lt;- runif(npoints(pois_ppp))\npair_dists &lt;- pairdist(pois_ppp)\nclose &lt;- (pair_dists &lt; r)\nlater &lt;- outer(age, age, \"&gt;\")\nkilled &lt;- apply(close & later, 1, any)\nkilled_ppp &lt;- pois_ppp[killed]\nalive_ppp &lt;- pois_ppp[!killed]\npois_window_sf &lt;- pois_ppp |&gt; sf::st_as_sf() |&gt; filter(label==\"window\")\npois_killed_sf &lt;- killed_ppp |&gt; sf::st_as_sf() |&gt; filter(label==\"point\")\npois_alive_sf &lt;- alive_ppp |&gt; sf::st_as_sf() |&gt; filter(label==\"point\")\nalive_buff_sf &lt;- pois_alive_sf |&gt; sf::st_buffer(r) |&gt; sf::st_union() |&gt; sf::st_intersection(pois_window_sf)\nggplot() +\n  geom_sf(data=pois_window_sf) +\n  geom_sf(data=alive_buff_sf, aes(color='Inhibition', shape='Inhibition'), linetype='dashed') +\n  geom_sf(data=pois_killed_sf, aes(color='Dead', shape='Dead'), size=2, stroke=2) +\n  geom_sf(data=pois_alive_sf, aes(color='Alive', shape='Alive'), size=1, stroke=1) +\n  scale_shape_manual(name=NULL, values=c(\"Alive\"=19, \"Dead\"=4, 'Inhibition'=21), labels=c(\"Alive\", \"Dead\", \"Inhibition\")) +\n  scale_color_manual(name=NULL, values=c(\"Alive\"=\"black\", \"Dead\"=cb_palette[1], \"Inhibition\"=\"black\"), labels=c(\"Alive\", \"Dead\", \"Inhibition\")) +\n  guides(shape=guide_legend(override.aes=list(fill = \"white\"))) +\n  theme_classic(base_size = hn_base) +\n  theme(plot.margin = unit(c(0,0,0,0), \"cm\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCode (Step 3: Observed Result)\nalive_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf() +\n  theme_classic(base_size=hn_base)"
  },
  {
    "objectID": "w08/slides.html#why-do-events-appear-where-they-do",
    "href": "w08/slides.html#why-do-events-appear-where-they-do",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Why Do Events Appear Where They Do?",
    "text": "Why Do Events Appear Where They Do?\n\n\nCode\nlibrary(tidyverse)\nlibrary(spatstat)\nset.seed(6809)\nN &lt;- 60\nr_core &lt;- 0.05\nobs_window &lt;- square(1)\n### Clustered data\nclust_ppp &lt;- rMatClust(\n  kappa=6,\n  scale=r_core,\n  mu=10\n)\nclust_sf &lt;- clust_ppp |&gt; sf::st_as_sf()\nclust_plot &lt;- clust_sf |&gt;\n  ggplot() +\n  geom_sf(size=2) +\n  theme_classic(base_size=18)\nggsave(\"images/clust_ppp.png\", clust_plot, width=3, height=3)\n# Intensity fn\nclust_intensity &lt;- density(clust_ppp, sigma = 0.1)\npng(\"images/clust_intensity.png\")\npar(mar=c(0,0,0,2), las=2, oma=c(0,0,0,0), cex=2)\nplot(clust_intensity, main=NULL)\ncontour(clust_intensity, add = TRUE)\ndev.off()\n### PCF\nclust_pcf &lt;- spatstat.explore::pcf(\n  clust_ppp, divisor=\"d\",\n  r=seq(from=0.00, to=0.50, by=0.01)\n)\nclust_pcf_plot &lt;- clust_pcf |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  labs(x=\"Distance\", y=\"Density\") +\n  theme_classic(base_size=14)\nggsave(\"images/clust_pcf.png\", clust_pcf_plot, width=3, height=3)\n\n\n\n\n\n\n\n\n\n\nOriginal Data\nFirst-Order\nSecond-Order\n\n\n\n\n\\(N = 60\\) Events\nEvents modeled individually\\(\\implies\\) Intensity function \\(\\lambda(\\mathbf{s})\\)\nEvents modeled pairwise \\(\\implies\\) \\(K\\)-function \\(K(\\vec{h})\\)"
  },
  {
    "objectID": "w08/slides.html#what-do-these-functions-detect",
    "href": "w08/slides.html#what-do-these-functions-detect",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "What Do These Functions ‚ÄúDetect‚Äù?",
    "text": "What Do These Functions ‚ÄúDetect‚Äù?\n\n\n\n\nCode\nsq_base &lt;- 16\nsq_psize &lt;- 2.5\nobs_window &lt;- square(1)\nr0 &lt;- 0.2\nsq_df &lt;- tibble::tribble(\n  ~x, ~y,\n  0.5-r0,0.5-r0,\n  0.5+r0,0.5+r0,\n  0.5-r0,0.5+r0,\n  0.5+r0,0.5-r0\n)\nsq_sf &lt;- sf::st_as_sf(\n  sq_df,\n  coords = c(\"x\",\"y\")\n)\nsq_ppp &lt;- as.ppp(sq_sf, W=obs_window)\nsq_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf(size=sq_psize) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npar(mar=c(0,0,0,2), las=2, oma=c(0,0,1,0))\nsq_density &lt;- density(sq_ppp)\nplot(sq_density, main=NULL, xaxs='i', yaxs='i')\ncontour(sq_density, xaxs='i', yaxs='i', add = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n### PCF\npcf_result &lt;- spatstat.explore::pcf(\n  sq_ppp,\n  divisor=\"d\",\n  r=seq(from=0.00, to=0.8, by=0.01)\n)\npcf_result |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1.5) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncsr_ppp &lt;- spatstat.random::rpoispp(\n  lambda = 60,\n  win=obs_window\n)\ncsr_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf(size=sq_psize) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npar(\n  mar=c(0,0,0,2),\n  las=2,\n  oma=c(0,0,1,0)\n)\ncsr_density &lt;- density(csr_ppp)\nplot(csr_density, main=NULL, xaxs=\"i\", yaxs=\"i\")\ncontour(csr_density, xaxs=\"i\", yaxs=\"i\", add = TRUE, lwd=1.5)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncsr_pcf_result &lt;- spatstat.explore::pcf(\n  csr_ppp,\n  divisor=\"d\",\n  r=seq(from=0.00, to=0.8, by=0.01)\n)\ncsr_pcf_result |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1.5) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  theme_classic(base_size=sq_base)"
  },
  {
    "objectID": "w08/slides.html#poisson-point-processes-csr",
    "href": "w08/slides.html#poisson-point-processes-csr",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Poisson Point Processes (CSR)",
    "text": "Poisson Point Processes (CSR)\nspatstat.random::rpoispp(lambda, win)\n\n \\(N \\sim \\text{Pois}(\\lambda)\\)\n For \\(i \\in \\{1, \\ldots, N\\}\\):\n\nGenerate \\(X_i, Y_i \\sim \\mathcal{U}(\\texttt{win})\\)\n\n\n\n\nCode\nsim_base &lt;- 22\nsim_psize &lt;- 2\nsim_xticks &lt;- seq(from=0.0, to=1.0, by=0.2)\nsim_yticks &lt;- seq(from=0.0, to=1.0, by=0.2)\ngen_pois_df &lt;- function(num_sims=1) {\n  pois_sims &lt;- spatstat.random::rpoispp(\n    lambda = 60, nsim=num_sims\n  )\n  return(tibble::as_tibble(pois_sims))\n}\n#pois_dfs &lt;- gen_pois_df()\n#pois_dfs |&gt; head()\npois_sims &lt;- spatstat.random::rpoispp(\n  lambda = 60, nsim=3\n)\nto_sim_df &lt;- function(cur_sim, sim_name) {\n  cur_df &lt;- tibble::as_tibble(cur_sim) |&gt; mutate(sim=sim_name)\n  return(cur_df)\n}\ncombined_df &lt;- imap(.x=pois_sims, .f=to_sim_df) |&gt; bind_rows()\ncombined_df |&gt; ggplot(aes(x=x, y=y)) +\n  geom_point(size=sim_psize) +\n  facet_wrap(vars(sim)) +\n  coord_equal() +\n  theme_classic(base_size=sim_base) +\n  theme(panel.spacing.x = unit(2, \"lines\")) +\n  scale_x_continuous(breaks=sim_xticks) +\n  scale_y_continuous(breaks=sim_yticks)"
  },
  {
    "objectID": "w08/slides.html#simple-sequential-inhibition-ssi",
    "href": "w08/slides.html#simple-sequential-inhibition-ssi",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Simple Sequential Inhibition (SSI)",
    "text": "Simple Sequential Inhibition (SSI)\nspatstat.random::rSSI(r, n=Inf, giveup=1000, win)\n\n\\(\\mathbf{S} = \\varnothing\\)\nWhile not done:\n\n Generate \\(\\mathbf{E} = (X, Y) \\sim \\mathcal{U}(\\texttt{win})\\)\n Check if \\(\\mathbf{E}\\) within r units of any existing point in \\(\\mathbf{S}\\)\n\nIf it is, throw \\(\\mathbf{E}\\) away. Otherwise, add \\(\\mathbf{E}\\) to \\(\\mathbf{S}\\)\n\n done=TRUE if \\(\\mathbf{S}\\) has n points OR has been the same for giveup steps\n\n\n\n\nCode\ncapture.output(ssi_sims &lt;- spatstat.random::rSSI(\n  r = 0.05, n=60, nsim=3\n), file=nullfile())\ncombined_df &lt;- imap(.x=ssi_sims, .f=to_sim_df) |&gt; bind_rows()\ncombined_df |&gt; ggplot(aes(x=x, y=y)) +\n  geom_point(size=sim_psize) +\n  facet_wrap(vars(sim)) +\n  coord_equal() +\n  theme_classic(base_size=24) +\n  theme(panel.spacing.x = unit(3, \"lines\")) +\n  scale_x_continuous(breaks=sim_xticks) +\n  scale_y_continuous(breaks=sim_yticks)"
  },
  {
    "objectID": "w08/slides.html#mat√©rn-cluster-process",
    "href": "w08/slides.html#mat√©rn-cluster-process",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Mat√©rn Cluster Process",
    "text": "Mat√©rn Cluster Process\n\n\nspatstat.random::rMatClust(kappa, scale, mu, win)\n\nDocs\n\n\n Generate \\(K(\\kappa)\\) parent points via Poisson Point Process with intensity \\(\\lambda = \\kappa\\)\n For each parent point \\(\\mathbf{s}_i \\in \\left\\{\\mathbf{s}_1, \\ldots, \\mathbf{s}_{K(\\kappa)}\\right\\}\\):\n\nGenerate \\(N(\\mu)\\) offspring points via Poisson Point Process with intensity \\(\\lambda = \\mu\\), distributed uniformly within a circle of radius scale centered at \\(\\mathbf{s}_i\\)\n\n Offspring points form the outcome (parent points are thrown away)\n\n\n\nCode\nmatclust_sims &lt;- rMatClust(\n  kappa = 6,\n  scale = 0.075,\n  mu = 10,\n  nsim = 3\n)\nmatclust_df &lt;- imap(.x=matclust_sims, .f=to_sim_df) |&gt; bind_rows()\nmatclust_plot &lt;- matclust_df |&gt; ggplot(aes(x=x, y=y)) +\n  geom_point(size=sim_psize) +\n  facet_wrap(vars(sim), nrow=1) +\n  coord_equal() +\n  theme_classic(base_size=sim_base) +\n  theme(panel.spacing.x = unit(2, \"lines\")) +\n  scale_x_continuous(breaks=sim_xticks) +\n  scale_y_continuous(breaks=sim_yticks)\nmatclust_plot"
  },
  {
    "objectID": "w08/slides.html#mat√©rn-inhibition-process-i-and-ii",
    "href": "w08/slides.html#mat√©rn-inhibition-process-i-and-ii",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Mat√©rn Inhibition Process (I and II)",
    "text": "Mat√©rn Inhibition Process (I and II)\nspatstat.random::rMaternI(kappa, r, win)\nspatstat.random::rMaternII(kappa, r, win)\n\n\n\n\n\n\n\nrMaternI() [Docs]\nrMaternII() [Docs]\n\n\n\n\n\n\n Generate events \\(\\mathbf{S} = \\{\\mathbf{s}_1, \\ldots, \\mathbf{s}_{N(\\lambda)}\\}\\) via Poisson point process with \\(\\lambda = \\kappa\\)\n\n\n Generate events \\(\\mathbf{S} = \\{\\mathbf{s}_1, \\ldots, \\mathbf{s}_{N(\\lambda)}\\}\\) via Poisson point process with \\(\\lambda = \\kappa\\), plus timestamp \\(t_i \\sim \\mathcal{U}(0,1)\\) for each \\(\\mathbf{s}_i\\)\n\n\n\n\n Delete all pairs of points \\(\\mathbf{s}_i\\), \\(\\mathbf{s}_j\\) for which \\(\\textsf{dist}(\\mathbf{s}_i, \\mathbf{s}_j) &lt; \\texttt{r}\\)\n\n\n For each pair of points \\(\\mathbf{s}_i\\), \\(\\mathbf{s}_j\\): if \\(\\textsf{dist}(\\mathbf{s}_i, \\mathbf{s}_j) &lt; \\texttt{r}\\), delete the later point\n\n\n\n\n\n\nCode\nmI_sims &lt;- rMaternI(\n  kappa = 60, r = 0.075, nsim=2\n)\nmII_sims &lt;- rMaternII(\n  kappa = 60, r = 0.075, nsim=2\n)\nmI_combined_df &lt;- imap(.x=mI_sims, .f=to_sim_df) |&gt; bind_rows() |&gt; mutate(sim=paste0(\"MI \",sim))\nmII_combined_df &lt;- imap(.x=mII_sims, .f=to_sim_df) |&gt; bind_rows() |&gt; mutate(sim=paste0(\"MII \",sim))\nm_combined_df &lt;- bind_rows(mI_combined_df, mII_combined_df)\nm_plot &lt;- m_combined_df |&gt; ggplot(aes(x=x, y=y)) +\n  geom_point(size=sim_psize) +\n  facet_wrap(vars(sim), nrow=1) +\n  coord_equal() +\n  theme_classic(base_size=sim_base) +\n  theme(panel.spacing.x = unit(2, \"lines\")) +\n  scale_x_continuous(breaks=sim_xticks) +\n  scale_y_continuous(breaks=sim_yticks)\nm_plot"
  },
  {
    "objectID": "w08/slides.html#cox-processes-random-intensity-random-events",
    "href": "w08/slides.html#cox-processes-random-intensity-random-events",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Cox Processes: Random Intensity ‚Üí Random Events",
    "text": "Cox Processes: Random Intensity ‚Üí Random Events\n\n\nspatstat.random::rLGCP(model, mu, param, win)\nmodels=c(\"exponential\", \"gauss\", \"stable\", \"gencauchy\", \"matern\")\n\nDocs\n\n\n\nCode\ncox_pcol &lt;- \"black\"\ncox_bg &lt;- \"grey90\"\ncox_pch &lt;- 21\n# inhomogeneous LGCP with Gaussian covariance function\nm &lt;- as.im(function(x, y){\n  5 - 1.5 * (x - 0.5)^2 + 2 * (y - 0.5)^2\n}, W=owin())\nlgcp_sims &lt;- rLGCP(\"gauss\", m, var=0.15, scale =0.5, nsim=3)\n# lgcp_combined_df &lt;- imap(.x=ssi_sims, .f=to_sim_df) |&gt; bind_rows()\nplot_lgcp &lt;- function(lgcp_sim) {\n  plot(attr(lgcp_sim, \"Lambda\"), main=NULL)\n  points(lgcp_sim, col=cox_pcol, bg=cox_bg, pch=cox_pch)\n}\npar(mfrow=c(1,3), mar=c(0,0,0,2), oma=c(0,0,0,0), las=2)\nnulls &lt;- lapply(X=lgcp_sims, FUN=plot_lgcp)"
  },
  {
    "objectID": "w08/slides.html#constant-risk-hypothesis-motivation",
    "href": "w08/slides.html#constant-risk-hypothesis-motivation",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Constant Risk Hypothesis: Motivation",
    "text": "Constant Risk Hypothesis: Motivation\n\nHere is a (fictional) map of flu cases in the US ‚ÄúMidwest‚Äù\nAre people in Chicago and Detroit equally ‚Äúat risk‚Äù?\n\n\n\nCode\ncity_df &lt;- tibble::tribble(\n  ~city, ~lon, ~lat, ~pop,\n  \"Chicago\", 41.950567516553896, -87.93011127491978, 2746388,\n  \"Detroit\", 42.45123004999075, -83.18402319217698, 631524\n)\ncity_sf &lt;- sf::st_as_sf(\n  city_df,\n  coords = c(\"lat\", \"lon\"),\n  crs=4326\n)\ncity_buf_sf &lt;- city_sf |&gt; sf::st_buffer(20000)\ncity_cases_sf &lt;- city_buf_sf |&gt; sf::st_sample(size=rep(10,2)) |&gt; sf::st_as_sf()\ncity_cases_sf$city &lt;- \"Detroit (10 Cases)\"\ncity_cases_sf[1:10, 'city'] &lt;- \"Chicago (10 Cases)\"\ncity_cases_sf$sample &lt;- \"Flu\"\nmapview(city_cases_sf, zcol=\"city\")"
  },
  {
    "objectID": "w08/slides.html#constant-risk-hypothesis-base-rates",
    "href": "w08/slides.html#constant-risk-hypothesis-base-rates",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Constant Risk Hypothesis: Base Rates",
    "text": "Constant Risk Hypothesis: Base Rates\n\n\n\n\nChicago\nDetroit\n\n\n\n\nPopulation\n2,746,388\n631,524\n\n\n\n\n\nCode\ncity_pop_sf &lt;- city_buf_sf |&gt; sf::st_sample(size=c(16, 4)) |&gt; sf::st_as_sf()\ncity_pop_sf$city &lt;- \"Detroit\"\ncity_pop_sf[1:16, 'city'] &lt;- \"Chicago\"\ncity_pop_sf$sample &lt;- \"People\"\ncity_combined_sf &lt;- bind_rows(city_cases_sf, city_pop_sf)\n# mapview(city_combined_sf, zcol=\"city\", marker=\"sample\")\nFlu = makeIcon(\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Maki2-danger-24.svg/240px-Maki2-danger-24.svg.png\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Maki2-danger-24.svg/24px-Maki2-danger-24.svg.png\",\n    20,\n    20\n)\nPeople = makeIcon(\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Maki2-pitch-24.svg/24px-Maki2-pitch-24.svg.png\",\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Maki2-pitch-24.svg/24px-Maki2-pitch-24.svg.png\",\n  20,\n  20\n)\n\ncity_combined_sf$r &lt;- ifelse(city_combined_sf$sample == \"Flu\", 0, 4)\ncity_flu_sf &lt;- city_combined_sf |&gt; filter(sample == \"Flu\")\ncity_ppl_sf &lt;- city_combined_sf |&gt; filter(sample == \"People\")\nleaflet(city_flu_sf) |&gt;\n  addProviderTiles(\"CartoDB.Positron\") |&gt;\n  addMarkers(data=city_flu_sf, icon = Flu) |&gt;\n  addMarkers(data=city_ppl_sf, icon = People)"
  },
  {
    "objectID": "w08/slides.html#references",
    "href": "w08/slides.html#references",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "References",
    "text": "References\n\n\nBaddeley, Adrian, Ege Rubak, and Rolf Turner. 2015. Spatial Point Patterns: Methodology and Applications with R. CRC Press."
  },
  {
    "objectID": "w08/index.html",
    "href": "w08/index.html",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#from-last-week-our-new-library-spatstat",
    "href": "w08/index.html#from-last-week-our-new-library-spatstat",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "[From Last Week] Our New Library: spatstat!",
    "text": "[From Last Week] Our New Library: spatstat!\n\n\n\nHomepage: spatstat.org\nGitHub: github.com/spatstat\nBook: Baddeley, Rubak, and Turner (2015) [Companion website]\nPDF: here",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#ppp-objects",
    "href": "w08/index.html#ppp-objects",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "ppp Objects",
    "text": "ppp Objects\n\nThe main datatype used to represent Planar Point Patterns [spatstat book p.¬†41]\nUnlike sf objects, which contain data+geometries for any desired collection of \\(N\\) entities, ppp objects are required to have at least an observation window!\n\n\n\nsf Creation:\n\n\nCode\ntree_df &lt;- tibble::tibble(lon=runif(100,0,1), lat=runif(100,0,1), age=runif(100,0,1))\ntree_sf &lt;- sf::st_as_sf(\n  tree_df,\n  coords = c('lon', 'lat')\n)\ntree_sf |&gt; head(4)\n\n\n\n\n\n\nage\ngeometry\n\n\n\n\n0.0233144\nPOINT (0.1487039 0.5640943)\n\n\n0.6882371\nPOINT (0.1248064 0.8612631)\n\n\n0.3889197\nPOINT (0.6370261 0.5268693)\n\n\n0.6638135\nPOINT (0.5211425 0.4551448)\n\n\n\n\n\n\n\nppp Creation:\n\n\nCode\npois_ppp &lt;- spatstat.random::rpoispp(\n  lambda=100, win=spatstat.geom::square(1)\n)\npois_ppp\n\n\nPlanar point pattern: 91 points\nwindow: rectangle = [0, 1] x [0, 1] units\n\n\nCode\nattributes(pois_ppp)$names\n\n\n[1] \"window\"     \"n\"          \"x\"          \"y\"          \"markformat\"\n\n\nCode\npois_ppp$x |&gt; head(4)\n\n\n[1] 0.5735346 0.7526621 0.8129999 0.7419696",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#ppp-leftrightarrow-sf-conversion",
    "href": "w08/index.html#ppp-leftrightarrow-sf-conversion",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "ppp \\(\\leftrightarrow\\) sf Conversion",
    "text": "ppp \\(\\leftrightarrow\\) sf Conversion\n\n\nppp to sf Conversion:\n\n\nCode\npois_sf &lt;- pois_ppp |&gt; sf::st_as_sf()\npois_sf |&gt; head(4)\n\n\n\n\n\n\nlabel\ngeom\n\n\n\n\nwindow\nPOLYGON ((0 0, 1 0, 1 1, 0 ‚Ä¶\n\n\npoint\nPOINT (0.5735346 0.6204983)\n\n\npoint\nPOINT (0.7526621 0.4205887)\n\n\npoint\nPOINT (0.8129999 0.6844816)\n\n\n\n\n\n\n\n\nCode\npois_sf |&gt; ggplot() +\n  geom_sf(data=pois_sf |&gt; filter(label==\"window\"), aes(fill='grey')) +\n  geom_sf(data=pois_sf |&gt; filter(label != \"window\"), aes(color='black')) +\n  md_theme_classic(base_size=26) +\n  scale_fill_manual(name=NULL, values=c(\"gray90\"), labels=c(\"&lt;span style='font-family: mono'&gt;label == 'window'&lt;/span&gt;\")) +\n  scale_color_manual(name=NULL, values=c(\"black\"), labels=c(\"&lt;span style='font-family: mono'&gt;label == 'point'&lt;/span&gt;\")) +\n  labs(title = \"&lt;span style='font-family: mono'&gt;ppp&lt;/span&gt; &rarr; &lt;span style='font-family: mono'&gt;sf&lt;/span&gt; Result\")\n\n\n\n\n\n\n\n\n\n\nsf to ppp Conversion:\n\n\nCode\nsquare_sfc &lt;- sf::st_polygon(list(\n  matrix(c(0,0,1,0,1,1,0,1,0,0), nrow=5, byrow=TRUE)\n)) |&gt; sf::st_sfc()\ntree_ppp &lt;- as.ppp(\n  sf::st_as_sfc(tree_sf),\n  W=as.owin(square_sfc)\n)\ntree_ppp\n\n\nPlanar point pattern: 100 points\nwindow: polygonal boundary\nenclosing rectangle: [0, 1] x [0, 1] units\n\n\n\n\nCode\ntree_ppp_sf &lt;- tree_ppp |&gt; sf::st_as_sf()\ntree_ppp_sf |&gt; ggplot() +\n  geom_sf(aes(fill='gray90')) +\n  geom_sf(data=tree_ppp_sf |&gt; filter(label != \"window\"), aes(color='black')) +\n  md_theme_classic(base_size=26) +\n  scale_fill_manual(name=NULL, values=c(\"gray90\"), labels=c(\"&lt;span style='font-family: mono'&gt;tree_ppp$window&lt;/span&gt;\")) +\n  scale_color_manual(name=NULL, values=c(\"black\"), labels=c(\"&lt;span style='font-family: mono'&gt;tree_ppp${x,y}&lt;/span&gt;\")) +\n  labs(\n    title = \"&lt;span style='font-family: mono'&gt;sf&lt;/span&gt; &rarr; &lt;span style='font-family: mono'&gt;ppp&lt;/span&gt; Result\",\n    x=\"&lt;span style='font-family: mono'&gt;tree_ppp$x&lt;/span&gt;\",\n    y=\"&lt;span style='font-family: mono'&gt;tree_ppp$y&lt;/span&gt;\"\n  ) + \n  guides(fill = guide_legend(order = 1), \n              color = guide_legend(order = 2))",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#the-tree-grid-mystery",
    "href": "w08/index.html#the-tree-grid-mystery",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "The Tree-Grid Mystery",
    "text": "The Tree-Grid Mystery\n\nYou‚Äôve been hired as an archaeologist‚Äîcongratulations! Your job: determine whether arrangement of trees formed:\n\nNaturally, via a process of resource competition, or\nArtificially, via an ancient civilization planting in a grid‚Ä¶",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#two-possible-histories",
    "href": "w08/index.html#two-possible-histories",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Two Possible Histories‚Ä¶",
    "text": "Two Possible Histories‚Ä¶\n\nHypothesis \\(\\mathcal{H}_{\\textsf{Art}}\\): Artificial Formation\n\n\n\n\n\nCode (Step 1: Grid Creation)\nha_base &lt;- 28\nsquare_sf &lt;- sf::st_as_sf(spatstat.geom::square(1))\ngrid_sf &lt;- sf::st_as_sf(sf::st_make_grid(square_sf))\ngrid_buffer_sf &lt;- grid_sf |&gt; sf::st_buffer(dist=-0.01, singleSide = TRUE)\ngrid_buffer_sf |&gt; ggplot() +\n  geom_sf() +\n  theme_classic(base_size=ha_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode (Step 2: Point Generation)\ngrid_points &lt;- sf::st_sample(grid_buffer_sf, size=rep(1,100))\ngrid_buffer_sf |&gt; ggplot() +\n  geom_sf() +\n  geom_sf(data=grid_points) +\n  theme_classic(base_size=ha_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode (Step 3: Observed Result)\ngrid_ppp &lt;- as.ppp(grid_points, W=spatstat.geom::square(1))\ngrid_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf() +\n  theme_classic(base_size=ha_base)\n\n\n\n\n\n\n\n\n\n\n\n\nHypothesis \\(\\mathcal{H}_{\\textsf{Nat}}\\): Natural Formation\n\n\n\n\n\nCode (Step 1: Tree Generation)\nhn_base &lt;- 28\nr &lt;- 0.05\npois_ppp &lt;- rpoispp(150)\npois_sf &lt;- pois_ppp |&gt; sf::st_as_sf()\npois_sf |&gt; ggplot() +\n  geom_sf() +\n  theme_classic(base_size=hn_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode (Step 2: Competition)\nage &lt;- runif(npoints(pois_ppp))\npair_dists &lt;- pairdist(pois_ppp)\nclose &lt;- (pair_dists &lt; r)\nlater &lt;- outer(age, age, \"&gt;\")\nkilled &lt;- apply(close & later, 1, any)\nkilled_ppp &lt;- pois_ppp[killed]\nalive_ppp &lt;- pois_ppp[!killed]\npois_window_sf &lt;- pois_ppp |&gt; sf::st_as_sf() |&gt; filter(label==\"window\")\npois_killed_sf &lt;- killed_ppp |&gt; sf::st_as_sf() |&gt; filter(label==\"point\")\npois_alive_sf &lt;- alive_ppp |&gt; sf::st_as_sf() |&gt; filter(label==\"point\")\nalive_buff_sf &lt;- pois_alive_sf |&gt; sf::st_buffer(r) |&gt; sf::st_union() |&gt; sf::st_intersection(pois_window_sf)\nggplot() +\n  geom_sf(data=pois_window_sf) +\n  geom_sf(data=alive_buff_sf, aes(color='Inhibition', shape='Inhibition'), linetype='dashed') +\n  geom_sf(data=pois_killed_sf, aes(color='Dead', shape='Dead'), size=2, stroke=2) +\n  geom_sf(data=pois_alive_sf, aes(color='Alive', shape='Alive'), size=1, stroke=1) +\n  scale_shape_manual(name=NULL, values=c(\"Alive\"=19, \"Dead\"=4, 'Inhibition'=21), labels=c(\"Alive\", \"Dead\", \"Inhibition\")) +\n  scale_color_manual(name=NULL, values=c(\"Alive\"=\"black\", \"Dead\"=cb_palette[1], \"Inhibition\"=\"black\"), labels=c(\"Alive\", \"Dead\", \"Inhibition\")) +\n  guides(shape=guide_legend(override.aes=list(fill = \"white\"))) +\n  theme_classic(base_size = hn_base) +\n  theme(plot.margin = unit(c(0,0,0,0), \"cm\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCode (Step 3: Observed Result)\nalive_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf() +\n  theme_classic(base_size=hn_base)",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#why-do-events-appear-where-they-do",
    "href": "w08/index.html#why-do-events-appear-where-they-do",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Why Do Events Appear Where They Do?",
    "text": "Why Do Events Appear Where They Do?\n\n\nCode\nlibrary(tidyverse)\nlibrary(spatstat)\nset.seed(6809)\nN &lt;- 60\nr_core &lt;- 0.05\nobs_window &lt;- square(1)\n### Clustered data\nclust_ppp &lt;- rMatClust(\n  kappa=6,\n  scale=r_core,\n  mu=10\n)\nclust_sf &lt;- clust_ppp |&gt; sf::st_as_sf()\nclust_plot &lt;- clust_sf |&gt;\n  ggplot() +\n  geom_sf(size=2) +\n  theme_classic(base_size=18)\nggsave(\"images/clust_ppp.png\", clust_plot, width=3, height=3)\n# Intensity fn\nclust_intensity &lt;- density(clust_ppp, sigma = 0.1)\npng(\"images/clust_intensity.png\")\npar(mar=c(0,0,0,2), las=2, oma=c(0,0,0,0), cex=2)\nplot(clust_intensity, main=NULL)\ncontour(clust_intensity, add = TRUE)\ndev.off()\n### PCF\nclust_pcf &lt;- spatstat.explore::pcf(\n  clust_ppp, divisor=\"d\",\n  r=seq(from=0.00, to=0.50, by=0.01)\n)\nclust_pcf_plot &lt;- clust_pcf |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  labs(x=\"Distance\", y=\"Density\") +\n  theme_classic(base_size=14)\nggsave(\"images/clust_pcf.png\", clust_pcf_plot, width=3, height=3)\n\n\n\n\n\n\n\n\n\n\nOriginal Data\nFirst-Order\nSecond-Order\n\n\n\n\n\\(N = 60\\) Events\nEvents modeled individually\\(\\implies\\) Intensity function \\(\\lambda(\\mathbf{s})\\)\nEvents modeled pairwise \\(\\implies\\) \\(K\\)-function \\(K(\\vec{h})\\)",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#what-do-these-functions-detect",
    "href": "w08/index.html#what-do-these-functions-detect",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "What Do These Functions ‚ÄúDetect‚Äù?",
    "text": "What Do These Functions ‚ÄúDetect‚Äù?\n\n\n\n\nCode\nsq_base &lt;- 16\nsq_psize &lt;- 2.5\nobs_window &lt;- square(1)\nr0 &lt;- 0.2\nsq_df &lt;- tibble::tribble(\n  ~x, ~y,\n  0.5-r0,0.5-r0,\n  0.5+r0,0.5+r0,\n  0.5-r0,0.5+r0,\n  0.5+r0,0.5-r0\n)\nsq_sf &lt;- sf::st_as_sf(\n  sq_df,\n  coords = c(\"x\",\"y\")\n)\nsq_ppp &lt;- as.ppp(sq_sf, W=obs_window)\nsq_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf(size=sq_psize) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npar(mar=c(0,0,0,2), las=2, oma=c(0,0,1,0))\nsq_density &lt;- density(sq_ppp)\nplot(sq_density, main=NULL, xaxs='i', yaxs='i')\ncontour(sq_density, xaxs='i', yaxs='i', add = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n### PCF\npcf_result &lt;- spatstat.explore::pcf(\n  sq_ppp,\n  divisor=\"d\",\n  r=seq(from=0.00, to=0.8, by=0.01)\n)\npcf_result |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1.5) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncsr_ppp &lt;- spatstat.random::rpoispp(\n  lambda = 60,\n  win=obs_window\n)\ncsr_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf(size=sq_psize) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npar(\n  mar=c(0,0,0,2),\n  las=2,\n  oma=c(0,0,1,0)\n)\ncsr_density &lt;- density(csr_ppp)\nplot(csr_density, main=NULL, xaxs=\"i\", yaxs=\"i\")\ncontour(csr_density, xaxs=\"i\", yaxs=\"i\", add = TRUE, lwd=1.5)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncsr_pcf_result &lt;- spatstat.explore::pcf(\n  csr_ppp,\n  divisor=\"d\",\n  r=seq(from=0.00, to=0.8, by=0.01)\n)\ncsr_pcf_result |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1.5) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  theme_classic(base_size=sq_base)",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#poisson-point-processes-csr",
    "href": "w08/index.html#poisson-point-processes-csr",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Poisson Point Processes (CSR)",
    "text": "Poisson Point Processes (CSR)\nspatstat.random::rpoispp(lambda, win)\n\n \\(N \\sim \\text{Pois}(\\lambda)\\)\n For \\(i \\in \\{1, \\ldots, N\\}\\):\n\nGenerate \\(X_i, Y_i \\sim \\mathcal{U}(\\texttt{win})\\)\n\n\n\n\nCode\nsim_base &lt;- 22\nsim_psize &lt;- 2\nsim_xticks &lt;- seq(from=0.0, to=1.0, by=0.2)\nsim_yticks &lt;- seq(from=0.0, to=1.0, by=0.2)\ngen_pois_df &lt;- function(num_sims=1) {\n  pois_sims &lt;- spatstat.random::rpoispp(\n    lambda = 60, nsim=num_sims\n  )\n  return(tibble::as_tibble(pois_sims))\n}\n#pois_dfs &lt;- gen_pois_df()\n#pois_dfs |&gt; head()\npois_sims &lt;- spatstat.random::rpoispp(\n  lambda = 60, nsim=3\n)\nto_sim_df &lt;- function(cur_sim, sim_name) {\n  cur_df &lt;- tibble::as_tibble(cur_sim) |&gt; mutate(sim=sim_name)\n  return(cur_df)\n}\ncombined_df &lt;- imap(.x=pois_sims, .f=to_sim_df) |&gt; bind_rows()\ncombined_df |&gt; ggplot(aes(x=x, y=y)) +\n  geom_point(size=sim_psize) +\n  facet_wrap(vars(sim)) +\n  coord_equal() +\n  theme_classic(base_size=sim_base) +\n  theme(panel.spacing.x = unit(2, \"lines\")) +\n  scale_x_continuous(breaks=sim_xticks) +\n  scale_y_continuous(breaks=sim_yticks)",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#simple-sequential-inhibition-ssi",
    "href": "w08/index.html#simple-sequential-inhibition-ssi",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Simple Sequential Inhibition (SSI)",
    "text": "Simple Sequential Inhibition (SSI)\nspatstat.random::rSSI(r, n=Inf, giveup=1000, win)\n\n\\(\\mathbf{S} = \\varnothing\\)\nWhile not done:\n\n Generate \\(\\mathbf{E} = (X, Y) \\sim \\mathcal{U}(\\texttt{win})\\)\n Check if \\(\\mathbf{E}\\) within r units of any existing point in \\(\\mathbf{S}\\)\n\nIf it is, throw \\(\\mathbf{E}\\) away. Otherwise, add \\(\\mathbf{E}\\) to \\(\\mathbf{S}\\)\n\n done=TRUE if \\(\\mathbf{S}\\) has n points OR has been the same for giveup steps\n\n\n\n\nCode\ncapture.output(ssi_sims &lt;- spatstat.random::rSSI(\n  r = 0.05, n=60, nsim=3\n), file=nullfile())\ncombined_df &lt;- imap(.x=ssi_sims, .f=to_sim_df) |&gt; bind_rows()\ncombined_df |&gt; ggplot(aes(x=x, y=y)) +\n  geom_point(size=sim_psize) +\n  facet_wrap(vars(sim)) +\n  coord_equal() +\n  theme_classic(base_size=24) +\n  theme(panel.spacing.x = unit(3, \"lines\")) +\n  scale_x_continuous(breaks=sim_xticks) +\n  scale_y_continuous(breaks=sim_yticks)",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#mat√©rn-cluster-process",
    "href": "w08/index.html#mat√©rn-cluster-process",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Mat√©rn Cluster Process",
    "text": "Mat√©rn Cluster Process\n\n\nspatstat.random::rMatClust(kappa, scale, mu, win)\n\nDocs\n\n\n\n Generate \\(K(\\kappa)\\) parent points via Poisson Point Process with intensity \\(\\lambda = \\kappa\\)\n For each parent point \\(\\mathbf{s}_i \\in \\left\\{\\mathbf{s}_1, \\ldots, \\mathbf{s}_{K(\\kappa)}\\right\\}\\):\n\nGenerate \\(N(\\mu)\\) offspring points via Poisson Point Process with intensity \\(\\lambda = \\mu\\), distributed uniformly within a circle of radius scale centered at \\(\\mathbf{s}_i\\)\n\n Offspring points form the outcome (parent points are thrown away)\n\n\n\nCode\nmatclust_sims &lt;- rMatClust(\n  kappa = 6,\n  scale = 0.075,\n  mu = 10,\n  nsim = 3\n)\nmatclust_df &lt;- imap(.x=matclust_sims, .f=to_sim_df) |&gt; bind_rows()\nmatclust_plot &lt;- matclust_df |&gt; ggplot(aes(x=x, y=y)) +\n  geom_point(size=sim_psize) +\n  facet_wrap(vars(sim), nrow=1) +\n  coord_equal() +\n  theme_classic(base_size=sim_base) +\n  theme(panel.spacing.x = unit(2, \"lines\")) +\n  scale_x_continuous(breaks=sim_xticks) +\n  scale_y_continuous(breaks=sim_yticks)\nmatclust_plot",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#mat√©rn-inhibition-process-i-and-ii",
    "href": "w08/index.html#mat√©rn-inhibition-process-i-and-ii",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Mat√©rn Inhibition Process (I and II)",
    "text": "Mat√©rn Inhibition Process (I and II)\nspatstat.random::rMaternI(kappa, r, win)\nspatstat.random::rMaternII(kappa, r, win)\n\n\n\n\n\n\n\nrMaternI() [Docs]\nrMaternII() [Docs]\n\n\n\n\n\n\n Generate events \\(\\mathbf{S} = \\{\\mathbf{s}_1, \\ldots, \\mathbf{s}_{N(\\lambda)}\\}\\) via Poisson point process with \\(\\lambda = \\kappa\\)\n\n\n Generate events \\(\\mathbf{S} = \\{\\mathbf{s}_1, \\ldots, \\mathbf{s}_{N(\\lambda)}\\}\\) via Poisson point process with \\(\\lambda = \\kappa\\), plus timestamp \\(t_i \\sim \\mathcal{U}(0,1)\\) for each \\(\\mathbf{s}_i\\)\n\n\n\n\n Delete all pairs of points \\(\\mathbf{s}_i\\), \\(\\mathbf{s}_j\\) for which \\(\\textsf{dist}(\\mathbf{s}_i, \\mathbf{s}_j) &lt; \\texttt{r}\\)\n\n\n For each pair of points \\(\\mathbf{s}_i\\), \\(\\mathbf{s}_j\\): if \\(\\textsf{dist}(\\mathbf{s}_i, \\mathbf{s}_j) &lt; \\texttt{r}\\), delete the later point\n\n\n\n\n\n\nCode\nmI_sims &lt;- rMaternI(\n  kappa = 60, r = 0.075, nsim=2\n)\nmII_sims &lt;- rMaternII(\n  kappa = 60, r = 0.075, nsim=2\n)\nmI_combined_df &lt;- imap(.x=mI_sims, .f=to_sim_df) |&gt; bind_rows() |&gt; mutate(sim=paste0(\"MI \",sim))\nmII_combined_df &lt;- imap(.x=mII_sims, .f=to_sim_df) |&gt; bind_rows() |&gt; mutate(sim=paste0(\"MII \",sim))\nm_combined_df &lt;- bind_rows(mI_combined_df, mII_combined_df)\nm_plot &lt;- m_combined_df |&gt; ggplot(aes(x=x, y=y)) +\n  geom_point(size=sim_psize) +\n  facet_wrap(vars(sim), nrow=1) +\n  coord_equal() +\n  theme_classic(base_size=sim_base) +\n  theme(panel.spacing.x = unit(2, \"lines\")) +\n  scale_x_continuous(breaks=sim_xticks) +\n  scale_y_continuous(breaks=sim_yticks)\nm_plot",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#cox-processes-random-intensity-random-events",
    "href": "w08/index.html#cox-processes-random-intensity-random-events",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Cox Processes: Random Intensity ‚Üí Random Events",
    "text": "Cox Processes: Random Intensity ‚Üí Random Events\n\n\nspatstat.random::rLGCP(model, mu, param, win)\nmodels=c(\"exponential\", \"gauss\", \"stable\", \"gencauchy\", \"matern\")\n\nDocs\n\n\n\n\nCode\ncox_pcol &lt;- \"black\"\ncox_bg &lt;- \"grey90\"\ncox_pch &lt;- 21\n# inhomogeneous LGCP with Gaussian covariance function\nm &lt;- as.im(function(x, y){\n  5 - 1.5 * (x - 0.5)^2 + 2 * (y - 0.5)^2\n}, W=owin())\nlgcp_sims &lt;- rLGCP(\"gauss\", m, var=0.15, scale =0.5, nsim=3)\n\n\nWarning: 32750 out of 65536 terms (50%) in FFT calculation of matrix square\nroot were negative, and were set to zero. Range: [-2.96, 1910]\n\n\nCode\n# lgcp_combined_df &lt;- imap(.x=ssi_sims, .f=to_sim_df) |&gt; bind_rows()\nplot_lgcp &lt;- function(lgcp_sim) {\n  plot(attr(lgcp_sim, \"Lambda\"), main=NULL)\n  points(lgcp_sim, col=cox_pcol, bg=cox_bg, pch=cox_pch)\n}\npar(mfrow=c(1,3), mar=c(0,0,0,2), oma=c(0,0,0,0), las=2)\nnulls &lt;- lapply(X=lgcp_sims, FUN=plot_lgcp)",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#constant-risk-hypothesis-motivation",
    "href": "w08/index.html#constant-risk-hypothesis-motivation",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Constant Risk Hypothesis: Motivation",
    "text": "Constant Risk Hypothesis: Motivation\n\nHere is a (fictional) map of flu cases in the US ‚ÄúMidwest‚Äù\nAre people in Chicago and Detroit equally ‚Äúat risk‚Äù?\n\n\n\nCode\ncity_df &lt;- tibble::tribble(\n  ~city, ~lon, ~lat, ~pop,\n  \"Chicago\", 41.950567516553896, -87.93011127491978, 2746388,\n  \"Detroit\", 42.45123004999075, -83.18402319217698, 631524\n)\ncity_sf &lt;- sf::st_as_sf(\n  city_df,\n  coords = c(\"lat\", \"lon\"),\n  crs=4326\n)\ncity_buf_sf &lt;- city_sf |&gt; sf::st_buffer(20000)\ncity_cases_sf &lt;- city_buf_sf |&gt; sf::st_sample(size=rep(10,2)) |&gt; sf::st_as_sf()\ncity_cases_sf$city &lt;- \"Detroit (10 Cases)\"\ncity_cases_sf[1:10, 'city'] &lt;- \"Chicago (10 Cases)\"\ncity_cases_sf$sample &lt;- \"Flu\"\nmapview(city_cases_sf, zcol=\"city\")",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#constant-risk-hypothesis-base-rates",
    "href": "w08/index.html#constant-risk-hypothesis-base-rates",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "Constant Risk Hypothesis: Base Rates",
    "text": "Constant Risk Hypothesis: Base Rates\n\n\n\n\nChicago\nDetroit\n\n\n\n\nPopulation\n2,746,388\n631,524\n\n\n\n\n\nCode\ncity_pop_sf &lt;- city_buf_sf |&gt; sf::st_sample(size=c(16, 4)) |&gt; sf::st_as_sf()\ncity_pop_sf$city &lt;- \"Detroit\"\ncity_pop_sf[1:16, 'city'] &lt;- \"Chicago\"\ncity_pop_sf$sample &lt;- \"People\"\ncity_combined_sf &lt;- bind_rows(city_cases_sf, city_pop_sf)\n# mapview(city_combined_sf, zcol=\"city\", marker=\"sample\")\nFlu = makeIcon(\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Maki2-danger-24.svg/240px-Maki2-danger-24.svg.png\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Maki2-danger-24.svg/24px-Maki2-danger-24.svg.png\",\n    20,\n    20\n)\nPeople = makeIcon(\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Maki2-pitch-24.svg/24px-Maki2-pitch-24.svg.png\",\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Maki2-pitch-24.svg/24px-Maki2-pitch-24.svg.png\",\n  20,\n  20\n)\n\ncity_combined_sf$r &lt;- ifelse(city_combined_sf$sample == \"Flu\", 0, 4)\ncity_flu_sf &lt;- city_combined_sf |&gt; filter(sample == \"Flu\")\ncity_ppl_sf &lt;- city_combined_sf |&gt; filter(sample == \"People\")\nleaflet(city_flu_sf) |&gt;\n  addProviderTiles(\"CartoDB.Positron\") |&gt;\n  addMarkers(data=city_flu_sf, icon = Flu) |&gt;\n  addMarkers(data=city_ppl_sf, icon = People)",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w08/index.html#references",
    "href": "w08/index.html#references",
    "title": "Week 8: Null Models and Marked Point Processes",
    "section": "References",
    "text": "References\n\n\nBaddeley, Adrian, Ege Rubak, and Rolf Turner. 2015. Spatial Point Patterns: Methodology and Applications with R. CRC Press.",
    "crumbs": [
      "Week 8: Oct 15"
    ]
  },
  {
    "objectID": "w09/slides.html#why-do-events-appear-where-they-do",
    "href": "w09/slides.html#why-do-events-appear-where-they-do",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Why Do Events Appear Where They Do?",
    "text": "Why Do Events Appear Where They Do?\n\n\nCode\nset.seed(6809)\nN &lt;- 60\nr_core &lt;- 0.05\nobs_window &lt;- square(1)\n### Clustered data\nclust_ppp &lt;- rMatClust(\n  kappa=6,\n  scale=r_core,\n  mu=10\n)\nclust_sf &lt;- clust_ppp |&gt; sf::st_as_sf()\nclust_plot &lt;- clust_sf |&gt;\n  ggplot() +\n  geom_sf(size=2) +\n  theme_classic(base_size=18)\nggsave(\"images/clust_ppp.png\", clust_plot, width=3, height=3)\n# Intensity fn\nclust_intensity &lt;- density(clust_ppp, sigma = 0.1)\npng(\"images/clust_intensity.png\")\npar(mar=c(0,0,0,2), las=2, oma=c(0,0,0,0), cex=2)\nplot(clust_intensity, main=NULL)\ncontour(clust_intensity, add = TRUE)\ndev.off()\n### PCF\nclust_pcf &lt;- spatstat.explore::pcf(\n  clust_ppp, divisor=\"d\",\n  r=seq(from=0.00, to=0.50, by=0.01)\n)\nclust_pcf_plot &lt;- clust_pcf |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  labs(x=\"Distance\", y=\"Density\") +\n  theme_classic(base_size=14)\nggsave(\"images/clust_pcf.png\", clust_pcf_plot, width=3, height=3)\n\n\n\n\n\n\n\n\n\n\nOriginal Data\nFirst-Order\nSecond-Order\n\n\n\n\n\\(N = 60\\) Events\nEvents modeled individually\\(\\implies\\) Intensity function \\(\\lambda(\\mathbf{s})\\)\nEvents modeled pairwise \\(\\implies\\) \\(K\\)-function \\(K(\\vec{h})\\)"
  },
  {
    "objectID": "w09/slides.html#what-do-these-functions-detect",
    "href": "w09/slides.html#what-do-these-functions-detect",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "What Do These Functions ‚ÄúDetect‚Äù?",
    "text": "What Do These Functions ‚ÄúDetect‚Äù?\n\n\n\n\nCode\nsq_base &lt;- 16\nsq_psize &lt;- 2.5\nobs_window &lt;- square(1)\nr0 &lt;- 0.2\nsq_df &lt;- tibble::tribble(\n  ~x, ~y,\n  0.5-r0,0.5-r0,\n  0.5+r0,0.5+r0,\n  0.5-r0,0.5+r0,\n  0.5+r0,0.5-r0\n)\nsq_sf &lt;- sf::st_as_sf(\n  sq_df,\n  coords = c(\"x\",\"y\")\n)\nsq_ppp &lt;- as.ppp(sq_sf, W=obs_window)\nsq_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf(size=sq_psize) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npar(mar=c(0,0,0,2), las=2, oma=c(0,0,1,0))\nsq_density &lt;- density(sq_ppp)\nplot(sq_density, main=NULL, xaxs='i', yaxs='i')\ncontour(sq_density, xaxs='i', yaxs='i', add = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n### PCF\npcf_result &lt;- spatstat.explore::pcf(\n  sq_ppp,\n  divisor=\"d\",\n  r=seq(from=0.00, to=0.8, by=0.01)\n)\npcf_result |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1.5) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncsr_ppp &lt;- spatstat.random::rpoispp(\n  lambda = 60,\n  win=obs_window\n)\ncsr_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf(size=sq_psize) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npar(\n  mar=c(0,0,0,2),\n  las=2,\n  oma=c(0,0,1,0)\n)\ncsr_density &lt;- density(csr_ppp)\nplot(csr_density, main=NULL, xaxs=\"i\", yaxs=\"i\")\ncontour(csr_density, xaxs=\"i\", yaxs=\"i\", add = TRUE, lwd=1.5)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncsr_pcf_result &lt;- spatstat.explore::pcf(\n  csr_ppp,\n  divisor=\"d\",\n  r=seq(from=0.00, to=0.8, by=0.01)\n)\ncsr_pcf_result |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1.5) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  theme_classic(base_size=sq_base)"
  },
  {
    "objectID": "w09/slides.html#null-models",
    "href": "w09/slides.html#null-models",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Null Models",
    "text": "Null Models\n\nGiven an intensity function, we can compute a bunch of simulated point patterns (inhomogeneous Poisson Point Process)‚Ä¶\nHow does an observed point pattern differ from the simulated point patterns?"
  },
  {
    "objectID": "w09/slides.html#constant-risk-hypothesis-motivation",
    "href": "w09/slides.html#constant-risk-hypothesis-motivation",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Constant Risk Hypothesis: Motivation",
    "text": "Constant Risk Hypothesis: Motivation\n\nHere is a (fictional) map of flu cases in the US ‚ÄúMidwest‚Äù\nAre people in Chicago and Detroit equally ‚Äúat risk‚Äù?\n\n\n\nCode\ncity_df &lt;- tibble::tribble(\n  ~city, ~lon, ~lat, ~pop,\n  \"Chicago\", 41.950567516553896, -87.93011127491978, 2746388,\n  \"Detroit\", 42.45123004999075, -83.18402319217698, 631524\n)\ncity_sf &lt;- sf::st_as_sf(\n  city_df,\n  coords = c(\"lat\", \"lon\"),\n  crs=4326\n)\ncity_buf_sf &lt;- city_sf |&gt; sf::st_buffer(20000)\ncity_cases_sf &lt;- city_buf_sf |&gt; sf::st_sample(size=rep(10,2)) |&gt; sf::st_as_sf()\ncity_cases_sf$city &lt;- \"Detroit (10 Cases)\"\ncity_cases_sf[1:10, 'city'] &lt;- \"Chicago (10 Cases)\"\ncity_cases_sf$sample &lt;- \"Flu\"\nmapview(city_cases_sf, zcol=\"city\")"
  },
  {
    "objectID": "w09/slides.html#constant-risk-hypothesis-base-rates",
    "href": "w09/slides.html#constant-risk-hypothesis-base-rates",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Constant Risk Hypothesis: Base Rates",
    "text": "Constant Risk Hypothesis: Base Rates\n\n\n\n\nChicago\nDetroit\n\n\n\n\nPopulation\n2,746,388\n631,524\n\n\n\n\n\nCode\ncity_pop_sf &lt;- city_buf_sf |&gt; sf::st_sample(size=c(16, 4)) |&gt; sf::st_as_sf()\ncity_pop_sf$city &lt;- \"Detroit\"\ncity_pop_sf[1:16, 'city'] &lt;- \"Chicago\"\ncity_pop_sf$sample &lt;- \"People\"\ncity_combined_sf &lt;- bind_rows(city_cases_sf, city_pop_sf)\n# mapview(city_combined_sf, zcol=\"city\", marker=\"sample\")\nFlu = makeIcon(\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Maki2-danger-24.svg/240px-Maki2-danger-24.svg.png\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Maki2-danger-24.svg/24px-Maki2-danger-24.svg.png\",\n    20,\n    20\n)\nPeople = makeIcon(\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Maki2-pitch-24.svg/24px-Maki2-pitch-24.svg.png\",\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Maki2-pitch-24.svg/24px-Maki2-pitch-24.svg.png\",\n  20,\n  20\n)\n\ncity_combined_sf$r &lt;- ifelse(city_combined_sf$sample == \"Flu\", 0, 4)\ncity_flu_sf &lt;- city_combined_sf |&gt; filter(sample == \"Flu\")\ncity_ppl_sf &lt;- city_combined_sf |&gt; filter(sample == \"People\")\nleaflet(city_flu_sf) |&gt;\n  addProviderTiles(\"CartoDB.Positron\") |&gt;\n  addMarkers(data=city_flu_sf, icon = Flu) |&gt;\n  addMarkers(data=city_ppl_sf, icon = People)"
  },
  {
    "objectID": "w09/slides.html#meaningful-results-leftrightarrow-comparisons-with-null-models",
    "href": "w09/slides.html#meaningful-results-leftrightarrow-comparisons-with-null-models",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Meaningful Results \\(\\leftrightarrow\\) Comparisons with Null Model(s)",
    "text": "Meaningful Results \\(\\leftrightarrow\\) Comparisons with Null Model(s)\n\nCases of disease form an intensity function \\(\\lambda(\\mathbf{s})\\)\nControls form an ‚Äúambient‚Äù intensity function \\(\\lambda_0(\\mathbf{s})\\)\n\\(\\implies\\) The following model allows us to separate the quantities we really care about from the base rate information:\n\\[\n  \\lambda(\\mathbf{s}) = \\alpha \\overbrace{\\lambda_0(\\mathbf{s})}^{\\mathclap{\\text{Base Rate}}} \\underbrace{\\rho(\\mathbf{s})}_{\\mathclap{\\text{Relative Risk}}},\n  \\]\nwhere\n\\[\n  \\alpha = \\frac{\\# \\text{Cases}}{\\# \\text{Controls}}\n  \\]\n(Remember: unit of \\(\\lambda(\\mathbf{s})\\) is number of cases; not a probability density!)"
  },
  {
    "objectID": "w09/slides.html#example-from-moraga-2024",
    "href": "w09/slides.html#example-from-moraga-2024",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Example from Moraga (2024)",
    "text": "Example from Moraga (2024)\n\nData: 761 primary biliary cirrhosis (PBC) cases, 3020 controls, England 1987-94\n\n\n\n\n\nCode\nlibrary(sparr) |&gt; suppressPackageStartupMessages()\ndata(pbc)\ncontrols &lt;- unmark(pbc[which(pbc$marks == \"control\"), ])\ncontrols |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf() +\n  theme_classic() +\n  labs(title=\"Controls (Population Sample)\")\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncases &lt;- unmark(pbc[which(pbc$marks == \"case\"), ])\ncases |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf() +\n  theme_classic() +\n  labs(title=\"PBC Cases\")"
  },
  {
    "objectID": "w09/slides.html#estimating-comparable-intensity-surfaces",
    "href": "w09/slides.html#estimating-comparable-intensity-surfaces",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Estimating Comparable Intensity Surfaces",
    "text": "Estimating Comparable Intensity Surfaces\n\nTo ensure comparable intensity functions, we need a common bandwidth parameter.\ndensity() from spatstat makes ‚Äúsmart‚Äù choices for this bandwidth, so for now we just average the bandwidths estimated for cases and controls:\n\n\n\nCode\nlibrary(sparr)\ndata(pbc)\ncases &lt;- unmark(pbc[which(pbc$marks == \"case\"), ])\ncontrols &lt;- unmark(pbc[which(pbc$marks == \"control\"), ])\nbwcases &lt;- attr(density(cases), \"sigma\")\nbwcontr &lt;- attr(density(controls), \"sigma\")\n(bw &lt;- (bwcases + bwcontr)/2)\n\n\n[1] 11.45837\n\n\n\n\n\n\nCode\nint_controls &lt;- density(controls, sigma = bw, eps=0.25)\nplot(int_controls, main = NULL)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nint_cases &lt;- density(cases, sigma = bw, eps=0.25)\nplot(int_cases, main = NULL)"
  },
  {
    "objectID": "w09/slides.html#visualizing-relative-risk-surface",
    "href": "w09/slides.html#visualizing-relative-risk-surface",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Visualizing Relative Risk Surface",
    "text": "Visualizing Relative Risk Surface\n\nAll that‚Äôs left is \\(\\alpha = \\# \\text{Controls} / \\# \\text{Cases}\\)!\n\n\n\nCode\nlibrary(fields)\n(alpha_hat &lt;- cases$n/controls$n)\n\n\n[1] 0.2519868\n\n\nCode\nx &lt;- int_cases$xcol\ny &lt;- int_cases$yrow\nrr &lt;- t(int_cases$v)/t(alpha_hat * int_controls$v)\nimage.plot(x, y, rr, asp = 1)\ntitle(xlab = \"Easting\", ylab = \"Northing\")"
  },
  {
    "objectID": "w09/slides.html#null-model-csr",
    "href": "w09/slides.html#null-model-csr",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Null Model: CSR",
    "text": "Null Model: CSR\n\nFigure from Gimond (2024)"
  },
  {
    "objectID": "w09/slides.html#the-random-labeling-hypothesis",
    "href": "w09/slides.html#the-random-labeling-hypothesis",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "The Random Labeling Hypothesis",
    "text": "The Random Labeling Hypothesis\n\n\nRandomly apply 761 ‚Äúsick‚Äù labels to the 3781 points!\n\n\n\n\n\n\nCode\nset.seed(6810)\npbc_1 &lt;- rlabel(pbc)\nplot(pbc_1)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nset.seed(6811)\npbc_2 &lt;- rlabel(pbc)\nplot(pbc_2)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nset.seed(6812)\npbc_3 &lt;- rlabel(pbc)\nplot(pbc_3)"
  },
  {
    "objectID": "w09/slides.html#the-constant-risk-hypothesis",
    "href": "w09/slides.html#the-constant-risk-hypothesis",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "The Constant Risk Hypothesis",
    "text": "The Constant Risk Hypothesis\n\nEveryone equally at risk of contracting disease, regardless of location: \\(\\rho(\\mathbf{s}) = 1\\)\nIn this case: \\(\\lambda_{CR}(\\mathbf{s}) = \\alpha \\lambda_0(\\mathbf{s})\\)\n\n\n\n\n\nCode\npbc_win_sf &lt;- pbc |&gt; sf::st_as_sf() |&gt; filter(label == \"window\")\nplot_pbc_sim &lt;- function() {\n    pbc_sim &lt;- spatstat.random::rpoispp(\n        lambda = alpha_hat * int_controls\n    )\n    # Separate window and points\n    pbc_sf &lt;- pbc_sim |&gt; sf::st_as_sf()\n    pbc_point_sf &lt;- pbc_sf |&gt; filter(label == \"point\")\n    pbc_win_sf &lt;- pbc_sf |&gt; filter(label == \"window\")\n    pbc_plot &lt;- ggplot() +\n      geom_sf(data=pbc_win_sf) +\n      geom_sf(data=pbc_point_sf, size=0.5, alpha=0.5) +\n      theme_classic()\n    return(pbc_plot)\n}\nplot_pbc_sim()\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_pbc_sim()\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_pbc_sim()"
  },
  {
    "objectID": "w09/slides.html#references",
    "href": "w09/slides.html#references",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "References",
    "text": "References\n\n\nGimond, Manuel. 2024. Introduction to GIS and Spatial Analysis. Colby College (ES214). https://mgimond.github.io/Spatial/."
  },
  {
    "objectID": "w09/index.html",
    "href": "w09/index.html",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#why-do-events-appear-where-they-do",
    "href": "w09/index.html#why-do-events-appear-where-they-do",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Why Do Events Appear Where They Do?",
    "text": "Why Do Events Appear Where They Do?\n\n\nCode\nset.seed(6809)\nN &lt;- 60\nr_core &lt;- 0.05\nobs_window &lt;- square(1)\n### Clustered data\nclust_ppp &lt;- rMatClust(\n  kappa=6,\n  scale=r_core,\n  mu=10\n)\nclust_sf &lt;- clust_ppp |&gt; sf::st_as_sf()\nclust_plot &lt;- clust_sf |&gt;\n  ggplot() +\n  geom_sf(size=2) +\n  theme_classic(base_size=18)\nggsave(\"images/clust_ppp.png\", clust_plot, width=3, height=3)\n# Intensity fn\nclust_intensity &lt;- density(clust_ppp, sigma = 0.1)\npng(\"images/clust_intensity.png\")\npar(mar=c(0,0,0,2), las=2, oma=c(0,0,0,0), cex=2)\nplot(clust_intensity, main=NULL)\ncontour(clust_intensity, add = TRUE)\ndev.off()\n### PCF\nclust_pcf &lt;- spatstat.explore::pcf(\n  clust_ppp, divisor=\"d\",\n  r=seq(from=0.00, to=0.50, by=0.01)\n)\nclust_pcf_plot &lt;- clust_pcf |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  labs(x=\"Distance\", y=\"Density\") +\n  theme_classic(base_size=14)\nggsave(\"images/clust_pcf.png\", clust_pcf_plot, width=3, height=3)\n\n\n\n\n\n\n\n\n\n\nOriginal Data\nFirst-Order\nSecond-Order\n\n\n\n\n\\(N = 60\\) Events\nEvents modeled individually\\(\\implies\\) Intensity function \\(\\lambda(\\mathbf{s})\\)\nEvents modeled pairwise \\(\\implies\\) \\(K\\)-function \\(K(\\vec{h})\\)",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#what-do-these-functions-detect",
    "href": "w09/index.html#what-do-these-functions-detect",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "What Do These Functions ‚ÄúDetect‚Äù?",
    "text": "What Do These Functions ‚ÄúDetect‚Äù?\n\n\n\n\nCode\nsq_base &lt;- 16\nsq_psize &lt;- 2.5\nobs_window &lt;- square(1)\nr0 &lt;- 0.2\nsq_df &lt;- tibble::tribble(\n  ~x, ~y,\n  0.5-r0,0.5-r0,\n  0.5+r0,0.5+r0,\n  0.5-r0,0.5+r0,\n  0.5+r0,0.5-r0\n)\nsq_sf &lt;- sf::st_as_sf(\n  sq_df,\n  coords = c(\"x\",\"y\")\n)\nsq_ppp &lt;- as.ppp(sq_sf, W=obs_window)\nsq_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf(size=sq_psize) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npar(mar=c(0,0,0,2), las=2, oma=c(0,0,1,0))\nsq_density &lt;- density(sq_ppp)\nplot(sq_density, main=NULL, xaxs='i', yaxs='i')\ncontour(sq_density, xaxs='i', yaxs='i', add = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n### PCF\npcf_result &lt;- spatstat.explore::pcf(\n  sq_ppp,\n  divisor=\"d\",\n  r=seq(from=0.00, to=0.8, by=0.01)\n)\npcf_result |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1.5) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncsr_ppp &lt;- spatstat.random::rpoispp(\n  lambda = 60,\n  win=obs_window\n)\ncsr_ppp |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf(size=sq_psize) +\n  theme_classic(base_size=sq_base)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npar(\n  mar=c(0,0,0,2),\n  las=2,\n  oma=c(0,0,1,0)\n)\ncsr_density &lt;- density(csr_ppp)\nplot(csr_density, main=NULL, xaxs=\"i\", yaxs=\"i\")\ncontour(csr_density, xaxs=\"i\", yaxs=\"i\", add = TRUE, lwd=1.5)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncsr_pcf_result &lt;- spatstat.explore::pcf(\n  csr_ppp,\n  divisor=\"d\",\n  r=seq(from=0.00, to=0.8, by=0.01)\n)\ncsr_pcf_result |&gt; ggplot(aes(x=r, y=iso)) +\n  geom_hline(yintercept=1, linetype='dashed', linewidth=1.5) +\n  geom_area(color='black', fill=cb_palette[1], alpha=0.75) +\n  scale_x_continuous(breaks=seq(from=0.0, to=1.0, by=0.1)) +\n  theme_classic(base_size=sq_base)",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#null-models",
    "href": "w09/index.html#null-models",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Null Models",
    "text": "Null Models\n\nGiven an intensity function, we can compute a bunch of simulated point patterns (inhomogeneous Poisson Point Process)‚Ä¶\nHow does an observed point pattern differ from the simulated point patterns?",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#constant-risk-hypothesis-motivation",
    "href": "w09/index.html#constant-risk-hypothesis-motivation",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Constant Risk Hypothesis: Motivation",
    "text": "Constant Risk Hypothesis: Motivation\n\nHere is a (fictional) map of flu cases in the US ‚ÄúMidwest‚Äù\nAre people in Chicago and Detroit equally ‚Äúat risk‚Äù?\n\n\n\nCode\ncity_df &lt;- tibble::tribble(\n  ~city, ~lon, ~lat, ~pop,\n  \"Chicago\", 41.950567516553896, -87.93011127491978, 2746388,\n  \"Detroit\", 42.45123004999075, -83.18402319217698, 631524\n)\ncity_sf &lt;- sf::st_as_sf(\n  city_df,\n  coords = c(\"lat\", \"lon\"),\n  crs=4326\n)\ncity_buf_sf &lt;- city_sf |&gt; sf::st_buffer(20000)\ncity_cases_sf &lt;- city_buf_sf |&gt; sf::st_sample(size=rep(10,2)) |&gt; sf::st_as_sf()\ncity_cases_sf$city &lt;- \"Detroit (10 Cases)\"\ncity_cases_sf[1:10, 'city'] &lt;- \"Chicago (10 Cases)\"\ncity_cases_sf$sample &lt;- \"Flu\"\nmapview(city_cases_sf, zcol=\"city\")",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#constant-risk-hypothesis-base-rates",
    "href": "w09/index.html#constant-risk-hypothesis-base-rates",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Constant Risk Hypothesis: Base Rates",
    "text": "Constant Risk Hypothesis: Base Rates\n\n\n\n\nChicago\nDetroit\n\n\n\n\nPopulation\n2,746,388\n631,524\n\n\n\n\n\nCode\ncity_pop_sf &lt;- city_buf_sf |&gt; sf::st_sample(size=c(16, 4)) |&gt; sf::st_as_sf()\ncity_pop_sf$city &lt;- \"Detroit\"\ncity_pop_sf[1:16, 'city'] &lt;- \"Chicago\"\ncity_pop_sf$sample &lt;- \"People\"\ncity_combined_sf &lt;- bind_rows(city_cases_sf, city_pop_sf)\n# mapview(city_combined_sf, zcol=\"city\", marker=\"sample\")\nFlu = makeIcon(\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Maki2-danger-24.svg/240px-Maki2-danger-24.svg.png\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Maki2-danger-24.svg/24px-Maki2-danger-24.svg.png\",\n    20,\n    20\n)\nPeople = makeIcon(\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Maki2-pitch-24.svg/24px-Maki2-pitch-24.svg.png\",\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Maki2-pitch-24.svg/24px-Maki2-pitch-24.svg.png\",\n  20,\n  20\n)\n\ncity_combined_sf$r &lt;- ifelse(city_combined_sf$sample == \"Flu\", 0, 4)\ncity_flu_sf &lt;- city_combined_sf |&gt; filter(sample == \"Flu\")\ncity_ppl_sf &lt;- city_combined_sf |&gt; filter(sample == \"People\")\nleaflet(city_flu_sf) |&gt;\n  addProviderTiles(\"CartoDB.Positron\") |&gt;\n  addMarkers(data=city_flu_sf, icon = Flu) |&gt;\n  addMarkers(data=city_ppl_sf, icon = People)",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#meaningful-results-leftrightarrow-comparisons-with-null-models",
    "href": "w09/index.html#meaningful-results-leftrightarrow-comparisons-with-null-models",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Meaningful Results \\(\\leftrightarrow\\) Comparisons with Null Model(s)",
    "text": "Meaningful Results \\(\\leftrightarrow\\) Comparisons with Null Model(s)\n\nCases of disease form an intensity function \\(\\lambda(\\mathbf{s})\\)\nControls form an ‚Äúambient‚Äù intensity function \\(\\lambda_0(\\mathbf{s})\\)\n\\(\\implies\\) The following model allows us to separate the quantities we really care about from the base rate information:\n\\[\n  \\lambda(\\mathbf{s}) = \\alpha \\overbrace{\\lambda_0(\\mathbf{s})}^{\\mathclap{\\text{Base Rate}}} \\underbrace{\\rho(\\mathbf{s})}_{\\mathclap{\\text{Relative Risk}}},\n  \\]\nwhere\n\\[\n  \\alpha = \\frac{\\# \\text{Cases}}{\\# \\text{Controls}}\n  \\]\n(Remember: unit of \\(\\lambda(\\mathbf{s})\\) is number of cases; not a probability density!)",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#example-from-moraga-2024",
    "href": "w09/index.html#example-from-moraga-2024",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Example from Moraga (2024)",
    "text": "Example from Moraga (2024)\n\nData: 761 primary biliary cirrhosis (PBC) cases, 3020 controls, England 1987-94\n\n\n\n\n\nCode\nlibrary(sparr) |&gt; suppressPackageStartupMessages()\ndata(pbc)\ncontrols &lt;- unmark(pbc[which(pbc$marks == \"control\"), ])\ncontrols |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf() +\n  theme_classic() +\n  labs(title=\"Controls (Population Sample)\")\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncases &lt;- unmark(pbc[which(pbc$marks == \"case\"), ])\ncases |&gt; sf::st_as_sf() |&gt; ggplot() +\n  geom_sf() +\n  theme_classic() +\n  labs(title=\"PBC Cases\")",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#estimating-comparable-intensity-surfaces",
    "href": "w09/index.html#estimating-comparable-intensity-surfaces",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Estimating Comparable Intensity Surfaces",
    "text": "Estimating Comparable Intensity Surfaces\n\nTo ensure comparable intensity functions, we need a common bandwidth parameter.\ndensity() from spatstat makes ‚Äúsmart‚Äù choices for this bandwidth, so for now we just average the bandwidths estimated for cases and controls:\n\n\n\nCode\nlibrary(sparr)\ndata(pbc)\ncases &lt;- unmark(pbc[which(pbc$marks == \"case\"), ])\ncontrols &lt;- unmark(pbc[which(pbc$marks == \"control\"), ])\nbwcases &lt;- attr(density(cases), \"sigma\")\nbwcontr &lt;- attr(density(controls), \"sigma\")\n(bw &lt;- (bwcases + bwcontr)/2)\n\n\n[1] 11.45837\n\n\n\n\n\n\nCode\nint_controls &lt;- density(controls, sigma = bw, eps=0.25)\nplot(int_controls, main = NULL)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nint_cases &lt;- density(cases, sigma = bw, eps=0.25)\nplot(int_cases, main = NULL)",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#visualizing-relative-risk-surface",
    "href": "w09/index.html#visualizing-relative-risk-surface",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Visualizing Relative Risk Surface",
    "text": "Visualizing Relative Risk Surface\n\nAll that‚Äôs left is \\(\\alpha = \\# \\text{Controls} / \\# \\text{Cases}\\)!\n\n\n\nCode\nlibrary(fields)\n\n\nLoading required package: spam\n\n\nSpam version 2.10-0 (2023-10-23) is loaded.\nType 'help( Spam)' or 'demo( spam)' for a short introduction \nand overview of this package.\nHelp for individual functions is also obtained by adding the\nsuffix '.spam' to the function name, e.g. 'help( chol.spam)'.\n\n\n\nAttaching package: 'spam'\n\n\nThe following objects are masked from 'package:base':\n\n    backsolve, forwardsolve\n\n\nLoading required package: viridisLite\n\n\n\nTry help(fields) to get started.\n\n\n\nAttaching package: 'fields'\n\n\nThe following object is masked from 'package:leaflet':\n\n    addLegend\n\n\nCode\n(alpha_hat &lt;- cases$n/controls$n)\n\n\n[1] 0.2519868\n\n\nCode\nx &lt;- int_cases$xcol\ny &lt;- int_cases$yrow\nrr &lt;- t(int_cases$v)/t(alpha_hat * int_controls$v)\nimage.plot(x, y, rr, asp = 1)\ntitle(xlab = \"Easting\", ylab = \"Northing\")",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#null-model-csr",
    "href": "w09/index.html#null-model-csr",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "Null Model: CSR",
    "text": "Null Model: CSR\n\n\n\nFigure from Gimond (2024)",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#the-random-labeling-hypothesis",
    "href": "w09/index.html#the-random-labeling-hypothesis",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "The Random Labeling Hypothesis",
    "text": "The Random Labeling Hypothesis\n\n\nRandomly apply 761 ‚Äúsick‚Äù labels to the 3781 points!\n\n\n\n\n\n\nCode\nset.seed(6810)\npbc_1 &lt;- rlabel(pbc)\nplot(pbc_1)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nset.seed(6811)\npbc_2 &lt;- rlabel(pbc)\nplot(pbc_2)\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nset.seed(6812)\npbc_3 &lt;- rlabel(pbc)\nplot(pbc_3)",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#the-constant-risk-hypothesis",
    "href": "w09/index.html#the-constant-risk-hypothesis",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "The Constant Risk Hypothesis",
    "text": "The Constant Risk Hypothesis\n\nEveryone equally at risk of contracting disease, regardless of location: \\(\\rho(\\mathbf{s}) = 1\\)\nIn this case: \\(\\lambda_{CR}(\\mathbf{s}) = \\alpha \\lambda_0(\\mathbf{s})\\)\n\n\n\n\n\nCode\npbc_win_sf &lt;- pbc |&gt; sf::st_as_sf() |&gt; filter(label == \"window\")\nplot_pbc_sim &lt;- function() {\n    pbc_sim &lt;- spatstat.random::rpoispp(\n        lambda = alpha_hat * int_controls\n    )\n    # Separate window and points\n    pbc_sf &lt;- pbc_sim |&gt; sf::st_as_sf()\n    pbc_point_sf &lt;- pbc_sf |&gt; filter(label == \"point\")\n    pbc_win_sf &lt;- pbc_sf |&gt; filter(label == \"window\")\n    pbc_plot &lt;- ggplot() +\n      geom_sf(data=pbc_win_sf) +\n      geom_sf(data=pbc_point_sf, size=0.5, alpha=0.5) +\n      theme_classic()\n    return(pbc_plot)\n}\nplot_pbc_sim()\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_pbc_sim()\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_pbc_sim()",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "w09/index.html#references",
    "href": "w09/index.html#references",
    "title": "Week 9: Evaluating Spatial Hypotheses I: Point Data",
    "section": "References",
    "text": "References\n\n\nGimond, Manuel. 2024. Introduction to GIS and Spatial Analysis. Colby College (ES214). https://mgimond.github.io/Spatial/.",
    "crumbs": [
      "Week 9: Oct 22"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PPOL 6805 / DSAN 6750: Geographic Information Systems (GIS) for Spatial Data Science",
    "section": "",
    "text": "Welcome to the homepage for PPOL 6805 / DSAN 6750: Geographic Information Systems (GIS) for Spatial Data Science, Fall 2025, at Georgetown University! The course takes place on Wednesdays from 6:30 to 9:00pm in Healy 105. More details are provided on the syllabus.\n\n\n\n\n\n\n\n\n\n\nTitle\n\n\n\nDate\n\n\n\n\n\n\n\n\nWeek 1: Introduction to GIS\n\n\nAug 27\n\n\n\n\n\n\nWeek 2: How Do Maps Work?\n\n\nSep 3\n\n\n\n\n\n\nWeek 3: Vector and Raster Representations\n\n\nSep 11\n\n\n\n\n\n\nWeek 4: Unary and Binary Operations\n\n\nSep 17\n\n\n\n\n\n\nWeek 5: Binary Operations and Spatial Joins\n\n\nSep 25\n\n\n\n\n\n\nWeek 6: Spatial Data Science: Random Fields and Spatial Autocorrelation\n\n\nOct 2\n\n\n\n\n\n\nWeek 7: Point Processes, Clustering, and Regularity\n\n\nOct 9\n\n\n\n\n\n\nWeek 8: Null Models and Marked Point Processes\n\n\nOct 16\n\n\n\n\n\n\nWeek 9: Evaluating Spatial Hypotheses I: Point Data\n\n\nOct 23\n\n\n\n\n\n\nWeek 10: Evaluating Spatial Hypotheses II: Areal Data\n\n\nOct 30\n\n\n\n\n\n\nWeek 11: In-Class Midterm\n\n\nNov 6\n\n\n\n\n\n\nWeek 12: Tools for Final Projects\n\n\nNov 13\n\n\n\n\n\n\nWeek 13: In-Class Office Hours\n\n\nNov 20\n\n\n\n\n\n\nWeek 14: Final Project Poster Session\n\n\nDec 4\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "<i class='bi bi-house pe-1'></i> Home"
    ]
  },
  {
    "objectID": "w11/index.html",
    "href": "w11/index.html",
    "title": "Week 11: In-Class Midterm",
    "section": "",
    "text": "Midterm\n\nThe midterm will be available on Posit.Cloud from 6:30pm to 9:30pm on Wednesday, November 6th, 2024.",
    "crumbs": [
      "Week 11: Nov 5"
    ]
  },
  {
    "objectID": "writeups/interpolation/krd_layers.html",
    "href": "writeups/interpolation/krd_layers.html",
    "title": "PPOL 6805 / DSAN 6750: GIS for Spatial Data Science",
    "section": "",
    "text": "import json\nfrom esridump.dumper import EsriDumper\n\n\nlayer_num = 11\n\n\n# d = EsriDumper('http://example.com/arcgis/rest/services/Layer/MapServer/1')\n\nk1835_endpoint = 'https://services.arcgis.com/3xOwF6p0r7IHIjfn/arcgis/rest/services/KurdPop1835/FeatureServer/0'\n\nprincipalities_1835_endpoint = 'https://services.arcgis.com/3xOwF6p0r7IHIjfn/arcgis/rest/services/Kurd1835/FeatureServer/9'\n\nsevres_endpoint = 'https://services.arcgis.com/3xOwF6p0r7IHIjfn/arcgis/rest/services/Treaty_of_Sevres/FeatureServer/11/'\n\nk47_endpoint = 'https://services.arcgis.com/3xOwF6p0r7IHIjfn/ArcGIS/rest/services/Kurdistan1947Boundaries/FeatureServer/10'\n\ncur_endpoint = 'https://services.arcgis.com/3xOwF6p0r7IHIjfn/arcgis/rest/services/Kurdistan_Current_Boundary_Estimates/FeatureServer/15'\n\ned_object = EsriDumper(k47_endpoint)\n\n\nkrd_features = list(ed_object)\n\n\nlen(krd_features)\n\n1\n\n\n\nkrd_feature = krd_features[0]\nlen(krd_feature)\n\n3\n\n\n\nwith open('krd_47.geojson', 'w') as infile:\n  json.dump(krd_feature, infile)\n\n\ntype(krd_feature)\n\ndict\n\n\n\nkrd_feature.keys()\n\ndict_keys(['type', 'geometry', 'properties'])\n\n\n\nkrd_feature['type']\n\n'Feature'\n\n\n\nkrd_feature['properties']\n\n{'OBJECTID': 1,\n 'area': 41360557.05027756,\n 'Shape__Area': 413605942350.6803,\n 'Shape__Length': 4362383.882545892}\n\n\n\nkrd_geom = krd_feature['geometry']\n\n\ntype(krd_geom)\n\ndict\n\n\n\nkrd_geom.keys()\n\ndict_keys(['type', 'coordinates'])\n\n\n\nkrd_geom['type']\n\n'Polygon'\n\n\n\nkrd_coords = krd_geom['coordinates']"
  },
  {
    "objectID": "writeups/things-on-maps/index.html",
    "href": "writeups/things-on-maps/index.html",
    "title": "Things We Put On Maps",
    "section": "",
    "text": "Scales\nPoints\nLines\nAreas\n\n\n\n\n\n\nFrom Krygier and Wood (2016)\n\n\nThis comes up immediately, since we‚Äôll be using Natural Earth data more and more (via the rnaturalearth library) to obtain country POLYGONs\n\n\n\n\n\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "writeups/things-on-maps/index.html#scales-wrules-of-thumb",
    "href": "writeups/things-on-maps/index.html#scales-wrules-of-thumb",
    "title": "Things We Put On Maps",
    "section": "",
    "text": "From Krygier and Wood (2016)\n\n\nThis comes up immediately, since we‚Äôll be using Natural Earth data more and more (via the rnaturalearth library) to obtain country POLYGONs"
  },
  {
    "objectID": "writeups/things-on-maps/index.html#the-three-key-elements",
    "href": "writeups/things-on-maps/index.html#the-three-key-elements",
    "title": "Things We Put On Maps",
    "section": "",
    "text": "From Monmonier (2018)"
  },
  {
    "objectID": "writeups/things-on-maps/index.html#what-can-happen-to-points",
    "href": "writeups/things-on-maps/index.html#what-can-happen-to-points",
    "title": "Things We Put On Maps",
    "section": "What Can Happen to Points?",
    "text": "What Can Happen to Points?\n\n\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "writeups/things-on-maps/index.html#what-can-happen-to-lines",
    "href": "writeups/things-on-maps/index.html#what-can-happen-to-lines",
    "title": "Things We Put On Maps",
    "section": "What Can Happen to Lines?",
    "text": "What Can Happen to Lines?\n\n\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "writeups/things-on-maps/index.html#what-can-happen-to-lines-1",
    "href": "writeups/things-on-maps/index.html#what-can-happen-to-lines-1",
    "title": "Things We Put On Maps",
    "section": "What Can Happen to Lines?",
    "text": "What Can Happen to Lines?\n\n\nSelection\n\n\n\nIn any map, most features from the human or natural environment are eliminated! (Krygier and Wood 2016)\n\n\n\nSimplification\n\n\n\nWithin the features that do remain, eliminate details that are unnecessary with respect to audience/context (Krygier and Wood 2016)"
  },
  {
    "objectID": "writeups/things-on-maps/index.html#what-can-happen-to-areas",
    "href": "writeups/things-on-maps/index.html#what-can-happen-to-areas",
    "title": "Things We Put On Maps",
    "section": "What Can Happen to Areas?",
    "text": "What Can Happen to Areas?\n\n\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "writeups/things-on-maps/index.html#areal-dimension-change",
    "href": "writeups/things-on-maps/index.html#areal-dimension-change",
    "title": "Things We Put On Maps",
    "section": "Areal Dimension Change",
    "text": "Areal Dimension Change\n\n\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "writeups/things-on-maps/index.html#what-is-gained",
    "href": "writeups/things-on-maps/index.html#what-is-gained",
    "title": "Things We Put On Maps",
    "section": "What Is Gained?",
    "text": "What Is Gained?\n\n\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "writeups/things-on-maps/index.html#what-is-lost",
    "href": "writeups/things-on-maps/index.html#what-is-lost",
    "title": "Things We Put On Maps",
    "section": "What Is Lost?",
    "text": "What Is Lost?\n\n\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "writeups/things-on-maps/index.html#who-is-affected",
    "href": "writeups/things-on-maps/index.html#who-is-affected",
    "title": "Things We Put On Maps",
    "section": "Who Is Affected?",
    "text": "Who Is Affected?\n\n\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "writeups/hw1-guide/index.html",
    "href": "writeups/hw1-guide/index.html",
    "title": "HW1 Hints",
    "section": "",
    "text": "There are a few points in HW1 which may be tricky if you haven‚Äôt used R before, so this guide is here to provide you with some sample code that you can hopefully adapt for use in Questions 2 and 3!"
  },
  {
    "objectID": "writeups/hw1-guide/index.html#question-2-creating-sfg-sf-geometry-objects",
    "href": "writeups/hw1-guide/index.html#question-2-creating-sfg-sf-geometry-objects",
    "title": "HW1 Hints",
    "section": "Question 2: Creating sfg (sf Geometry) Objects",
    "text": "Question 2: Creating sfg (sf Geometry) Objects\nHere, the trickiest part is probably figuring out exactly what format the sf library wants you to use when creating these geometry objects: the sf representations of POINT, LINESTRING, and POLYGON.\nSo, each subsection here will provide you with code explaining how to construct each of these three types of sfg objects out of three basic R data structures: vector, matrix, and list.\n\nCreating POINT objects with sf_point()\nThe syntax for creating POINT objects is the simplest of the three: since a POINT object in the WKT schema is literally just two numbers, we just need a way to ‚Äúbundle together‚Äù two numbers and then provide this ‚Äúbundle‚Äù to the sf library.\nSo, as was discussed in class and in the Coding Workshop, we can use the c() function from Base R to bundle together any number of objects (as long as they‚Äôre all of the same type) into a vector:\n\n\nCode\n(my_numeric_vec &lt;- c(1, 2, 3))\n\n\n[1] 1 2 3\n\n\nCode\n(my_character_vec &lt;- c(\"a\", \"b\", \"c\"))\n\n\n[1] \"a\" \"b\" \"c\"\n\n\nCode\n(my_logical_vec &lt;- c(TRUE, FALSE, TRUE))\n\n\n[1]  TRUE FALSE  TRUE\n\n\nWith this knowledge, along with the fact that the sf library documentation says that the st_point() function takes in a vector as input, let‚Äôs create a POINT object in R!\nSince we also linked the Wikipedia page on WKT geometry representations above, let‚Äôs use the examples from that page. Their example for a POINT looks like:\n\n\n\nPOINT\n\nPOINT (30 10)\n\n\n\nAnd, the way we would create this POINT object in R (in a way that we could thus plot it or apply our unary/binary operations to it) looks as follows:\n\n\nCode\n# Load the sf library functions into R's memory\nlibrary(sf)\n\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\nCode\n# Create a numeric vector containing the two coordinates\nmy_point_coords &lt;- c(30, 10)\n# Print out the contents of this numeric vector\nprint(my_point_coords)\n\n\n[1] 30 10\n\n\nCode\n# Print out the *class* (the datatype) of this vector, how it is stored in R\nclass(my_point_coords)\n\n\n[1] \"numeric\"\n\n\nCode\n# Use the numeric vector as the *argument* to st_point(), to tell sf we want a POINT with these coordinates\nmy_point &lt;- st_point(my_point_coords)\n# Print out the *class* of this object, to see how sf has created an sfg (sf geometry) object\nclass(my_point)\n\n\n[1] \"XY\"    \"POINT\" \"sfg\"  \n\n\nWe could also use plot() to plot an ultra-basic visual representation of this POINT we just created, my_point. It won‚Äôt be very interesting, however, since the plot() function for sfg objects is meant to just quickly provide an as-simple-as-possible visual representation:\n\n\nCode\nplot(my_point)\n\n\n\n\n\n\n\n\n\nIf we want to visualize the point in its context (in this case, in the context of the ‚Äústandard‚Äù Cartesian \\(xy\\)-plane), we can turn to ggplot2, the Tidyverse data-visualization library, which will allow us to show the point within the broader \\(xy\\)-plane:\n\n\nCode\nlibrary(tidyverse) |&gt; suppressPackageStartupMessages()\nmy_point |&gt; ggplot() +\n  geom_sf() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nMuch better! We can now see, using the information along the \\(x\\) and \\(y\\) axes, that this sfg object my_point specifically represents a POINT object with \\(x\\) coordinate of 30 and a \\(y\\) coordinate of 10!\n\n\nCreating LINESTRING Objects with st_linestring()\nNext up is LINESTRING, which sf allows us to create using the constructor function st_linestring(). The example in the Wikipedia article in this case looks like:\n\n\n\n\n\n\n\n\nLINESTRING\n\nLINESTRING (30 10, 10 30, 40 40)\n\n\n\nAnd from the WKT string on the right side, we can see how representing this type of geometry is going to require a slightly more complex data structure than the more simple vector we used above to represent the two coordinates of a single POINT.\nIn this case, looking at the sf documentation, we can see that the st_linestring() constructor function requires a matrix, a datatype we haven‚Äôt seen yet but which actually builds straightforwardly on top of the vector type that we have seen!\nThe matrix datatype in R is, I think, easiest to understand by looking at an example. Let‚Äôs say we want to represent the matrix\n\\[\n\\begin{bmatrix}\n1 & 2 & 3 \\\\\n4 & 5 & 6\n\\end{bmatrix}\n\\]\nwithin R. Above we saw how, to represent a vector like \\((1, 2)\\), we used the c() function in R: c(1, 2). To represent a matrix, it turns out that we will still use this c() function! The syntax of matrix takes a vector as input, then transforms it into matrix form as follows:\n\nFirst we use c() to write out all elements of the matrix, row by row, as a single ‚Äúflat‚Äù vector\nThen we tell R how it should ‚Äúsplit‚Äù this flat vector into rows and columns\n\nSo, to represent the example matrix \\(A\\) given above, in R, we implement these two steps as follows:\n\n\nCode\n# First we use c() to construct a *vector* containing all\n# elements of the matrix in a single row (a \"flattened\" representation)\nflattened_matrix &lt;- c(1, 2, 3, 4, 5, 6)\nflattened_matrix\n\n\n[1] 1 2 3 4 5 6\n\n\nCode\n# Then we provide this \"flattened\" vector to the matrix()\n# constructor function, along with instructions for R on how\n# to split it into rows and columns\nexample_matrix &lt;- matrix(\n  flattened_matrix,\n  byrow = TRUE,\n  nrow=2, ncol=3\n)\nexample_matrix\n\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n\n\nAnd there‚Äôs our example matrix from above, now encoded as an object of type matrix in R!\nSo, returning to our example from the Wikipedia article, since this LINESTRING consists of 3 coordinates connected by straight lines, we now need to construct a matrix with 3 rows, where each row contains the coordinates of one point in the LINESTRING. We can do this as follows, using the same syntax as in the previous code cell:\n\n\nCode\nmy_linestring_matrix_flat &lt;- c(30, 10, 10, 30, 40, 40)\nmy_linestring_matrix &lt;- matrix(\n  my_linestring_matrix_flat,\n  byrow = TRUE,\n  nrow=3, ncol=2\n)\nmy_linestring_matrix\n\n\n     [,1] [,2]\n[1,]   30   10\n[2,]   10   30\n[3,]   40   40\n\n\nAnd now we have a matrix object in the form that sf requires for constructing an st_linestring object! All that‚Äôs left is to plug this linestring_matrix object into the st_linestring() constructor function, as follows:\n\n\nCode\nmy_linestring_sf &lt;- st_linestring(my_linestring_matrix)\nmy_linestring_sf\n\n\nLINESTRING (30 10, 10 30, 40 40)\n\n\nAnd we‚Äôve successfully encoded the Wikipedia example into the sf library‚Äôs LINESTRING representation! We can plot it quickly using plot() as we did earlier with the st_point object:\n\n\nCode\nplot(my_linestring_sf)\n\n\n\n\n\n\n\n\n\nAnd obtain a more interesting plot, showing our coordinate system, using ggplot2:\n\n\nCode\nmy_linestring_sf |&gt; ggplot() +\n  geom_sf() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\n\nCreating Simple POLYGON Objects with st_polygon()\nThis is the final boss! And, just as the increased complexity from POINT to LINESTRING required us to move from vectors to matrices, here the increased complexity from LINESTRING to POLYGON requires us to move from matrices to lists, as can be seen once again in the sf documentation.\nTaking our example one final time from the Wikipedia article on WKT, their first example POLYGON (the ‚Äúsimple‚Äù POLYGON, without any holes) looks as follows:\n\n\n\n\n\n\n\n\nPOLYGON\n\nPOLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))\n\n\n\nSo, as discussed earlier in class, a simple POLYGON like this (without any holes) is actually quite similar to a LINESTRING: looking solely at the coordinates, we can see how a (simple) POLYGON is defined using just a series of connected points, as in a LINESTRING, with the additional constraint that the last point in the series is the same as the first point. So, we already know how to construct the data structure (a matrix) needed for defining a LINESTRING‚Ä¶ let‚Äôs start with that here:\n\n\nCode\nmy_polygon_flat &lt;- c(30, 10, 40, 40, 20, 40, 10, 20, 30, 10)\nmy_polygon_matrix &lt;- matrix(\n  my_polygon_flat,\n  byrow = TRUE,\n  nrow = 5, ncol=2\n)\nmy_polygon_matrix\n\n\n     [,1] [,2]\n[1,]   30   10\n[2,]   40   40\n[3,]   20   40\n[4,]   10   20\n[5,]   30   10\n\n\nIf we were just trying to create an st_linestring object, we could now complete the task by just plugging this matrix we created into the st_linestring() constructor function!\nBut, from the documentation we see that the st_polygon() constructor function won‚Äôt accept a matrix ‚Äì we need to provide a list instead (we‚Äôll see why in a second!). So, in this case where we have a simple POLYGON without any holes, our list is going to feel silly: it will be a list with only one element, namely, the matrix we just created!\n\n\nCode\nmy_polygon_list &lt;- list(my_polygon_matrix)\nmy_polygon_list\n\n\n[[1]]\n     [,1] [,2]\n[1,]   30   10\n[2,]   40   40\n[3,]   20   40\n[4,]   10   20\n[5,]   30   10\n\n\nAnd, we complete our task by just plugging this list object into the st_polygon() constructor function:\n\n\nCode\nmy_polygon_sf &lt;- st_polygon(my_polygon_list)\nmy_polygon_sf\n\n\nPOLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))\n\n\nAnd plotting in two ways like before:\n\n\nCode\nplot(my_polygon_sf)\n\n\n\n\n\n\n\n\n\n\n\nCode\nmy_polygon_sf |&gt; ggplot() +\n  geom_sf() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\n\nCreating Complex POLYGON Objects (POLYGONs with Holes) with st_polygon()\n‚Ä¶So, why exactly does st_polygon() require a list, when all we did in the last section was to ‚Äúwrap‚Äù our one matrix object into this list, as its only element? The answer comes from the fact that we need to represent complex POLYGONs as well: POLYGONs with holes in them! And, to achieve this, st_polygon() requires a list and then interprets all elements after the first element as describing the holes within the POLYGON!\nSo, as our final hint for this question, let‚Äôs take the complex POLYGON example from the Wikipedia article:\n\n\n\n\n\n\n\n\nPOLYGON\n\nPOLYGON ((35 10, 45 45, 15 40, 10 20, 35 10),(20 30, 35 35, 30 20, 20 30))\n\n\n\nAnd let‚Äôs now set up our list so that its first element represents the coordinates of the outer boundary of this POLYGON (in counterclockwise order), while its second element represents the boundary of the hole (in reversed, clockwise order):\n\n\nCode\nouter_flat &lt;- c(35,10,45,45,15,40,10,20,35,10)\nouter_matrix &lt;- matrix(\n  outer_flat,\n  byrow = TRUE,\n  nrow = 5, ncol=2\n)\nouter_matrix\n\n\n     [,1] [,2]\n[1,]   35   10\n[2,]   45   45\n[3,]   15   40\n[4,]   10   20\n[5,]   35   10\n\n\nCode\ninner_flat &lt;- c(20,30,35,35,30,20,20,30)\ninner_matrix &lt;- matrix(\n  inner_flat,\n  byrow = TRUE,\n  nrow=4, ncol=2\n)\ninner_matrix\n\n\n     [,1] [,2]\n[1,]   20   30\n[2,]   35   35\n[3,]   30   20\n[4,]   20   30\n\n\nAnd now we can finally understand why the st_polygon() constructor function requires a list argument: it‚Äôs what now allows us to ‚Äúencode‚Äù this POLYGON-with-hole within sf!\n\n\nCode\ncomplex_poly_list &lt;- list(outer_matrix, inner_matrix)\ncomplex_poly_list\n\n\n[[1]]\n     [,1] [,2]\n[1,]   35   10\n[2,]   45   45\n[3,]   15   40\n[4,]   10   20\n[5,]   35   10\n\n[[2]]\n     [,1] [,2]\n[1,]   20   30\n[2,]   35   35\n[3,]   30   20\n[4,]   20   30\n\n\nCode\ncomplex_poly_sf &lt;- st_polygon(complex_poly_list)\ncomplex_poly_sf\n\n\nPOLYGON ((35 10, 45 45, 15 40, 10 20, 35 10), (20 30, 35 35, 30 20, 20 30))\n\n\nAnd we can plot in two ways as usual:\n\n\nCode\nplot(complex_poly_sf)\n\n\n\n\n\n\n\n\n\n\n\nCode\ncomplex_poly_sf |&gt; ggplot() +\n  geom_sf() +\n  theme_classic()"
  },
  {
    "objectID": "writeups/hw1-guide/index.html#question-3-plotting-raster-data-with-tidyterra",
    "href": "writeups/hw1-guide/index.html#question-3-plotting-raster-data-with-tidyterra",
    "title": "HW1 Hints",
    "section": "Question 3: Plotting Raster Data with tidyterra",
    "text": "Question 3: Plotting Raster Data with tidyterra\nThis is even more important than the Question 2 help, only because, I failed to provide any examples using tidyterra in the slides this year üò®\nSo, here is an example, showing especially how important it is to use the interpolate=FALSE option to prevent tidyterra from ‚Äúsmoothing‚Äù the individual pixels in your plot together into a hideous blob.\nFirst let‚Äôs use terra to construct a \\(2 \\times 3\\) raster grid (similar to Gridtopia, but, now as a rectangle rather than a square!)\n\n\nCode\nset.seed(6805)\nlibrary(tidyverse) |&gt; suppressPackageStartupMessages()\nlibrary(terra) |&gt; suppressPackageStartupMessages()\nlibrary(tidyterra) |&gt; suppressPackageStartupMessages()\nrectville &lt;- terra::rast(\n  nrows = 2, ncols = 3,\n  xmin = 0, xmax = 2, ymin = 0, ymax = 1,\n  vals = sample(1:6)\n)\nplot(rectville)\ntext(\n  rectville,\n  halo=TRUE, hc=\"black\", col=\"white\", hw=0.2\n)\n\n\n\n\n\n\n\n\n\nAnd, like we‚Äôve seen a few times now, we should try to use ggplot2 rather than the plot() function from Base R since the ggplot2 library provides a full-on Grammar of Graphics (GG) engine (plot() makes a lot of assumptions and guesses as to how we want things displayed, whereas ggplot2 allows us to control each facet of the plot in a systematic way):\n\n\nCode\nrectville |&gt; ggplot2::ggplot() +\n  tidyterra::geom_spatraster(data=rectville) +\n  ggplot2::scale_fill_viridis_c() +\n  ggplot2::theme_classic()\n\n\n\n\n\n\n\n\n\nNotice however that, in this case, since we only have one piece of information (one number) for each cell in the raster grid, ggplot2 fills in the colors of the grid using the viridis color scale discussed in class.\nIn GIS contexts, when we are working with and plotting raster data, we almost always have more than one piece of information for each cell. For example, if we‚Äôre working with remote sensing data like photos taken from an airplane or satellite, we will in fact have three values for each pixel: the red intensity, the green intensity, and the blue intensity.\nSince this three-number RGB representation of pixels is so common (in general, since it‚Äôs how the pixels on our computer screens show color, but also in GIS specifically), tidyterra provides a special version of the geom_spatraster() function we used above solely for this case: geom_spatraster_rgb().\nIf we look at the documentation for this function, we can see that in fact the only required argument we need to provide is the data argument. Every other argument to this function (including interpolate, which we‚Äôll see below) is optional, so that if we don‚Äôt provide a specific value when we call geom_spatraster_rgb(), the library will use the default values specified in the documentation.\nSo, let‚Äôs now construct a new RGB-ified version of rectville, this time with three layers instead of just one, where the values in each layer will correspond to red, blue, and green intensity respectively:\n\n\nCode\nrgbville &lt;- terra::rast(\n  nrows = 2, ncols = 3,\n  xmin = 0, xmax = 2, ymin = 0, ymax = 1,\n  vals = sample(1:255, 6)\n) |&gt; mutate(\n  lyr.2 = sample(1:255, 6),\n  lyr.3 = sample(1:255, 6)\n)\nrgbville |&gt; ggplot2::ggplot() +\n  tidyterra::geom_spatraster_rgb(\n    data=rgbville\n  ) +\n  ggplot2::scale_fill_viridis_c() +\n  ggplot2::theme_classic()\n\n\n\n\n\n\n\n\n\nWhat happened?!? If we squint when looking at this plot, we can see how it‚Äôs almost plotting the cells of rgbville as six discrete colors, but that at the edges the colors of the cells are blending into one another‚Ä¶ This, it turns out, is the expected behavior of geom_spatraster_rgb() in this case!\nIt has to do with the fact that the default value for the interpolate argument is TRUE. Since this function is usually used to plot photos taken from airplanes or satellites, the individual pixels in the photo are usually treated as essentially ‚Äúapproximations‚Äù of the ‚Äútrue‚Äù even-higher-resolution thing that we‚Äôre taking a photo of (like, down to the atomic level eventually). And so, in this scenario, smoothly drawing each pixel so that their colors gradually transition into one another turns out to make a much smoother and more natural/realistic-looking overall picture, since the ‚Äúborders‚Äù between one pixel and the next don‚Äôt actually exist in real life!\nWith all that said, in this special case where we‚Äôve constructed the raster grid from scratch, and we just want to see each color individually without this cross-grid ‚Äúblending‚Äù, we should instead override the default TRUE value for the interpolate parameter:\n\n\nCode\nrgbville |&gt; ggplot2::ggplot() +\n  tidyterra::geom_spatraster_rgb(\n    data=rgbville,\n    interpolate=FALSE\n  ) +\n  ggplot2::scale_fill_viridis_c() +\n  ggplot2::theme_classic()\n\n\n\n\n\n\n\n\n\nAnd we‚Äôve successfully plotted the six cells of our raster grid as intended! Note how now, when we use geom_spatraster_rgb() instead of geom_spatraster(), there is no legend in the generated image. This is again on purpose! Whereas with geom_spatraster() ggplot2 needed to tell the viewer of the image how exactly it chose the different colors for the different cells, here we have manually specified each color as a triple of \\((r, g, b)\\) values. This again makes sense if we think about the ‚Äústandard‚Äù case of photos taken from an airplane or satellite: we don‚Äôt need a legend telling us the RGB values for each pixel, since, we can just look at the pixels with our eyes and put them together into a full-on picture of the landscape we‚Äôve photographed!"
  },
  {
    "objectID": "assignments/index.html",
    "href": "assignments/index.html",
    "title": "Assignments: Due Dates and Point Distributions",
    "section": "",
    "text": "The following is a quick overview of the due dates for each homework assignment. Then, for each, you can use the tabs below the table to see exactly how many points are allocated for each question.\n\n\n\n\n\n\n\n\nAssignment\nRelease Date\nDue Date\n\n\n\n\nHW1: GIS Concepts: Fun with Vectors and Rasters\nTuesday, September 9\nWednesday, September 24\n\n\nHW2: Unary and Binary Operations, Spatial Joins\nThursday, September 25\nWednesday, October 8\n\n\nHW3: Autocorrelation and Clustering\nWednesday, October 8\nWednesday, October 22\n\n\nHW4: Point Hypothesis Evaluation\nWednesday, November 5\nWednesday, November 19\n\n\nHW5: Spatial Regression\nWednesday, November 19\nFriday, December 5",
    "crumbs": [
      "Assignments"
    ]
  },
  {
    "objectID": "assignments/index.html#due-dates",
    "href": "assignments/index.html#due-dates",
    "title": "Assignments: Due Dates and Point Distributions",
    "section": "",
    "text": "The following is a quick overview of the due dates for each homework assignment. Then, for each, you can use the tabs below the table to see exactly how many points are allocated for each question.\n\n\n\n\n\n\n\n\nAssignment\nRelease Date\nDue Date\n\n\n\n\nHW1: GIS Concepts: Fun with Vectors and Rasters\nTuesday, September 9\nWednesday, September 24\n\n\nHW2: Unary and Binary Operations, Spatial Joins\nThursday, September 25\nWednesday, October 8\n\n\nHW3: Autocorrelation and Clustering\nWednesday, October 8\nWednesday, October 22\n\n\nHW4: Point Hypothesis Evaluation\nWednesday, November 5\nWednesday, November 19\n\n\nHW5: Spatial Regression\nWednesday, November 19\nFriday, December 5",
    "crumbs": [
      "Assignments"
    ]
  },
  {
    "objectID": "assignments/index.html#points-per-question",
    "href": "assignments/index.html#points-per-question",
    "title": "Assignments: Due Dates and Point Distributions",
    "section": "Points Per Question",
    "text": "Points Per Question\nThe following point distributions are imported from Google Sheets mainly for transparency: so that you can see exactly how totals are computed as a sum of the individual points allocated for each test!\n\nHW1HW2\n\n\n\n\n\n\n\n\n\nquestion\nqid\npoints\nsection_total\n\n\n\n\n1\nQ1.1\n4\n\n\n\n\nQ1.2\n4\n\n\n\n\nQ1.3\n4\n\n\n\n\nQ1.4\n4\n\n\n\n\nQ1.5\n4\n\n\n\n\nQ1.6\n4\n\n\n\n\nQ1.7\n4\n\n\n\n\nQ1.8\n4\n32\n\n\n2\nQ2.1\n9\n\n\n\n\nQ2.2\n9\n\n\n\n\nQ2.3\n9\n\n\n\n\nQ2.4\n8\n35\n\n\n3\nQ3.1\n11\n\n\n\n\nQ3.2\n11\n\n\n\n\nQ3.3\n11\n33\n\n\n\nTotal\n100\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nquestion\nqid\npoints\nsection_total\n\n\n\n\n1\nQ1.1\n5\n\n\n\n\nQ1.2\n5\n\n\n\n\nQ1.3\n5\n\n\n\n\nQ1.4\n6\n\n\n\n\nQ1.5\n6\n\n\n\n\nQ1.6\n5\n32\n\n\n2\nQ2.1\n4\n\n\n\n\nQ2.2\n4\n\n\n\n\nQ2.3\n4\n\n\n\n\nQ2.4\n4\n\n\n\n\nQ2.5\n4\n\n\n\n\nQ2.6\n4\n\n\n\n\nQ2.7\n4\n\n\n\n\nQ2.8\n4\n\n\n\n\nQ2.9\n5\n\n\n\n\nQ2.10\n5\n42\n\n\n3\nQ3.1\n4\n\n\n\n\nQ3.2\n6\n\n\n\n\nQ3.3\n3\n\n\n\n\nQ3.4\n3\n\n\n\n\nQ3.5\n5\n\n\n\n\nQ3.6\n5\n26\n\n\n\nTotal\n100",
    "crumbs": [
      "Assignments"
    ]
  },
  {
    "objectID": "assignments/index.html#past-assignments-archive",
    "href": "assignments/index.html#past-assignments-archive",
    "title": "Assignments: Due Dates and Point Distributions",
    "section": "Past Assignments Archive",
    "text": "Past Assignments Archive\nLong story short, since we sometimes get requests for copies of the assignments from students after they‚Äôve completed the course, or just from interested people in general, the following listing contains ‚Äúfrozen‚Äù, archived versions of assignments from previous years in the course.\nYou can use these to get a preview for what a particular assignment might be about, but please keep in mind that the ‚Äúofficial‚Äù, updated assignments for the current semester ‚Äì the assignments you‚Äôll be completing for a grade ‚Äì are hosted on Positron! So, for example, you won‚Äôt be able to download an older version of an assignment from here and submit it for a grade, since the contents change year-by-year.",
    "crumbs": [
      "Assignments"
    ]
  },
  {
    "objectID": "w02/slides.html#helpful-feedback",
    "href": "w02/slides.html#helpful-feedback",
    "title": "Week 2: How Do Maps Work?",
    "section": "Helpful Feedback!",
    "text": "Helpful Feedback!\n\nSry for machine-gunning words/concepts at you last week\n\n\\(\\leadsto\\) Talking more slowly!\n\\(\\leadsto\\) Less colloquial language!\nPls give me grace as I enact this video in reverse\n\nMore importantly: weekly coding workshops!\n\nNot only will they ‚Äúcancel out‚Äù my too-fast DC-slang-poisoned pace, but also‚Ä¶\nFocus will be on specific blocks of code rather than higher-level concepts [but see also: ‚Äúforgetting curve‚Äù diagram a few slides ahead]"
  },
  {
    "objectID": "w02/slides.html#pedagogical-principles",
    "href": "w02/slides.html#pedagogical-principles",
    "title": "Week 2: How Do Maps Work?",
    "section": "Pedagogical Principles",
    "text": "Pedagogical Principles\n\nThere‚Äôs literally no such thing as ‚Äúintelligence‚Äù\nAnyone is capable of learning anything (neural plasticity)\nGrowth mindset: ‚ÄúI can‚Äôt do this‚Äù \\(\\leadsto\\) ‚ÄúI can‚Äôt do this yet!‚Äù\nThe point of a class is learning: understanding something about the world, either (a) For its own sake (end in itself) or (b) Because it‚Äôs relevant to something you care about (means to an end)\n\n\n\nOur teaching should be governed, not by a desire to make students learn things, but by the endeavor to keep burning within them that light which is called curiosity. (Montessori 1916)"
  },
  {
    "objectID": "w02/slides.html#chatgpt-and-whatnot",
    "href": "w02/slides.html#chatgpt-and-whatnot",
    "title": "Week 2: How Do Maps Work?",
    "section": "ChatGPT and Whatnot",
    "text": "ChatGPT and Whatnot\n\nIf you feel like ChatGPT will help you learn something in the course, then use it!\nIf you feel like you‚Äôre using it as a ‚Äúcrutch‚Äù, try to hold yourself accountable for not using it!\n\n\n\n\n\n\n\n\nTake the time/energy you're using to worry about...\nUse it instead to worry about...\n\n\n\n\n\nChatGPT\nCollaboration Policies\nPlagiarism\n\nLearning GIS"
  },
  {
    "objectID": "w02/slides.html#on-not-worrying-about-prereqs",
    "href": "w02/slides.html#on-not-worrying-about-prereqs",
    "title": "Week 2: How Do Maps Work?",
    "section": "On Not Worrying About Prereqs",
    "text": "On Not Worrying About Prereqs\n\nI genuinely believe that I can make the course accessible to you, meeting you wherever you‚Äôre at, no matter what!\nEveryone learns at their own pace (who says 14 weeks is ‚Äúcorrect‚Äù amount of time to learn GIS?), and I structure my courses as best as I possibly can to adapt to your pace\n\\(\\Rightarrow\\) Assessments (HW, Midterm) valuable in two ways:\n[Valuable for you] As an accountability mechanism to make sure you‚Äôre learn the material (how do we know when we‚Äôve learned something? When we can answer questions about it / use it to accomplish things!)\n[Valuable for me] For assessing and updating pace"
  },
  {
    "objectID": "w02/slides.html#r-andor-python-andor-js",
    "href": "w02/slides.html#r-andor-python-andor-js",
    "title": "Week 2: How Do Maps Work?",
    "section": "R and/or Python and/or JS",
    "text": "R and/or Python and/or JS\n\nMy Geometry vs.¬†Algebra Rant‚Ä¶ Euclid‚Äôs Elements, Book VI, Proposition 28.\nThe problem: Divide a given straight line so that the rectangle contained by its segments may be equal to a given area, not exceeding the square of half the line.\n\n\n\nGeometers solved w/geometry (300 BC)‚Ä¶\n\n\n\n\n\n\n‚Ä¶Algebraists solved w/algebra (2000 BC)‚Ä¶\n\\[\n\\begin{align*}\n&ax^2 + bx + c = 0 \\\\\n\\Rightarrow \\; & x_+ = \\frac{-b + \\sqrt{b^2 - 4ac}}{2a}\n\\end{align*}\n\\]\n‚Ä¶From 1637 onwards, whichever is easier! ü§Øü§Øü§Ø (Isomorphism)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†1: Circle with radius 1? Or \\((x,y)\\) satisfying \\(x^2 + y^2 = 1\\)?"
  },
  {
    "objectID": "w02/slides.html#learning-how-to-learn",
    "href": "w02/slides.html#learning-how-to-learn",
    "title": "Week 2: How Do Maps Work?",
    "section": "Learning How To Learn",
    "text": "Learning How To Learn\n\n\n\n\n\n\nFigure¬†2: From The Carter (Documentary)"
  },
  {
    "objectID": "w02/slides.html#hes-literally-extremely-correct",
    "href": "w02/slides.html#hes-literally-extremely-correct",
    "title": "Week 2: How Do Maps Work?",
    "section": "He‚Äôs Literally Extremely Correct!",
    "text": "He‚Äôs Literally Extremely Correct!\n\nFrom Elsevier Osmosis: Spaced Repetition"
  },
  {
    "objectID": "w02/slides.html#our-first-map-polygons",
    "href": "w02/slides.html#our-first-map-polygons",
    "title": "Week 2: How Do Maps Work?",
    "section": "Our First Map: Polygons!",
    "text": "Our First Map: Polygons!\n(Quick demo adapted from Sherry Xie‚Äôs R Consortium Workshop: Analyzing Geospatial Data in R, using DC rather than Philadelphia open data.)\n\n\nCode\nlibrary(sf)\n# Load DC tracts data\ndc_sf_fpath &lt;- \"data/DC_Census_2020/Census_Tracts_in_2020.shp\"\ndc_sf &lt;- st_read(dc_sf_fpath);\n\n\nReading layer `Census_Tracts_in_2020' from data source \n  `/Users/jpj/gtown-local/ppol6805/w02/data/DC_Census_2020/Census_Tracts_in_2020.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 206 features and 315 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8584933 ymin: 4691871 xmax: -8561515 ymax: 4721078\nProjected CRS: WGS 84 / Pseudo-Mercator\n\n\nCode\ncols_to_keep &lt;- c(\"OBJECTID\", \"TRACT\", \"GEOID\", \"ALAND\", \"AWATER\", \"STUSAB\", \"SUMLEV\", \"GEOCODE\", \"STATE\", \"NAME\", \"POP100\", \"HU100\", \"geometry\")\ndc_sf &lt;- dc_sf |&gt; select(cols_to_keep)"
  },
  {
    "objectID": "w02/slides.html#sf-objects",
    "href": "w02/slides.html#sf-objects",
    "title": "Week 2: How Do Maps Work?",
    "section": "sf Objects",
    "text": "sf Objects\ndc_sf is an object of type sf (short for ‚Äúsimple feature‚Äù), which extends data.frame, and contains features which have type POLYGON\n\n\nCode\nclass(dc_sf)\n\n\n[1] \"sf\"         \"data.frame\"\n\n\nCode\nhead(dc_sf)\n\n\nSimple feature collection with 6 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n2        2 002101 11001002101 600992      0     DC    140 11001002101    11\n3        3 002102 11001002102 725975      0     DC    140 11001002102    11\n4        4 002201 11001002201 415173      0     DC    140 11001002201    11\n5        5 002202 11001002202 698895    566     DC    140 11001002202    11\n6        6 000101 11001000101 199776   5261     DC    140 11001000101    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,...\n2 Census Tract 21.01   5687  2335 POLYGON ((-8574745 4715676,...\n3 Census Tract 21.02   5099  2221 POLYGON ((-8573824 4715684,...\n4 Census Tract 22.01   3485  1229 POLYGON ((-8574654 4714781,...\n5 Census Tract 22.02   3339  1454 POLYGON ((-8573792 4714811,...\n6  Census Tract 1.01   1406   999 POLYGON ((-8577962 4708867,..."
  },
  {
    "objectID": "w02/slides.html#working-with-sf-objects",
    "href": "w02/slides.html#working-with-sf-objects",
    "title": "Week 2: How Do Maps Work?",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\nWith some rare but important exceptions (which we‚Äôll learn!), can be used just like a data.frame / tibble:\n\n\nCode\nstr(dc_sf)   # view structure\n\n\nClasses 'sf' and 'data.frame':  206 obs. of  13 variables:\n $ OBJECTID: int  1 2 3 4 5 6 7 8 9 10 ...\n $ TRACT   : chr  \"002002\" \"002101\" \"002102\" \"002201\" ...\n $ GEOID   : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ ALAND   : int  849376 600992 725975 415173 698895 199776 1706484 505004 776435 1042157 ...\n $ AWATER  : int  0 0 0 0 566 5261 516665 0 439661 2305 ...\n $ STUSAB  : chr  \"DC\" \"DC\" \"DC\" \"DC\" ...\n $ SUMLEV  : int  140 140 140 140 140 140 140 140 140 140 ...\n $ GEOCODE : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ STATE   : int  11 11 11 11 11 11 11 11 11 11 ...\n $ NAME    : chr  \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\" \"Census Tract 22.01\" ...\n $ POP100  : int  4072 5687 5099 3485 3339 1406 3417 4108 4672 6161 ...\n $ HU100   : int  1532 2335 2221 1229 1454 999 2053 11 2169 2845 ...\n $ geometry:sfc_POLYGON of length 206; first list element: List of 1\n  ..$ : num [1:155, 1:2] -8575655 -8575655 -8575655 -8575655 -8575655 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:12] \"OBJECTID\" \"TRACT\" \"GEOID\" \"ALAND\" ..."
  },
  {
    "objectID": "w02/slides.html#working-with-sf-objects-1",
    "href": "w02/slides.html#working-with-sf-objects-1",
    "title": "Week 2: How Do Maps Work?",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf)  # view first several rows\n\n\nSimple feature collection with 6 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n2        2 002101 11001002101 600992      0     DC    140 11001002101    11\n3        3 002102 11001002102 725975      0     DC    140 11001002102    11\n4        4 002201 11001002201 415173      0     DC    140 11001002201    11\n5        5 002202 11001002202 698895    566     DC    140 11001002202    11\n6        6 000101 11001000101 199776   5261     DC    140 11001000101    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,...\n2 Census Tract 21.01   5687  2335 POLYGON ((-8574745 4715676,...\n3 Census Tract 21.02   5099  2221 POLYGON ((-8573824 4715684,...\n4 Census Tract 22.01   3485  1229 POLYGON ((-8574654 4714781,...\n5 Census Tract 22.02   3339  1454 POLYGON ((-8573792 4714811,...\n6  Census Tract 1.01   1406   999 POLYGON ((-8577962 4708867,..."
  },
  {
    "objectID": "w02/slides.html#working-with-sf-objects-2",
    "href": "w02/slides.html#working-with-sf-objects-2",
    "title": "Week 2: How Do Maps Work?",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\ndim(dc_sf)   # view dimensions\n\n\n[1] 206  13\n\n\nCode\ndc_sf[1,]    # select first row\n\n\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8575656 ymin: 4713958 xmax: -8574562 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,..."
  },
  {
    "objectID": "w02/slides.html#working-with-sf-objects-3",
    "href": "w02/slides.html#working-with-sf-objects-3",
    "title": "Week 2: How Do Maps Work?",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf$NAME)  # select column by name  \n\n\n[1] \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\"\n[4] \"Census Tract 22.01\" \"Census Tract 22.02\" \"Census Tract 1.01\" \n\n\nCode\nhead(dc_sf[,4])         # select column by number\n\n\nSimple feature collection with 6 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n   ALAND                       geometry\n1 849376 POLYGON ((-8575655 4714476,...\n2 600992 POLYGON ((-8574745 4715676,...\n3 725975 POLYGON ((-8573824 4715684,...\n4 415173 POLYGON ((-8574654 4714781,...\n5 698895 POLYGON ((-8573792 4714811,...\n6 199776 POLYGON ((-8577962 4708867,..."
  },
  {
    "objectID": "w02/slides.html#and-actually-displaying-the-map",
    "href": "w02/slides.html#and-actually-displaying-the-map",
    "title": "Week 2: How Do Maps Work?",
    "section": "And‚Ä¶ Actually Displaying the Map!",
    "text": "And‚Ä¶ Actually Displaying the Map!\n\n\nCode\n# We can extract the geometry with the st_geometry function\ndc_geo &lt;- st_geometry(dc_sf)\n#pt_geo\n\n# Plot the geometry with base R's plot() function\nplot(dc_geo)"
  },
  {
    "objectID": "w02/slides.html#and-with-ggplot",
    "href": "w02/slides.html#and-with-ggplot",
    "title": "Week 2: How Do Maps Work?",
    "section": "And with ggplot!",
    "text": "And with ggplot!\n\n\nCode\ndc_sf |&gt;\n  ggplot() +\n  geom_sf() +\n  theme_classic()"
  },
  {
    "objectID": "w02/slides.html#raster-data",
    "href": "w02/slides.html#raster-data",
    "title": "Week 2: How Do Maps Work?",
    "section": "Raster Data",
    "text": "Raster Data\n\nEach DC Census Tract has its own (odd) shape, which can be described by discrete coordinates forming a POLYGON\nFor geospatial analysis, however, we often need to compute over evenly-spaced grids rather than this odd collection of shapes\n\nMost common example: photos taken from an airplane/satellite! [Remote sensing]\n\nPOLYGONs may make sense for demographers, but how about someone studying air pollution in DC? (Smog, for example, does not confine itself to census tracts!)"
  },
  {
    "objectID": "w02/slides.html#step-1-union-of-all-tracts",
    "href": "w02/slides.html#step-1-union-of-all-tracts",
    "title": "Week 2: How Do Maps Work?",
    "section": "Step 1: Union of All Tracts",
    "text": "Step 1: Union of All Tracts\n\n\nCode\ndc_union_sf &lt;- sf::st_union(dc_sf)\ndc_union_sf |&gt;\n  ggplot() +\n  geom_sf() +\n  theme_classic()"
  },
  {
    "objectID": "w02/slides.html#step-2-rasterize-terra",
    "href": "w02/slides.html#step-2-rasterize-terra",
    "title": "Week 2: How Do Maps Work?",
    "section": "Step 2: Rasterize (terra)",
    "text": "Step 2: Rasterize (terra)\n\n\nCode\nlibrary(terra)\ndc_SpatVector &lt;- terra::vect(dc_union_sf)\nrast_template &lt;- rast(ext(dc_SpatVector), resolution = 1000, crs = crs(dc_SpatVector))\ndc_SpatRaster &lt;- terra::rasterize(dc_SpatVector, rast_template)\ndim(dc_SpatRaster)\n\n\n[1] 29 23  1\n\n\nCode\nplot(dc_SpatRaster)"
  },
  {
    "objectID": "w02/slides.html#rasters-from-scratch",
    "href": "w02/slides.html#rasters-from-scratch",
    "title": "Week 2: How Do Maps Work?",
    "section": "Rasters From Scratch",
    "text": "Rasters From Scratch\nWelcome to Gridtown!\n\n\n\nCode\nset.seed(6805)\nlibrary(terra)\ngridtown &lt;- terra::rast(\n  nrows = 4, ncols = 4,\n  xmin = 0, xmax = 4, ymin = 0, ymax = 4,\n  vals = sample(1:16)\n)\nplot(gridtown)\ntext(\n  gridtown,\n  labels=1:16,\n  halo=TRUE, hc=\"black\", col=\"white\", hw=0.2\n)\n\n\n\n\n\n\n\n\n\nFigure¬†3: Gridtown Indices\n\n\n\n\n\n\nRaster indices vs.¬†values: The above plot displays indices for each cell: since a raster is a regular grid, can achieve memory-efficient representation with a single index (rather than, e.g., \\((x, y)\\) coords). But what we really care about are‚Ä¶"
  },
  {
    "objectID": "w02/slides.html#raster-layer-values",
    "href": "w02/slides.html#raster-layer-values",
    "title": "Week 2: How Do Maps Work?",
    "section": "Raster Layer Values",
    "text": "Raster Layer Values\n\n\nCode\nplot(gridtown)\ntext(gridtown, halo=TRUE, hc=\"black\", col=\"white\", hw=0.2)\n\n\n\n\nFigure¬†4: Gridtown Values"
  },
  {
    "objectID": "w02/slides.html#references",
    "href": "w02/slides.html#references",
    "title": "Week 2: How Do Maps Work?",
    "section": "References",
    "text": "References\n\n\nMontessori, Maria. 1916. Spontaneous Activity in Education: A Basic Guide to the Montessori Methods of Learning in the Classroom. Lulu Press."
  },
  {
    "objectID": "w02/index.html",
    "href": "w02/index.html",
    "title": "Week 2: How Do Maps Work?",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#helpful-feedback",
    "href": "w02/index.html#helpful-feedback",
    "title": "Week 2: How Do Maps Work?",
    "section": "Helpful Feedback!",
    "text": "Helpful Feedback!\n\nSry for machine-gunning words/concepts at you last week\n\n\\(\\leadsto\\) Talking more slowly!\n\\(\\leadsto\\) Less colloquial language!\nPls give me grace as I enact this video in reverse\n\nMore importantly: weekly coding workshops!\n\nNot only will they ‚Äúcancel out‚Äù my too-fast DC-slang-poisoned pace, but also‚Ä¶\nFocus will be on specific blocks of code rather than higher-level concepts [but see also: ‚Äúforgetting curve‚Äù diagram a few slides ahead]",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#pedagogical-principles",
    "href": "w02/index.html#pedagogical-principles",
    "title": "Week 2: How Do Maps Work?",
    "section": "Pedagogical Principles",
    "text": "Pedagogical Principles\n\nThere‚Äôs literally no such thing as ‚Äúintelligence‚Äù\nAnyone is capable of learning anything (neural plasticity)\nGrowth mindset: ‚ÄúI can‚Äôt do this‚Äù \\(\\leadsto\\) ‚ÄúI can‚Äôt do this yet!‚Äù\nThe point of a class is learning: understanding something about the world, either (a) For its own sake (end in itself) or (b) Because it‚Äôs relevant to something you care about (means to an end)\n\n\n\nOur teaching should be governed, not by a desire to make students learn things, but by the endeavor to keep burning within them that light which is called curiosity. (Montessori 1916)",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#chatgpt-and-whatnot",
    "href": "w02/index.html#chatgpt-and-whatnot",
    "title": "Week 2: How Do Maps Work?",
    "section": "ChatGPT and Whatnot",
    "text": "ChatGPT and Whatnot\n\nIf you feel like ChatGPT will help you learn something in the course, then use it!\nIf you feel like you‚Äôre using it as a ‚Äúcrutch‚Äù, try to hold yourself accountable for not using it!\n\n\n\n\n\n\n\n\nTake the time/energy you're using to worry about...\nUse it instead to worry about...\n\n\n\n\n\nChatGPT\nCollaboration Policies\nPlagiarism\n\nLearning GIS",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#on-not-worrying-about-prereqs",
    "href": "w02/index.html#on-not-worrying-about-prereqs",
    "title": "Week 2: How Do Maps Work?",
    "section": "On Not Worrying About Prereqs",
    "text": "On Not Worrying About Prereqs\n\nI genuinely believe that I can make the course accessible to you, meeting you wherever you‚Äôre at, no matter what!\nEveryone learns at their own pace (who says 14 weeks is ‚Äúcorrect‚Äù amount of time to learn GIS?), and I structure my courses as best as I possibly can to adapt to your pace\n\\(\\Rightarrow\\) Assessments (HW, Midterm) valuable in two ways:\n[Valuable for you] As an accountability mechanism to make sure you‚Äôre learn the material (how do we know when we‚Äôve learned something? When we can answer questions about it / use it to accomplish things!)\n[Valuable for me] For assessing and updating pace",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#r-andor-python-andor-js",
    "href": "w02/index.html#r-andor-python-andor-js",
    "title": "Week 2: How Do Maps Work?",
    "section": "R and/or Python and/or JS",
    "text": "R and/or Python and/or JS\n\nMy Geometry vs.¬†Algebra Rant‚Ä¶ Euclid‚Äôs Elements, Book VI, Proposition 28.\nThe problem: Divide a given straight line so that the rectangle contained by its segments may be equal to a given area, not exceeding the square of half the line.\n\n\n\nGeometers solved w/geometry (300 BC)‚Ä¶\n\n\n\n\n\n\n‚Ä¶Algebraists solved w/algebra (2000 BC)‚Ä¶\n\\[\n\\begin{align*}\n&ax^2 + bx + c = 0 \\\\\n\\Rightarrow \\; & x_+ = \\frac{-b + \\sqrt{b^2 - 4ac}}{2a}\n\\end{align*}\n\\]\n‚Ä¶From 1637 onwards, whichever is easier! ü§Øü§Øü§Ø (Isomorphism)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure¬†1: Circle with radius 1? Or \\((x,y)\\) satisfying \\(x^2 + y^2 = 1\\)?",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#learning-how-to-learn",
    "href": "w02/index.html#learning-how-to-learn",
    "title": "Week 2: How Do Maps Work?",
    "section": "Learning How To Learn",
    "text": "Learning How To Learn\n\n\n\n\n\n\nFigure¬†2: From The Carter (Documentary)",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#hes-literally-extremely-correct",
    "href": "w02/index.html#hes-literally-extremely-correct",
    "title": "Week 2: How Do Maps Work?",
    "section": "He‚Äôs Literally Extremely Correct!",
    "text": "He‚Äôs Literally Extremely Correct!\n\n\n\nFrom Elsevier Osmosis: Spaced Repetition",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#our-first-map-polygons",
    "href": "w02/index.html#our-first-map-polygons",
    "title": "Week 2: How Do Maps Work?",
    "section": "Our First Map: Polygons!",
    "text": "Our First Map: Polygons!\n(Quick demo adapted from Sherry Xie‚Äôs R Consortium Workshop: Analyzing Geospatial Data in R, using DC rather than Philadelphia open data.)\n\n\nCode\nlibrary(sf)\n# Load DC tracts data\ndc_sf_fpath &lt;- \"data/DC_Census_2020/Census_Tracts_in_2020.shp\"\ndc_sf &lt;- st_read(dc_sf_fpath);\n\n\nReading layer `Census_Tracts_in_2020' from data source \n  `/Users/jpj/gtown-local/ppol6805/w02/data/DC_Census_2020/Census_Tracts_in_2020.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 206 features and 315 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8584933 ymin: 4691871 xmax: -8561515 ymax: 4721078\nProjected CRS: WGS 84 / Pseudo-Mercator\n\n\nCode\ncols_to_keep &lt;- c(\"OBJECTID\", \"TRACT\", \"GEOID\", \"ALAND\", \"AWATER\", \"STUSAB\", \"SUMLEV\", \"GEOCODE\", \"STATE\", \"NAME\", \"POP100\", \"HU100\", \"geometry\")\ndc_sf &lt;- dc_sf |&gt; select(cols_to_keep)\n\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\n‚Ñπ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(cols_to_keep)\n\n  # Now:\n  data %&gt;% select(all_of(cols_to_keep))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#sf-objects",
    "href": "w02/index.html#sf-objects",
    "title": "Week 2: How Do Maps Work?",
    "section": "sf Objects",
    "text": "sf Objects\ndc_sf is an object of type sf (short for ‚Äúsimple feature‚Äù), which extends data.frame, and contains features which have type POLYGON\n\n\nCode\nclass(dc_sf)\n\n\n[1] \"sf\"         \"data.frame\"\n\n\nCode\nhead(dc_sf)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nTRACT\nGEOID\nALAND\nAWATER\nSTUSAB\nSUMLEV\nGEOCODE\nSTATE\nNAME\nPOP100\nHU100\ngeometry\n\n\n\n\n1\n002002\n11001002002\n849376\n0\nDC\n140\n11001002002\n11\nCensus Tract 20.02\n4072\n1532\nPOLYGON ((-8575655 4714476,‚Ä¶\n\n\n2\n002101\n11001002101\n600992\n0\nDC\n140\n11001002101\n11\nCensus Tract 21.01\n5687\n2335\nPOLYGON ((-8574745 4715676,‚Ä¶\n\n\n3\n002102\n11001002102\n725975\n0\nDC\n140\n11001002102\n11\nCensus Tract 21.02\n5099\n2221\nPOLYGON ((-8573824 4715684,‚Ä¶\n\n\n4\n002201\n11001002201\n415173\n0\nDC\n140\n11001002201\n11\nCensus Tract 22.01\n3485\n1229\nPOLYGON ((-8574654 4714781,‚Ä¶\n\n\n5\n002202\n11001002202\n698895\n566\nDC\n140\n11001002202\n11\nCensus Tract 22.02\n3339\n1454\nPOLYGON ((-8573792 4714811,‚Ä¶\n\n\n6\n000101\n11001000101\n199776\n5261\nDC\n140\n11001000101\n11\nCensus Tract 1.01\n1406\n999\nPOLYGON ((-8577962 4708867,‚Ä¶",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#working-with-sf-objects",
    "href": "w02/index.html#working-with-sf-objects",
    "title": "Week 2: How Do Maps Work?",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\nWith some rare but important exceptions (which we‚Äôll learn!), can be used just like a data.frame / tibble:\n\n\nCode\nstr(dc_sf)   # view structure\n\n\nClasses 'sf' and 'data.frame':  206 obs. of  13 variables:\n $ OBJECTID: int  1 2 3 4 5 6 7 8 9 10 ...\n $ TRACT   : chr  \"002002\" \"002101\" \"002102\" \"002201\" ...\n $ GEOID   : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ ALAND   : int  849376 600992 725975 415173 698895 199776 1706484 505004 776435 1042157 ...\n $ AWATER  : int  0 0 0 0 566 5261 516665 0 439661 2305 ...\n $ STUSAB  : chr  \"DC\" \"DC\" \"DC\" \"DC\" ...\n $ SUMLEV  : int  140 140 140 140 140 140 140 140 140 140 ...\n $ GEOCODE : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ STATE   : int  11 11 11 11 11 11 11 11 11 11 ...\n $ NAME    : chr  \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\" \"Census Tract 22.01\" ...\n $ POP100  : int  4072 5687 5099 3485 3339 1406 3417 4108 4672 6161 ...\n $ HU100   : int  1532 2335 2221 1229 1454 999 2053 11 2169 2845 ...\n $ geometry:sfc_POLYGON of length 206; first list element: List of 1\n  ..$ : num [1:155, 1:2] -8575655 -8575655 -8575655 -8575655 -8575655 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:12] \"OBJECTID\" \"TRACT\" \"GEOID\" \"ALAND\" ...",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#working-with-sf-objects-1",
    "href": "w02/index.html#working-with-sf-objects-1",
    "title": "Week 2: How Do Maps Work?",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf)  # view first several rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nTRACT\nGEOID\nALAND\nAWATER\nSTUSAB\nSUMLEV\nGEOCODE\nSTATE\nNAME\nPOP100\nHU100\ngeometry\n\n\n\n\n1\n002002\n11001002002\n849376\n0\nDC\n140\n11001002002\n11\nCensus Tract 20.02\n4072\n1532\nPOLYGON ((-8575655 4714476,‚Ä¶\n\n\n2\n002101\n11001002101\n600992\n0\nDC\n140\n11001002101\n11\nCensus Tract 21.01\n5687\n2335\nPOLYGON ((-8574745 4715676,‚Ä¶\n\n\n3\n002102\n11001002102\n725975\n0\nDC\n140\n11001002102\n11\nCensus Tract 21.02\n5099\n2221\nPOLYGON ((-8573824 4715684,‚Ä¶\n\n\n4\n002201\n11001002201\n415173\n0\nDC\n140\n11001002201\n11\nCensus Tract 22.01\n3485\n1229\nPOLYGON ((-8574654 4714781,‚Ä¶\n\n\n5\n002202\n11001002202\n698895\n566\nDC\n140\n11001002202\n11\nCensus Tract 22.02\n3339\n1454\nPOLYGON ((-8573792 4714811,‚Ä¶\n\n\n6\n000101\n11001000101\n199776\n5261\nDC\n140\n11001000101\n11\nCensus Tract 1.01\n1406\n999\nPOLYGON ((-8577962 4708867,‚Ä¶",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#working-with-sf-objects-2",
    "href": "w02/index.html#working-with-sf-objects-2",
    "title": "Week 2: How Do Maps Work?",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\ndim(dc_sf)   # view dimensions\n\n\n[1] 206  13\n\n\nCode\ndc_sf[1,]    # select first row\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nTRACT\nGEOID\nALAND\nAWATER\nSTUSAB\nSUMLEV\nGEOCODE\nSTATE\nNAME\nPOP100\nHU100\ngeometry\n\n\n\n\n1\n002002\n11001002002\n849376\n0\nDC\n140\n11001002002\n11\nCensus Tract 20.02\n4072\n1532\nPOLYGON ((-8575655 4714476,‚Ä¶",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#working-with-sf-objects-3",
    "href": "w02/index.html#working-with-sf-objects-3",
    "title": "Week 2: How Do Maps Work?",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf$NAME)  # select column by name  \n\n\n[1] \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\"\n[4] \"Census Tract 22.01\" \"Census Tract 22.02\" \"Census Tract 1.01\" \n\n\nCode\nhead(dc_sf[,4])         # select column by number\n\n\n\n\n\n\nALAND\ngeometry\n\n\n\n\n849376\nPOLYGON ((-8575655 4714476,‚Ä¶\n\n\n600992\nPOLYGON ((-8574745 4715676,‚Ä¶\n\n\n725975\nPOLYGON ((-8573824 4715684,‚Ä¶\n\n\n415173\nPOLYGON ((-8574654 4714781,‚Ä¶\n\n\n698895\nPOLYGON ((-8573792 4714811,‚Ä¶\n\n\n199776\nPOLYGON ((-8577962 4708867,‚Ä¶",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#and-actually-displaying-the-map",
    "href": "w02/index.html#and-actually-displaying-the-map",
    "title": "Week 2: How Do Maps Work?",
    "section": "And‚Ä¶ Actually Displaying the Map!",
    "text": "And‚Ä¶ Actually Displaying the Map!\n\n\nCode\n# We can extract the geometry with the st_geometry function\ndc_geo &lt;- st_geometry(dc_sf)\n#pt_geo\n\n# Plot the geometry with base R's plot() function\nplot(dc_geo)",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#and-with-ggplot",
    "href": "w02/index.html#and-with-ggplot",
    "title": "Week 2: How Do Maps Work?",
    "section": "And with ggplot!",
    "text": "And with ggplot!\n\n\nCode\ndc_sf |&gt;\n  ggplot() +\n  geom_sf() +\n  theme_classic()",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#raster-data",
    "href": "w02/index.html#raster-data",
    "title": "Week 2: How Do Maps Work?",
    "section": "Raster Data",
    "text": "Raster Data\n\nEach DC Census Tract has its own (odd) shape, which can be described by discrete coordinates forming a POLYGON\nFor geospatial analysis, however, we often need to compute over evenly-spaced grids rather than this odd collection of shapes\n\nMost common example: photos taken from an airplane/satellite! [Remote sensing]\n\nPOLYGONs may make sense for demographers, but how about someone studying air pollution in DC? (Smog, for example, does not confine itself to census tracts!)",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#step-1-union-of-all-tracts",
    "href": "w02/index.html#step-1-union-of-all-tracts",
    "title": "Week 2: How Do Maps Work?",
    "section": "Step 1: Union of All Tracts",
    "text": "Step 1: Union of All Tracts\n\n\nCode\ndc_union_sf &lt;- sf::st_union(dc_sf)\ndc_union_sf |&gt;\n  ggplot() +\n  geom_sf() +\n  theme_classic()",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#step-2-rasterize-terra",
    "href": "w02/index.html#step-2-rasterize-terra",
    "title": "Week 2: How Do Maps Work?",
    "section": "Step 2: Rasterize (terra)",
    "text": "Step 2: Rasterize (terra)\n\n\nCode\nlibrary(terra)\n\n\nterra 1.7.78\n\n\n\nAttaching package: 'terra'\n\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\n\nCode\ndc_SpatVector &lt;- terra::vect(dc_union_sf)\nrast_template &lt;- rast(ext(dc_SpatVector), resolution = 1000, crs = crs(dc_SpatVector))\ndc_SpatRaster &lt;- terra::rasterize(dc_SpatVector, rast_template)\ndim(dc_SpatRaster)\n\n\n[1] 29 23  1\n\n\nCode\nplot(dc_SpatRaster)",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#rasters-from-scratch",
    "href": "w02/index.html#rasters-from-scratch",
    "title": "Week 2: How Do Maps Work?",
    "section": "Rasters From Scratch",
    "text": "Rasters From Scratch\nWelcome to Gridtown!\n\n\nCode\nset.seed(6805)\nlibrary(terra)\ngridtown &lt;- terra::rast(\n  nrows = 4, ncols = 4,\n  xmin = 0, xmax = 4, ymin = 0, ymax = 4,\n  vals = sample(1:16)\n)\nplot(gridtown)\ntext(\n  gridtown,\n  labels=1:16,\n  halo=TRUE, hc=\"black\", col=\"white\", hw=0.2\n)\n\n\n\n\n\n\n\n\nFigure¬†3: Gridtown Indices\n\n\n\n\n\n\nRaster indices vs.¬†values: The above plot displays indices for each cell: since a raster is a regular grid, can achieve memory-efficient representation with a single index (rather than, e.g., \\((x, y)\\) coords). But what we really care about are‚Ä¶",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#raster-layer-values",
    "href": "w02/index.html#raster-layer-values",
    "title": "Week 2: How Do Maps Work?",
    "section": "Raster Layer Values",
    "text": "Raster Layer Values\n\n\nCode\nplot(gridtown)\ntext(gridtown, halo=TRUE, hc=\"black\", col=\"white\", hw=0.2)\n\n\n\n\n\n\n\n\nFigure¬†4: Gridtown Values",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w02/index.html#references",
    "href": "w02/index.html#references",
    "title": "Week 2: How Do Maps Work?",
    "section": "References",
    "text": "References\n\n\nMontessori, Maria. 1916. Spontaneous Activity in Education: A Basic Guide to the Montessori Methods of Learning in the Classroom. Lulu Press.",
    "crumbs": [
      "Week 2: Sep 3"
    ]
  },
  {
    "objectID": "w04/slides.html#hw1-question-1-generally",
    "href": "w04/slides.html#hw1-question-1-generally",
    "title": "Week 4: Unary and Binary Operations",
    "section": "HW1 Question 1 Generally",
    "text": "HW1 Question 1 Generally\n\n‚ÄúSimplest‚Äù / Most Efficient Representation\n\n‚ÄúIndicate which of the seven geometries above would provide the simplest representation of the entity‚Äù\n\nGEOMETRYCOLLECTION could represent any of the geographic entities in Q1, but would be overkill for representing e.g.¬†a single point or line"
  },
  {
    "objectID": "w04/slides.html#hw1-question-1.8-specifically",
    "href": "w04/slides.html#hw1-question-1.8-specifically",
    "title": "Week 4: Unary and Binary Operations",
    "section": "HW1 Question 1.8 Specifically",
    "text": "HW1 Question 1.8 Specifically\nFor the United Arab Emirates (UAE) data‚Ä¶ we have what we call the Not-Paraguay-Problem: Most countries, including the UAE, have a bunch of lil ‚Äúpieces‚Äù:\n\n\n\n\nCode\nru_national_map &lt;- ne_countries(type = \"countries\", country = \"Russia\", scale = \"medium\", returnclass = \"sf\")\nmapview(ru_national_map)\n\n\n\n\n\n\n\n\n\nCode\nuae_national_map &lt;- ne_countries(type = \"countries\", country = \"United Arab Emirates\", scale = \"large\", returnclass = \"sf\")\nmapview(uae_national_map)\n\n\n\n\n\n\n\nSo, for Q1.8: Assume we‚Äôre just trying to have the computer represent the ‚Äúmainland‚Äù (the biggest contiguous landmass, with Dubai on it!)"
  },
  {
    "objectID": "w04/slides.html#public-vs.-hidden-tests",
    "href": "w04/slides.html#public-vs.-hidden-tests",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Public vs.¬†Hidden Tests",
    "text": "Public vs.¬†Hidden Tests\n\nPublic Tests are basically ‚ÄúQuality Assurance Test‚Äù\nHidden Tests check for correctness"
  },
  {
    "objectID": "w04/slides.html#latitude-and-longitude-are-angles",
    "href": "w04/slides.html#latitude-and-longitude-are-angles",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Latitude and Longitude are Angles!",
    "text": "Latitude and Longitude are Angles!\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "w04/slides.html#angular-distance-vs.-travel-distance",
    "href": "w04/slides.html#angular-distance-vs.-travel-distance",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Angular Distance vs.¬†Travel Distance",
    "text": "Angular Distance vs.¬†Travel Distance\nThe Earth‚Äôs ‚Äúwidth‚Äù is slightly greater than its ‚Äúlength‚Äù üò∞\n\nFrom Wikimedia Commons"
  },
  {
    "objectID": "w04/slides.html#smooshing-3d-into-2d",
    "href": "w04/slides.html#smooshing-3d-into-2d",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Smooshing 3D into 2D",
    "text": "Smooshing 3D into 2D\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w04/slides.html#avoid-getting-lost-in-the-sauce",
    "href": "w04/slides.html#avoid-getting-lost-in-the-sauce",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Avoid Getting Lost in the Sauce",
    "text": "Avoid Getting Lost in the Sauce"
  },
  {
    "objectID": "w04/slides.html#how-to-avoid-getting-lost-in-the-sauce",
    "href": "w04/slides.html#how-to-avoid-getting-lost-in-the-sauce",
    "title": "Week 4: Unary and Binary Operations",
    "section": "How To Avoid Getting Lost in the Sauce",
    "text": "How To Avoid Getting Lost in the Sauce\n\n\n\n\n\nTissot Circles: Imagine infinitely small ellipses placed at regular intervals on the curved surface of the earth. Imagine these ellipses being projected along with the earth‚Äôs surface. When scaled up, changes in the ellipses show the location and quality of distortions on the projected map."
  },
  {
    "objectID": "w04/slides.html#the-uss-ur-choropleth-1-population",
    "href": "w04/slides.html#the-uss-ur-choropleth-1-population",
    "title": "Week 4: Unary and Binary Operations",
    "section": "The US‚Äôs Ur-Choropleth #1: Population",
    "text": "The US‚Äôs Ur-Choropleth #1: Population\n\nKieran Healy, ‚ÄúAmerica‚Äôs Ur-Choropleths‚Äù"
  },
  {
    "objectID": "w04/slides.html#the-uss-ur-choropleth-2-race",
    "href": "w04/slides.html#the-uss-ur-choropleth-2-race",
    "title": "Week 4: Unary and Binary Operations",
    "section": "The US‚Äôs Ur-Choropleth #2: Race",
    "text": "The US‚Äôs Ur-Choropleth #2: Race\n\nKieran Healy, ‚ÄúAmerica‚Äôs Ur-Choropleths‚Äù"
  },
  {
    "objectID": "w04/slides.html#crime-in-mongolia",
    "href": "w04/slides.html#crime-in-mongolia",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Crime in Mongolia",
    "text": "Crime in Mongolia\n\nFrom Reddit"
  },
  {
    "objectID": "w04/slides.html#population-of-mongolia",
    "href": "w04/slides.html#population-of-mongolia",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Population of Mongolia",
    "text": "Population of Mongolia\n\nFrom Wikimedia Commons"
  },
  {
    "objectID": "w04/slides.html#exhibit-a",
    "href": "w04/slides.html#exhibit-a",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Exhibit A",
    "text": "Exhibit A\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w04/slides.html#exhibit-b",
    "href": "w04/slides.html#exhibit-b",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Exhibit B",
    "text": "Exhibit B\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w04/slides.html#continuous-choropleth",
    "href": "w04/slides.html#continuous-choropleth",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Continuous Choropleth",
    "text": "Continuous Choropleth\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "w04/slides.html#quantile-colormap",
    "href": "w04/slides.html#quantile-colormap",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Quantile Colormap",
    "text": "Quantile Colormap\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\nAssigns the same number of observations to each color\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "w04/slides.html#equal-area-colormap",
    "href": "w04/slides.html#equal-area-colormap",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Equal-Area Colormap",
    "text": "Equal-Area Colormap\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\nBoundaries between colors come at regular (equal) intervals\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "w04/slides.html#natural-break-colormap",
    "href": "w04/slides.html#natural-break-colormap",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Natural-Break Colormap",
    "text": "Natural-Break Colormap\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\nClustering algorithm chooses classes to (a) minimize differences within classes, (b) maximize differences between classes\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "w04/slides.html#context-sensitive-colormap",
    "href": "w04/slides.html#context-sensitive-colormap",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Context-Sensitive Colormap",
    "text": "Context-Sensitive Colormap\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\nA government program offers special funding for counties with above 25% poverty\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "w04/slides.html#the-importance-of-history",
    "href": "w04/slides.html#the-importance-of-history",
    "title": "Week 4: Unary and Binary Operations",
    "section": "The Importance of History",
    "text": "The Importance of History\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "w04/slides.html#getting-the-geometries",
    "href": "w04/slides.html#getting-the-geometries",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Getting the Geometries",
    "text": "Getting the Geometries\nUsing rnaturalearth with mapview\n\n\nCode\nset.seed(6805)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(mapview)\nfrance_sf &lt;- ne_countries(country = \"France\", scale = 50)\n(france_map &lt;- mapview(france_sf, label = \"geounit\", legend = FALSE))"
  },
  {
    "objectID": "w04/slides.html#centroid-of-france",
    "href": "w04/slides.html#centroid-of-france",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Centroid of France",
    "text": "Centroid of France\n\n\nCode\nfrance_cent_sf &lt;- sf::st_centroid(france_sf)\nfrance_map + mapview(france_cent_sf, label = \"Centroid\", legend = FALSE)"
  },
  {
    "objectID": "w04/slides.html#one-we-already-saw-union",
    "href": "w04/slides.html#one-we-already-saw-union",
    "title": "Week 4: Unary and Binary Operations",
    "section": "One We Already Saw: Union",
    "text": "One We Already Saw: Union\nComputing the union of all geometries in the sf via sf::st_union()\n\n\nCode\nlibrary(leaflet.extras2)\nafrica_sf &lt;- ne_countries(continent = \"Africa\", scale = 50)\nafrica_union_sf &lt;- sf::st_union(africa_sf)\nafrica_map &lt;- mapview(africa_sf, label=\"geounit\", legend=FALSE)\nafrica_union_map &lt;- mapview(africa_union_sf, label=\"st_union(africa)\", legend=FALSE)\nafrica_map | africa_union_map"
  },
  {
    "objectID": "w04/slides.html#helpful-for-rasterizing-bbox",
    "href": "w04/slides.html#helpful-for-rasterizing-bbox",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Helpful for Rasterizing: BBox",
    "text": "Helpful for Rasterizing: BBox\n\n\nCode\nafrica_bbox_sf &lt;- sf::st_bbox(africa_sf)\nafrica_bbox_map &lt;- mapview(africa_bbox_sf, label=\"st_bbox(africa)\", legend=FALSE)\nafrica_map | africa_bbox_map"
  },
  {
    "objectID": "w04/slides.html#convex-hulls-by-country",
    "href": "w04/slides.html#convex-hulls-by-country",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Convex Hulls by Country",
    "text": "Convex Hulls by Country\n\n\nCode\nafrica_countries_cvx &lt;- sf::st_convex_hull(africa_sf)\nafrica_countries_cvx_map &lt;- mapview(africa_countries_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_countries_cvx_map"
  },
  {
    "objectID": "w04/slides.html#convex-hull-of-continent",
    "href": "w04/slides.html#convex-hull-of-continent",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Convex Hull of Continent",
    "text": "Convex Hull of Continent\nUse st_union() first:\n\n\nCode\nafrica_cvx &lt;- africa_sf |&gt; st_union() |&gt; st_convex_hull()\nafrica_cvx_map &lt;- mapview(africa_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cvx_map"
  },
  {
    "objectID": "w04/slides.html#one-we-already-saw-centroids",
    "href": "w04/slides.html#one-we-already-saw-centroids",
    "title": "Week 4: Unary and Binary Operations",
    "section": "One We Already Saw: Centroids",
    "text": "One We Already Saw: Centroids\nComputing the centroid of all geometries in the sf via sf::st_centroid()\n\n\nCode\nafrica_cents_sf &lt;- sf::st_centroid(africa_sf)\nafrica_cents_map &lt;- mapview(africa_cents_sf, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cents_map"
  },
  {
    "objectID": "w04/slides.html#references",
    "href": "w04/slides.html#references",
    "title": "Week 4: Unary and Binary Operations",
    "section": "References",
    "text": "References\n\n\nKrygier, John, and Denis Wood. 2016. Making Maps, Third Edition: A Visual Guide to Map Design for GIS. Guilford Publications.\n\n\nMonmonier, Mark. 2018. How to Lie with Maps. University of Chicago Press. https://www.dropbox.com/scl/fi/7rsqbxgge6llggnaf5tit/How-to-Lie-with-Maps-Third-Edition.pdf?rlkey=6rqxta7cjyq3oqdnskj4dtwj8&dl=1."
  },
  {
    "objectID": "w04/index.html",
    "href": "w04/index.html",
    "title": "Week 4: Unary and Binary Operations",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#hw1-question-1-generally",
    "href": "w04/index.html#hw1-question-1-generally",
    "title": "Week 4: Unary and Binary Operations",
    "section": "HW1 Question 1 Generally",
    "text": "HW1 Question 1 Generally\n\n‚ÄúSimplest‚Äù / Most Efficient Representation\n\n‚ÄúIndicate which of the seven geometries above would provide the simplest representation of the entity‚Äù\n\nGEOMETRYCOLLECTION could represent any of the geographic entities in Q1, but would be overkill for representing e.g.¬†a single point or line",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#hw1-question-1.8-specifically",
    "href": "w04/index.html#hw1-question-1.8-specifically",
    "title": "Week 4: Unary and Binary Operations",
    "section": "HW1 Question 1.8 Specifically",
    "text": "HW1 Question 1.8 Specifically\nFor the United Arab Emirates (UAE) data‚Ä¶ we have what we call the Not-Paraguay-Problem: Most countries, including the UAE, have a bunch of lil ‚Äúpieces‚Äù:\n\n\n\n\nCode\nru_national_map &lt;- ne_countries(type = \"countries\", country = \"Russia\", scale = \"medium\", returnclass = \"sf\")\nmapview(ru_national_map)\n\n\n\n\n\n\n\n\n\nCode\nuae_national_map &lt;- ne_countries(type = \"countries\", country = \"United Arab Emirates\", scale = \"large\", returnclass = \"sf\")\nmapview(uae_national_map)\n\n\n\n\n\n\n\n\nSo, for Q1.8: Assume we‚Äôre just trying to have the computer represent the ‚Äúmainland‚Äù (the biggest contiguous landmass, with Dubai on it!)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#public-vs.-hidden-tests",
    "href": "w04/index.html#public-vs.-hidden-tests",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Public vs.¬†Hidden Tests",
    "text": "Public vs.¬†Hidden Tests\n\nPublic Tests are basically ‚ÄúQuality Assurance Test‚Äù\nHidden Tests check for correctness",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#latitude-and-longitude-are-angles",
    "href": "w04/index.html#latitude-and-longitude-are-angles",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Latitude and Longitude are Angles!",
    "text": "Latitude and Longitude are Angles!\n\n\n\nFrom Krygier and Wood (2016)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#angular-distance-vs.-travel-distance",
    "href": "w04/index.html#angular-distance-vs.-travel-distance",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Angular Distance vs.¬†Travel Distance",
    "text": "Angular Distance vs.¬†Travel Distance\nThe Earth‚Äôs ‚Äúwidth‚Äù is slightly greater than its ‚Äúlength‚Äù üò∞\n\n\n\nFrom Wikimedia Commons",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#smooshing-3d-into-2d",
    "href": "w04/index.html#smooshing-3d-into-2d",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Smooshing 3D into 2D",
    "text": "Smooshing 3D into 2D\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#avoid-getting-lost-in-the-sauce",
    "href": "w04/index.html#avoid-getting-lost-in-the-sauce",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Avoid Getting Lost in the Sauce",
    "text": "Avoid Getting Lost in the Sauce",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#how-to-avoid-getting-lost-in-the-sauce",
    "href": "w04/index.html#how-to-avoid-getting-lost-in-the-sauce",
    "title": "Week 4: Unary and Binary Operations",
    "section": "How To Avoid Getting Lost in the Sauce",
    "text": "How To Avoid Getting Lost in the Sauce\n\n\n\n\n\nTissot Circles: Imagine infinitely small ellipses placed at regular intervals on the curved surface of the earth. Imagine these ellipses being projected along with the earth‚Äôs surface. When scaled up, changes in the ellipses show the location and quality of distortions on the projected map.",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#the-uss-ur-choropleth-1-population",
    "href": "w04/index.html#the-uss-ur-choropleth-1-population",
    "title": "Week 4: Unary and Binary Operations",
    "section": "The US‚Äôs Ur-Choropleth #1: Population",
    "text": "The US‚Äôs Ur-Choropleth #1: Population\n\n\n\nKieran Healy, ‚ÄúAmerica‚Äôs Ur-Choropleths‚Äù",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#the-uss-ur-choropleth-2-race",
    "href": "w04/index.html#the-uss-ur-choropleth-2-race",
    "title": "Week 4: Unary and Binary Operations",
    "section": "The US‚Äôs Ur-Choropleth #2: Race",
    "text": "The US‚Äôs Ur-Choropleth #2: Race\n\n\n\nKieran Healy, ‚ÄúAmerica‚Äôs Ur-Choropleths‚Äù",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#crime-in-mongolia",
    "href": "w04/index.html#crime-in-mongolia",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Crime in Mongolia",
    "text": "Crime in Mongolia\n\n\n\nFrom Reddit",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#population-of-mongolia",
    "href": "w04/index.html#population-of-mongolia",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Population of Mongolia",
    "text": "Population of Mongolia\n\n\n\nFrom Wikimedia Commons",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#exhibit-a",
    "href": "w04/index.html#exhibit-a",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Exhibit A",
    "text": "Exhibit A\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#exhibit-b",
    "href": "w04/index.html#exhibit-b",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Exhibit B",
    "text": "Exhibit B\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#continuous-choropleth",
    "href": "w04/index.html#continuous-choropleth",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Continuous Choropleth",
    "text": "Continuous Choropleth\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\n\n\n\nFrom Krygier and Wood (2016)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#quantile-colormap",
    "href": "w04/index.html#quantile-colormap",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Quantile Colormap",
    "text": "Quantile Colormap\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\nAssigns the same number of observations to each color\n\n\n\nFrom Krygier and Wood (2016)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#equal-area-colormap",
    "href": "w04/index.html#equal-area-colormap",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Equal-Area Colormap",
    "text": "Equal-Area Colormap\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\nBoundaries between colors come at regular (equal) intervals\n\n\n\nFrom Krygier and Wood (2016)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#natural-break-colormap",
    "href": "w04/index.html#natural-break-colormap",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Natural-Break Colormap",
    "text": "Natural-Break Colormap\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\nClustering algorithm chooses classes to (a) minimize differences within classes, (b) maximize differences between classes\n\n\n\nFrom Krygier and Wood (2016)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#context-sensitive-colormap",
    "href": "w04/index.html#context-sensitive-colormap",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Context-Sensitive Colormap",
    "text": "Context-Sensitive Colormap\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\nA government program offers special funding for counties with above 25% poverty\n\n\n\nFrom Krygier and Wood (2016)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#the-importance-of-history",
    "href": "w04/index.html#the-importance-of-history",
    "title": "Week 4: Unary and Binary Operations",
    "section": "The Importance of History",
    "text": "The Importance of History\nIs poverty a ‚Äúsignificant issue‚Äù in the US?\n\n\n\nFrom Krygier and Wood (2016)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#getting-the-geometries",
    "href": "w04/index.html#getting-the-geometries",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Getting the Geometries",
    "text": "Getting the Geometries\nUsing rnaturalearth with mapview\n\n\nCode\nset.seed(6805)\nlibrary(tidyverse)\n\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî lubridate 1.9.4     ‚úî tibble    3.3.0\n‚úî purrr     1.0.4     ‚úî tidyr     1.3.1\n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(sf)\n\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\nCode\nlibrary(rnaturalearth)\nlibrary(mapview)\nfrance_sf &lt;- ne_countries(country = \"France\", scale = 50)\n(france_map &lt;- mapview(france_sf, label = \"geounit\", legend = FALSE))",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#centroid-of-france",
    "href": "w04/index.html#centroid-of-france",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Centroid of France",
    "text": "Centroid of France\n\n\nCode\nfrance_cent_sf &lt;- sf::st_centroid(france_sf)\n\n\nWarning: st_centroid assumes attributes are constant over geometries\n\n\nCode\nfrance_map + mapview(france_cent_sf, label = \"Centroid\", legend = FALSE)",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#one-we-already-saw-union",
    "href": "w04/index.html#one-we-already-saw-union",
    "title": "Week 4: Unary and Binary Operations",
    "section": "One We Already Saw: Union",
    "text": "One We Already Saw: Union\nComputing the union of all geometries in the sf via sf::st_union()\n\n\nCode\nlibrary(leaflet.extras2)\n\n\nLoading required package: leaflet\n\n\nCode\nafrica_sf &lt;- ne_countries(continent = \"Africa\", scale = 50)\nafrica_union_sf &lt;- sf::st_union(africa_sf)\nafrica_map &lt;- mapview(africa_sf, label=\"geounit\", legend=FALSE)\nafrica_union_map &lt;- mapview(africa_union_sf, label=\"st_union(africa)\", legend=FALSE)\nafrica_map | africa_union_map",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#helpful-for-rasterizing-bbox",
    "href": "w04/index.html#helpful-for-rasterizing-bbox",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Helpful for Rasterizing: BBox",
    "text": "Helpful for Rasterizing: BBox\n\n\nCode\nafrica_bbox_sf &lt;- sf::st_bbox(africa_sf)\nafrica_bbox_map &lt;- mapview(africa_bbox_sf, label=\"st_bbox(africa)\", legend=FALSE)\nafrica_map | africa_bbox_map",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#convex-hulls-by-country",
    "href": "w04/index.html#convex-hulls-by-country",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Convex Hulls by Country",
    "text": "Convex Hulls by Country\n\n\nCode\nafrica_countries_cvx &lt;- sf::st_convex_hull(africa_sf)\nafrica_countries_cvx_map &lt;- mapview(africa_countries_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_countries_cvx_map",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#convex-hull-of-continent",
    "href": "w04/index.html#convex-hull-of-continent",
    "title": "Week 4: Unary and Binary Operations",
    "section": "Convex Hull of Continent",
    "text": "Convex Hull of Continent\nUse st_union() first:\n\n\nCode\nafrica_cvx &lt;- africa_sf |&gt; st_union() |&gt; st_convex_hull()\nafrica_cvx_map &lt;- mapview(africa_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cvx_map",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#one-we-already-saw-centroids",
    "href": "w04/index.html#one-we-already-saw-centroids",
    "title": "Week 4: Unary and Binary Operations",
    "section": "One We Already Saw: Centroids",
    "text": "One We Already Saw: Centroids\nComputing the centroid of all geometries in the sf via sf::st_centroid()\n\n\nCode\nafrica_cents_sf &lt;- sf::st_centroid(africa_sf)\n\n\nWarning: st_centroid assumes attributes are constant over geometries\n\n\nCode\nafrica_cents_map &lt;- mapview(africa_cents_sf, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cents_map",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w04/index.html#references",
    "href": "w04/index.html#references",
    "title": "Week 4: Unary and Binary Operations",
    "section": "References",
    "text": "References\n\n\nKrygier, John, and Denis Wood. 2016. Making Maps, Third Edition: A Visual Guide to Map Design for GIS. Guilford Publications.\n\n\nMonmonier, Mark. 2018. How to Lie with Maps. University of Chicago Press. https://www.dropbox.com/scl/fi/7rsqbxgge6llggnaf5tit/How-to-Lie-with-Maps-Third-Edition.pdf?rlkey=6rqxta7cjyq3oqdnskj4dtwj8&dl=1.",
    "crumbs": [
      "Week 4: Sep 17"
    ]
  },
  {
    "objectID": "w03/index.html",
    "href": "w03/index.html",
    "title": "Week 3: Vector and Raster Representations",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#ta-intros",
    "href": "w03/index.html#ta-intros",
    "title": "Week 3: Vector and Raster Representations",
    "section": "TA Intros",
    "text": "TA Intros\n(In alphabetical order by surname wohoo)\n\n\n\nChristy Hsuth1010@georgetown.edu\n\n\nCoding workshop leader\nSurvived the fire and flames of this class in first semester after studying history ü§Ø\n\n\n\nYumi Lixl794@georgetown.edu\n\n\nOmbuds-person\nSurvived several Jeff classes + background in computer science (including Java!)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRelevant Word of the Day: Â±± (ShƒÅn) = Mountain",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#coding-workshops-starting-this-friday",
    "href": "w03/index.html#coding-workshops-starting-this-friday",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Coding Workshops Starting This Friday!",
    "text": "Coding Workshops Starting This Friday!\n\nCar Barn Room 230 (conference room across hallway from DSAN Suite 207), if you can make it in person!\nZoom Link if you can join remotely!\nVideo recording to be posted on Panopto (link TBD) once processed",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#hw1-fun-with-vectors-and-rasters",
    "href": "w03/index.html#hw1-fun-with-vectors-and-rasters",
    "title": "Week 3: Vector and Raster Representations",
    "section": "HW1: Fun with Vectors and Rasters",
    "text": "HW1: Fun with Vectors and Rasters\n\nQuestion 1 [Multiple Choice!]: Understanding the WKT geometries conceptually\nQuestion 2: Using the WKT geometries to create Vectortown\nQuestion 3: Using the raster format (today‚Äôs lecture) to create Gridtopia",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#hw1-rightarrow-hw2",
    "href": "w03/index.html#hw1-rightarrow-hw2",
    "title": "Week 3: Vector and Raster Representations",
    "section": "HW1 \\(\\rightarrow\\) HW2",
    "text": "HW1 \\(\\rightarrow\\) HW2\n\nOnce you finish HW1, you‚Äôll know how to create geometries with sf and terra\nSo now, what can you do with them?\nFor example, we‚Äôd like to be able to say things like:\n\n‚ÄúThe new lamppost cannot be placed at \\((x, y)\\), since there is already a building there!‚Äù\n‚ÄúThere are \\(N_1\\) lampposts in County 1, and \\(N_2\\) lampposts in County 2‚Äù\n‚ÄúThe average resident in Neighborhood A lives 2 km away from their nearest bus stop",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#first-things-first-loading-and-saving",
    "href": "w03/index.html#first-things-first-loading-and-saving",
    "title": "Week 3: Vector and Raster Representations",
    "section": "First Things First: Loading and Saving",
    "text": "First Things First: Loading and Saving\n\nNote how there were no data files in HW1 üò±\nFrom HW2 onwards (and in your GIS life), we‚Äôll:\n\nDownload from e.g.¬†city Open Data Portals: geo data files, but also loading on-the-fly (this week)\nSummarize/aggregate (this week and next week)\nVisualize findings (‚ÄúMapping Libraries‚Äù unit)",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#shapefiles-.shp-et-al.",
    "href": "w03/index.html#shapefiles-.shp-et-al.",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Shapefiles (.shp et al.)",
    "text": "Shapefiles (.shp et al.)\nA shape‚Äúfile‚Äù is actually (at least) three separate files bundled together:\n\n Mandatory .shp: Containing feature geometries\n Mandatory .shx: Positional indices\n Mandatory .dbf: Data attributes\n Optional .prj: Coordinate reference system\n Optional .xml: Metadata",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#shapefiles",
    "href": "w03/index.html#shapefiles",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Shapefiles",
    "text": "Shapefiles\nLet‚Äôs see what‚Äôs inside the shapefile we first saw in Week 1, containing data on DC‚Äôs Census Tracts: Census Tracts in 2020\n\n\n\nDC Census Tracts (with the Georgetown campus tract highlighted!) from OpenData.DC.gov",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#shapefile-anatomy",
    "href": "w03/index.html#shapefile-anatomy",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Shapefile Anatomy",
    "text": "Shapefile Anatomy\n\n\n\nFrom Rodrigue (2016)",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#geojson-topojson-.geojson",
    "href": "w03/index.html#geojson-topojson-.geojson",
    "title": "Week 3: Vector and Raster Representations",
    "section": "GeoJSON / TopoJSON (.geojson)",
    "text": "GeoJSON / TopoJSON (.geojson)\n\n\n\nJavaScript Object Notation: General cross-platform format\nUseful when data is too complex for e.g.¬†.csv\nTopoJSON = Memory-efficient GeoJSON\nBonus: Inline preview on GitHub!\n\n\n\n\nmy_data.geojson\n\n{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [30, 20], [45, 40],\n            [10, 40], [30, 20]\n          ]\n        ]\n      },\n      \"properties\": {\n        \"color\": \"green\",\n        \"area\": 3565747\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [15, 5], [40, 10],\n            [10, 20], [5, 10], \n            [15, 5]\n          ]\n        ]\n      },\n      \"properties\": {\n        \"color\": \"red\",\n        \"area\": 3272386\n      }\n    }\n  ]\n}",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#geopackage-.gpkg",
    "href": "w03/index.html#geopackage-.gpkg",
    "title": "Week 3: Vector and Raster Representations",
    "section": "GeoPackage (.gpkg)",
    "text": "GeoPackage (.gpkg)\n\nOpen-source (non-proprietary) data format standard",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#raster-formats",
    "href": "w03/index.html#raster-formats",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Raster Formats",
    "text": "Raster Formats\n\nGeoTIFF (.tif or .tiff)\n\nBased on TIFF format developed at NASA\n\nNetCDF (.nc4)\n\nUsed in earth sciences, as format for data sources measured and distributed multiple times per day over large full-country or full-continent areas.",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#coordinate-reference-systems-crs",
    "href": "w03/index.html#coordinate-reference-systems-crs",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Coordinate Reference Systems (CRS)",
    "text": "Coordinate Reference Systems (CRS)\n\nEPSG (European Petroleum Survey Group) Registry: Most common way to specify a CRS\n\nFor example, 4326 is the EPSG code for the WGS84 coordinate system\n\nPROJ: Rather than opaque numeric code like EPSG, uses plaintext ‚Äúproj-strings‚Äù containing parameter info: datum, ellipsoid, projection, and units (e.g.¬†meters). Example: PROJ4 code EPSG:4326 is represented as\n+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\nWKT: Lengthy but human-readable descriptions",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#getting-the-geometries",
    "href": "w03/index.html#getting-the-geometries",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Getting the Geometries",
    "text": "Getting the Geometries\nUsing rnaturalearth with mapview\n\n\nCode\nset.seed(6805)\nlibrary(tidyverse)\n\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî lubridate 1.9.4     ‚úî tibble    3.3.0\n‚úî purrr     1.0.4     ‚úî tidyr     1.3.1\n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(sf)\n\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\nCode\nlibrary(rnaturalearth)\nlibrary(mapview)\nfrance_sf &lt;- ne_countries(country = \"France\", scale = 50)\n(france_map &lt;- mapview(france_sf, label = \"geounit\", legend = FALSE))",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#centroid-of-france",
    "href": "w03/index.html#centroid-of-france",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Centroid of France",
    "text": "Centroid of France\n\n\nCode\nfrance_cent_sf &lt;- sf::st_centroid(france_sf)\n\n\nWarning: st_centroid assumes attributes are constant over geometries\n\n\nCode\nfrance_map + mapview(france_cent_sf, label = \"Centroid\", legend = FALSE)",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#one-we-already-saw-union",
    "href": "w03/index.html#one-we-already-saw-union",
    "title": "Week 3: Vector and Raster Representations",
    "section": "One We Already Saw: Union",
    "text": "One We Already Saw: Union\nComputing the union of all geometries in the sf via sf::st_union()\n\n\nCode\nlibrary(leaflet.extras2)\n\n\nLoading required package: leaflet\n\n\nCode\nafrica_sf &lt;- ne_countries(continent = \"Africa\", scale = 50)\nafrica_union_sf &lt;- sf::st_union(africa_sf)\nafrica_map &lt;- mapview(africa_sf, label=\"geounit\", legend=FALSE)\nafrica_union_map &lt;- mapview(africa_union_sf, label=\"st_union(africa)\", legend=FALSE)\nafrica_map | africa_union_map",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#helpful-for-rasterizing-bbox",
    "href": "w03/index.html#helpful-for-rasterizing-bbox",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Helpful for Rasterizing: BBox",
    "text": "Helpful for Rasterizing: BBox\n\n\nCode\nafrica_bbox_sf &lt;- sf::st_bbox(africa_sf)\nafrica_bbox_map &lt;- mapview(africa_bbox_sf, label=\"st_bbox(africa)\", legend=FALSE)\nafrica_map | africa_bbox_map",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#convex-hulls-by-country",
    "href": "w03/index.html#convex-hulls-by-country",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Convex Hulls by Country",
    "text": "Convex Hulls by Country\n\n\nCode\nafrica_countries_cvx &lt;- sf::st_convex_hull(africa_sf)\nafrica_countries_cvx_map &lt;- mapview(africa_countries_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_countries_cvx_map",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#convex-hull-of-continent",
    "href": "w03/index.html#convex-hull-of-continent",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Convex Hull of Continent",
    "text": "Convex Hull of Continent\nUse st_union() first:\n\n\nCode\nafrica_cvx &lt;- africa_sf |&gt; st_union() |&gt; st_convex_hull()\nafrica_cvx_map &lt;- mapview(africa_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cvx_map",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#one-we-already-saw-centroids",
    "href": "w03/index.html#one-we-already-saw-centroids",
    "title": "Week 3: Vector and Raster Representations",
    "section": "One We Already Saw: Centroids",
    "text": "One We Already Saw: Centroids\nComputing the centroid of all geometries in the sf via sf::st_centroid()\n\n\nCode\nafrica_cents_sf &lt;- sf::st_centroid(africa_sf)\n\n\nWarning: st_centroid assumes attributes are constant over geometries\n\n\nCode\nafrica_cents_map &lt;- mapview(africa_cents_sf, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cents_map",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#spatial-joins",
    "href": "w03/index.html#spatial-joins",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Spatial Joins",
    "text": "Spatial Joins\n\n\nCode\nnc &lt;- system.file(\"shape/nc.shp\", package=\"sf\") |&gt;\n  read_sf() |&gt;\n  st_transform('EPSG:2264')\ngr &lt;- st_sf(\n         label = apply(expand.grid(1:10, LETTERS[10:1])[,2:1], 1, paste0, collapse = \"\"),\n         geom = st_make_grid(nc))\ngr$col &lt;- sf.colors(10, categorical = TRUE, alpha = .3)\n# cut, to verify that NA's work out:\ngr &lt;- gr[-(1:30),]\nsuppressWarnings(nc_j &lt;- st_join(nc, gr, largest = TRUE))\npar(mfrow = c(2,1), mar = rep(0,4))\nplot(st_geometry(nc_j), border = 'grey')\nplot(st_geometry(gr), add = TRUE, col = gr$col)\ntext(st_coordinates(st_centroid(st_geometry(gr))), labels = gr$label, cex = .85)\n# the joined dataset:\nplot(st_geometry(nc_j), border = 'grey', col = nc_j$col)\ntext(st_coordinates(st_centroid(st_geometry(nc_j))), labels = nc_j$label, cex = .7)\nplot(st_geometry(gr), border = '#88ff88aa', add = TRUE)",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#spatial-sampling",
    "href": "w03/index.html#spatial-sampling",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Spatial Sampling",
    "text": "Spatial Sampling\n\n\nCode\n# Sample random points\nafrica_points_list &lt;- sf::st_sample(africa_union_sf, 10)\nafrica_points_sf &lt;- sf::st_sf(africa_points_list)\nafrica_points_map &lt;- mapview(africa_points_sf, label=\"Random Point\", col.regions=cb_palette[1], legend=FALSE)\n\n\nWarning in cbind(`Feature ID` = fid, mat): number of rows of result is not a\nmultiple of vector length (arg 1)\n\n\nCode\nafrica_map + africa_points_map",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#the-default-predicate-st_intersects",
    "href": "w03/index.html#the-default-predicate-st_intersects",
    "title": "Week 3: Vector and Raster Representations",
    "section": "The ‚ÄúDefault‚Äù Predicate: st_intersects",
    "text": "The ‚ÄúDefault‚Äù Predicate: st_intersects\n\n\nCode\ncountries_w_points &lt;- africa_sf[africa_points_sf,]\nmapview(countries_w_points, label=\"geounit\", legend=FALSE) + africa_points_map",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#counting-with-lengths",
    "href": "w03/index.html#counting-with-lengths",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Counting with lengths()",
    "text": "Counting with lengths()\n\n\nCode\ncountry_inter &lt;- sf::st_intersects(africa_sf, africa_points_sf)\n# Computes point counts for each polygon\n(num_intersections &lt;- lengths(country_inter))\n\n\n [1] 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0\n[39] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2\n\n\nCode\nafrica_sf &lt;- africa_sf |&gt; mutate(\n  num_points = num_intersections\n) |&gt; arrange(geounit)\nafrica_sf |&gt; select(geounit, num_points) |&gt; head()\n\n\n\n\n\n\ngeounit\nnum_points\ngeometry\n\n\n\n\nAlgeria\n2\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\nAngola\n2\nMULTIPOLYGON (((13.07275 -4‚Ä¶\n\n\nBenin\n0\nMULTIPOLYGON (((1.622656 6‚Ä¶.\n\n\nBotswana\n0\nMULTIPOLYGON (((25.25879 -1‚Ä¶\n\n\nBurkina Faso\n0\nMULTIPOLYGON (((0.9004883 1‚Ä¶\n\n\nBurundi\n0\nMULTIPOLYGON (((30.55361 -2‚Ä¶",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#plotting-with-mapview",
    "href": "w03/index.html#plotting-with-mapview",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Plotting with mapview",
    "text": "Plotting with mapview\n\n\nCode\nmapview(africa_sf, zcol=\"num_points\")",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#plotting-with-ggplot2",
    "href": "w03/index.html#plotting-with-ggplot2",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Plotting with ggplot2",
    "text": "Plotting with ggplot2\nSince we‚Äôre starting to get into data attributes rather than geometric features, switching to ggplot2 is recommended!\n\n\nCode\nafrica_sf |&gt; ggplot(aes(fill=num_points)) +\n  geom_sf() +\n  theme_classic()",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#getting-fancier",
    "href": "w03/index.html#getting-fancier",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Getting Fancier‚Ä¶",
    "text": "Getting Fancier‚Ä¶\n\nTo do fancier geospatial operations, we‚Äôll need to start overthinking the different possible relationships between two or more geometries!\nTo this end: predicates",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#de-9im-strings",
    "href": "w03/index.html#de-9im-strings",
    "title": "Week 3: Vector and Raster Representations",
    "section": "DE-9IM Strings",
    "text": "DE-9IM Strings\n\n\nCode\nlibrary(sf)\npolygon &lt;- po &lt;- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))\np0 &lt;- st_polygon(list(rbind(c(-1,-1), c(2,-1), c(2,2), c(-1,2), c(-1,-1))))\nline &lt;- li &lt;- st_linestring(rbind(c(.5, -.5), c(.5, 0.5)))\ns &lt;- st_sfc(po, li)\n\npar(mfrow = c(3,3))\npar(mar = c(1,1,1,1))\n\n# \"1020F1102\"\n# 1: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5,0), c(.5,.495)), col = 'red', lwd = 2)\npoints(0.5, 0.5, pch = 1)\n\n# 2: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"B(line) = 0\")))\npoints(0.5, 0.5, col = 'red', pch = 16)\n\n# 3: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"E(line) = 2\")))\nplot(po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n# 4: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"I(line) = 0\")))\npoints(.5, 0, col = 'red', pch = 16)\n\n# 5: F\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"B(line) = F\")))\n\n# 6: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"E(line) = 1\")))\nplot(po, border = 'red', col = NA, add = TRUE, lwd = 2)\n\n# 7: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5, -.5), c(.5, 0)), col = 'red', lwd = 2)\n\n# 8: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"B(line) = 0\")))\npoints(.5, -.5, col = 'red', pch = 16)\n\n# 9: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"E(line) = 2\")))\nplot(p0 / po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n\n\n\n\n\n\n\n\n\nThe predicate equals corresponds to the DE-9IM string \"T*F**FFF*\". If any two geometries obey this relationship, they are (topologically) equal!",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/index.html#references",
    "href": "w03/index.html#references",
    "title": "Week 3: Vector and Raster Representations",
    "section": "References",
    "text": "References\n\n\nRodrigue, Jean-Paul. 2016. The Geography of Transport Systems. Taylor & Francis.",
    "crumbs": [
      "Week 3: Sep 10"
    ]
  },
  {
    "objectID": "w03/slides.html#ta-intros",
    "href": "w03/slides.html#ta-intros",
    "title": "Week 3: Vector and Raster Representations",
    "section": "TA Intros",
    "text": "TA Intros\n(In alphabetical order by surname wohoo)\n\n\n\nChristy Hsuth1010@georgetown.edu\n\n\nCoding workshop leader\nSurvived the fire and flames of this class in first semester after studying history ü§Ø\n\n\n\nYumi Lixl794@georgetown.edu\n\n\nOmbuds-person\nSurvived several Jeff classes + background in computer science (including Java!)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRelevant Word of the Day: Â±± (ShƒÅn) = Mountain"
  },
  {
    "objectID": "w03/slides.html#coding-workshops-starting-this-friday",
    "href": "w03/slides.html#coding-workshops-starting-this-friday",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Coding Workshops Starting This Friday!",
    "text": "Coding Workshops Starting This Friday!\n\nCar Barn Room 230 (conference room across hallway from DSAN Suite 207), if you can make it in person!\nZoom Link if you can join remotely!\nVideo recording to be posted on Panopto (link TBD) once processed"
  },
  {
    "objectID": "w03/slides.html#hw1-fun-with-vectors-and-rasters",
    "href": "w03/slides.html#hw1-fun-with-vectors-and-rasters",
    "title": "Week 3: Vector and Raster Representations",
    "section": "HW1: Fun with Vectors and Rasters",
    "text": "HW1: Fun with Vectors and Rasters\n\nQuestion 1 [Multiple Choice!]: Understanding the WKT geometries conceptually\nQuestion 2: Using the WKT geometries to create Vectortown\nQuestion 3: Using the raster format (today‚Äôs lecture) to create Gridtopia"
  },
  {
    "objectID": "w03/slides.html#hw1-rightarrow-hw2",
    "href": "w03/slides.html#hw1-rightarrow-hw2",
    "title": "Week 3: Vector and Raster Representations",
    "section": "HW1 \\(\\rightarrow\\) HW2",
    "text": "HW1 \\(\\rightarrow\\) HW2\n\nOnce you finish HW1, you‚Äôll know how to create geometries with sf and terra\nSo now, what can you do with them?\nFor example, we‚Äôd like to be able to say things like:\n\n‚ÄúThe new lamppost cannot be placed at \\((x, y)\\), since there is already a building there!‚Äù\n‚ÄúThere are \\(N_1\\) lampposts in County 1, and \\(N_2\\) lampposts in County 2‚Äù\n‚ÄúThe average resident in Neighborhood A lives 2 km away from their nearest bus stop"
  },
  {
    "objectID": "w03/slides.html#first-things-first-loading-and-saving",
    "href": "w03/slides.html#first-things-first-loading-and-saving",
    "title": "Week 3: Vector and Raster Representations",
    "section": "First Things First: Loading and Saving",
    "text": "First Things First: Loading and Saving\n\nNote how there were no data files in HW1 üò±\nFrom HW2 onwards (and in your GIS life), we‚Äôll:\n\nDownload from e.g.¬†city Open Data Portals: geo data files, but also loading on-the-fly (this week)\nSummarize/aggregate (this week and next week)\nVisualize findings (‚ÄúMapping Libraries‚Äù unit)"
  },
  {
    "objectID": "w03/slides.html#shapefiles-.shp-et-al.",
    "href": "w03/slides.html#shapefiles-.shp-et-al.",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Shapefiles (.shp et al.)",
    "text": "Shapefiles (.shp et al.)\nA shape‚Äúfile‚Äù is actually (at least) three separate files bundled together:\n\n Mandatory .shp: Containing feature geometries\n Mandatory .shx: Positional indices\n Mandatory .dbf: Data attributes\n Optional .prj: Coordinate reference system\n Optional .xml: Metadata"
  },
  {
    "objectID": "w03/slides.html#shapefiles",
    "href": "w03/slides.html#shapefiles",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Shapefiles",
    "text": "Shapefiles\nLet‚Äôs see what‚Äôs inside the shapefile we first saw in Week 1, containing data on DC‚Äôs Census Tracts: Census Tracts in 2020\n\nDC Census Tracts (with the Georgetown campus tract highlighted!) from OpenData.DC.gov"
  },
  {
    "objectID": "w03/slides.html#shapefile-anatomy",
    "href": "w03/slides.html#shapefile-anatomy",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Shapefile Anatomy",
    "text": "Shapefile Anatomy\n\nFrom Rodrigue (2016)"
  },
  {
    "objectID": "w03/slides.html#geojson-topojson-.geojson",
    "href": "w03/slides.html#geojson-topojson-.geojson",
    "title": "Week 3: Vector and Raster Representations",
    "section": "GeoJSON / TopoJSON (.geojson)",
    "text": "GeoJSON / TopoJSON (.geojson)\n\n\n\nJavaScript Object Notation: General cross-platform format\nUseful when data is too complex for e.g.¬†.csv\nTopoJSON = Memory-efficient GeoJSON\nBonus: Inline preview on GitHub!\n\n\n\n\nmy_data.geojson\n\n{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [30, 20], [45, 40],\n            [10, 40], [30, 20]\n          ]\n        ]\n      },\n      \"properties\": {\n        \"color\": \"green\",\n        \"area\": 3565747\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [15, 5], [40, 10],\n            [10, 20], [5, 10], \n            [15, 5]\n          ]\n        ]\n      },\n      \"properties\": {\n        \"color\": \"red\",\n        \"area\": 3272386\n      }\n    }\n  ]\n}"
  },
  {
    "objectID": "w03/slides.html#geopackage-.gpkg",
    "href": "w03/slides.html#geopackage-.gpkg",
    "title": "Week 3: Vector and Raster Representations",
    "section": "GeoPackage (.gpkg)",
    "text": "GeoPackage (.gpkg)\n\nOpen-source (non-proprietary) data format standard"
  },
  {
    "objectID": "w03/slides.html#raster-formats",
    "href": "w03/slides.html#raster-formats",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Raster Formats",
    "text": "Raster Formats\n\nGeoTIFF (.tif or .tiff)\n\nBased on TIFF format developed at NASA\n\nNetCDF (.nc4)\n\nUsed in earth sciences, as format for data sources measured and distributed multiple times per day over large full-country or full-continent areas."
  },
  {
    "objectID": "w03/slides.html#coordinate-reference-systems-crs",
    "href": "w03/slides.html#coordinate-reference-systems-crs",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Coordinate Reference Systems (CRS)",
    "text": "Coordinate Reference Systems (CRS)\n\nEPSG (European Petroleum Survey Group) Registry: Most common way to specify a CRS\n\nFor example, 4326 is the EPSG code for the WGS84 coordinate system\n\nPROJ: Rather than opaque numeric code like EPSG, uses plaintext ‚Äúproj-strings‚Äù containing parameter info: datum, ellipsoid, projection, and units (e.g.¬†meters). Example: PROJ4 code EPSG:4326 is represented as\n+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\nWKT: Lengthy but human-readable descriptions"
  },
  {
    "objectID": "w03/slides.html#getting-the-geometries",
    "href": "w03/slides.html#getting-the-geometries",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Getting the Geometries",
    "text": "Getting the Geometries\nUsing rnaturalearth with mapview\n\n\nCode\nset.seed(6805)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(mapview)\nfrance_sf &lt;- ne_countries(country = \"France\", scale = 50)\n(france_map &lt;- mapview(france_sf, label = \"geounit\", legend = FALSE))"
  },
  {
    "objectID": "w03/slides.html#centroid-of-france",
    "href": "w03/slides.html#centroid-of-france",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Centroid of France",
    "text": "Centroid of France\n\n\nCode\nfrance_cent_sf &lt;- sf::st_centroid(france_sf)\nfrance_map + mapview(france_cent_sf, label = \"Centroid\", legend = FALSE)"
  },
  {
    "objectID": "w03/slides.html#one-we-already-saw-union",
    "href": "w03/slides.html#one-we-already-saw-union",
    "title": "Week 3: Vector and Raster Representations",
    "section": "One We Already Saw: Union",
    "text": "One We Already Saw: Union\nComputing the union of all geometries in the sf via sf::st_union()\n\n\nCode\nlibrary(leaflet.extras2)\nafrica_sf &lt;- ne_countries(continent = \"Africa\", scale = 50)\nafrica_union_sf &lt;- sf::st_union(africa_sf)\nafrica_map &lt;- mapview(africa_sf, label=\"geounit\", legend=FALSE)\nafrica_union_map &lt;- mapview(africa_union_sf, label=\"st_union(africa)\", legend=FALSE)\nafrica_map | africa_union_map"
  },
  {
    "objectID": "w03/slides.html#helpful-for-rasterizing-bbox",
    "href": "w03/slides.html#helpful-for-rasterizing-bbox",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Helpful for Rasterizing: BBox",
    "text": "Helpful for Rasterizing: BBox\n\n\nCode\nafrica_bbox_sf &lt;- sf::st_bbox(africa_sf)\nafrica_bbox_map &lt;- mapview(africa_bbox_sf, label=\"st_bbox(africa)\", legend=FALSE)\nafrica_map | africa_bbox_map"
  },
  {
    "objectID": "w03/slides.html#convex-hulls-by-country",
    "href": "w03/slides.html#convex-hulls-by-country",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Convex Hulls by Country",
    "text": "Convex Hulls by Country\n\n\nCode\nafrica_countries_cvx &lt;- sf::st_convex_hull(africa_sf)\nafrica_countries_cvx_map &lt;- mapview(africa_countries_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_countries_cvx_map"
  },
  {
    "objectID": "w03/slides.html#convex-hull-of-continent",
    "href": "w03/slides.html#convex-hull-of-continent",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Convex Hull of Continent",
    "text": "Convex Hull of Continent\nUse st_union() first:\n\n\nCode\nafrica_cvx &lt;- africa_sf |&gt; st_union() |&gt; st_convex_hull()\nafrica_cvx_map &lt;- mapview(africa_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cvx_map"
  },
  {
    "objectID": "w03/slides.html#one-we-already-saw-centroids",
    "href": "w03/slides.html#one-we-already-saw-centroids",
    "title": "Week 3: Vector and Raster Representations",
    "section": "One We Already Saw: Centroids",
    "text": "One We Already Saw: Centroids\nComputing the centroid of all geometries in the sf via sf::st_centroid()\n\n\nCode\nafrica_cents_sf &lt;- sf::st_centroid(africa_sf)\nafrica_cents_map &lt;- mapview(africa_cents_sf, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cents_map"
  },
  {
    "objectID": "w03/slides.html#spatial-joins",
    "href": "w03/slides.html#spatial-joins",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Spatial Joins",
    "text": "Spatial Joins\n\n\n\nCode\nnc &lt;- system.file(\"shape/nc.shp\", package=\"sf\") |&gt;\n  read_sf() |&gt;\n  st_transform('EPSG:2264')\ngr &lt;- st_sf(\n         label = apply(expand.grid(1:10, LETTERS[10:1])[,2:1], 1, paste0, collapse = \"\"),\n         geom = st_make_grid(nc))\ngr$col &lt;- sf.colors(10, categorical = TRUE, alpha = .3)\n# cut, to verify that NA's work out:\ngr &lt;- gr[-(1:30),]\nsuppressWarnings(nc_j &lt;- st_join(nc, gr, largest = TRUE))\npar(mfrow = c(2,1), mar = rep(0,4))\nplot(st_geometry(nc_j), border = 'grey')\nplot(st_geometry(gr), add = TRUE, col = gr$col)\ntext(st_coordinates(st_centroid(st_geometry(gr))), labels = gr$label, cex = .85)\n# the joined dataset:\nplot(st_geometry(nc_j), border = 'grey', col = nc_j$col)\ntext(st_coordinates(st_centroid(st_geometry(nc_j))), labels = nc_j$label, cex = .7)\nplot(st_geometry(gr), border = '#88ff88aa', add = TRUE)"
  },
  {
    "objectID": "w03/slides.html#spatial-sampling",
    "href": "w03/slides.html#spatial-sampling",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Spatial Sampling",
    "text": "Spatial Sampling\n\n\nCode\n# Sample random points\nafrica_points_list &lt;- sf::st_sample(africa_union_sf, 10)\nafrica_points_sf &lt;- sf::st_sf(africa_points_list)\nafrica_points_map &lt;- mapview(africa_points_sf, label=\"Random Point\", col.regions=cb_palette[1], legend=FALSE)\nafrica_map + africa_points_map"
  },
  {
    "objectID": "w03/slides.html#the-default-predicate-st_intersects",
    "href": "w03/slides.html#the-default-predicate-st_intersects",
    "title": "Week 3: Vector and Raster Representations",
    "section": "The ‚ÄúDefault‚Äù Predicate: st_intersects",
    "text": "The ‚ÄúDefault‚Äù Predicate: st_intersects\n\n\nCode\ncountries_w_points &lt;- africa_sf[africa_points_sf,]\nmapview(countries_w_points, label=\"geounit\", legend=FALSE) + africa_points_map"
  },
  {
    "objectID": "w03/slides.html#counting-with-lengths",
    "href": "w03/slides.html#counting-with-lengths",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Counting with lengths()",
    "text": "Counting with lengths()\n\n\nCode\ncountry_inter &lt;- sf::st_intersects(africa_sf, africa_points_sf)\n# Computes point counts for each polygon\n(num_intersections &lt;- lengths(country_inter))\n\n\n [1] 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0\n[39] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2\n\n\nCode\nafrica_sf &lt;- africa_sf |&gt; mutate(\n  num_points = num_intersections\n) |&gt; arrange(geounit)\nafrica_sf |&gt; select(geounit, num_points) |&gt; head()\n\n\n\n\n\n\ngeounit\nnum_points\ngeometry\n\n\n\n\nAlgeria\n2\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\nAngola\n2\nMULTIPOLYGON (((13.07275 -4‚Ä¶\n\n\nBenin\n0\nMULTIPOLYGON (((1.622656 6‚Ä¶.\n\n\nBotswana\n0\nMULTIPOLYGON (((25.25879 -1‚Ä¶\n\n\nBurkina Faso\n0\nMULTIPOLYGON (((0.9004883 1‚Ä¶\n\n\nBurundi\n0\nMULTIPOLYGON (((30.55361 -2‚Ä¶"
  },
  {
    "objectID": "w03/slides.html#plotting-with-mapview",
    "href": "w03/slides.html#plotting-with-mapview",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Plotting with mapview",
    "text": "Plotting with mapview\n\n\nCode\nmapview(africa_sf, zcol=\"num_points\")"
  },
  {
    "objectID": "w03/slides.html#plotting-with-ggplot2",
    "href": "w03/slides.html#plotting-with-ggplot2",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Plotting with ggplot2",
    "text": "Plotting with ggplot2\nSince we‚Äôre starting to get into data attributes rather than geometric features, switching to ggplot2 is recommended!\n\n\nCode\nafrica_sf |&gt; ggplot(aes(fill=num_points)) +\n  geom_sf() +\n  theme_classic()"
  },
  {
    "objectID": "w03/slides.html#getting-fancier",
    "href": "w03/slides.html#getting-fancier",
    "title": "Week 3: Vector and Raster Representations",
    "section": "Getting Fancier‚Ä¶",
    "text": "Getting Fancier‚Ä¶\n\nTo do fancier geospatial operations, we‚Äôll need to start overthinking the different possible relationships between two or more geometries!\nTo this end: predicates"
  },
  {
    "objectID": "w03/slides.html#de-9im-strings",
    "href": "w03/slides.html#de-9im-strings",
    "title": "Week 3: Vector and Raster Representations",
    "section": "DE-9IM Strings",
    "text": "DE-9IM Strings\n\n\nCode\nlibrary(sf)\npolygon &lt;- po &lt;- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))\np0 &lt;- st_polygon(list(rbind(c(-1,-1), c(2,-1), c(2,2), c(-1,2), c(-1,-1))))\nline &lt;- li &lt;- st_linestring(rbind(c(.5, -.5), c(.5, 0.5)))\ns &lt;- st_sfc(po, li)\n\npar(mfrow = c(3,3))\npar(mar = c(1,1,1,1))\n\n# \"1020F1102\"\n# 1: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5,0), c(.5,.495)), col = 'red', lwd = 2)\npoints(0.5, 0.5, pch = 1)\n\n# 2: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"B(line) = 0\")))\npoints(0.5, 0.5, col = 'red', pch = 16)\n\n# 3: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"E(line) = 2\")))\nplot(po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n# 4: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"I(line) = 0\")))\npoints(.5, 0, col = 'red', pch = 16)\n\n# 5: F\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"B(line) = F\")))\n\n# 6: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"E(line) = 1\")))\nplot(po, border = 'red', col = NA, add = TRUE, lwd = 2)\n\n# 7: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5, -.5), c(.5, 0)), col = 'red', lwd = 2)\n\n# 8: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"B(line) = 0\")))\npoints(.5, -.5, col = 'red', pch = 16)\n\n# 9: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"E(line) = 2\")))\nplot(p0 / po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n\n\n\nThe predicate equals corresponds to the DE-9IM string \"T*F**FFF*\". If any two geometries obey this relationship, they are (topologically) equal!"
  },
  {
    "objectID": "w03/slides.html#references",
    "href": "w03/slides.html#references",
    "title": "Week 3: Vector and Raster Representations",
    "section": "References",
    "text": "References\n\n\nRodrigue, Jean-Paul. 2016. The Geography of Transport Systems. Taylor & Francis."
  },
  {
    "objectID": "w05/index.html",
    "href": "w05/index.html",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#spatial-joins",
    "href": "w05/index.html#spatial-joins",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Spatial Joins",
    "text": "Spatial Joins\n\n\nCode\nafrica_sf &lt;- ne_countries(continent = \"Africa\", scale = 50)\nafrica_union_sf &lt;- sf::st_union(africa_sf)\nafrica_map &lt;- mapview(africa_sf, label=\"geounit\", legend=FALSE)\nnc &lt;- system.file(\"shape/nc.shp\", package=\"sf\") |&gt;\n  read_sf() |&gt;\n  st_transform('EPSG:2264')\ngr &lt;- st_sf(\n         label = apply(expand.grid(1:10, LETTERS[10:1])[,2:1], 1, paste0, collapse = \"\"),\n         geom = st_make_grid(nc))\ngr$col &lt;- sf.colors(10, categorical = TRUE, alpha = .3)\n# cut, to verify that NA's work out:\ngr &lt;- gr[-(1:30),]\nsuppressWarnings(nc_j &lt;- st_join(nc, gr, largest = TRUE))\npar(mfrow = c(2,1), mar = rep(0,4))\nplot(st_geometry(nc_j), border = 'grey')\nplot(st_geometry(gr), add = TRUE, col = gr$col)\ntext(st_coordinates(st_centroid(st_geometry(gr))), labels = gr$label, cex = .85)\n# the joined dataset:\nplot(st_geometry(nc_j), border = 'grey', col = nc_j$col)\ntext(st_coordinates(st_centroid(st_geometry(nc_j))), labels = nc_j$label, cex = .7)\nplot(st_geometry(gr), border = '#88ff88aa', add = TRUE)",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#spatial-sampling",
    "href": "w05/index.html#spatial-sampling",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Spatial Sampling",
    "text": "Spatial Sampling\n\n\nCode\n# Sample random points\nafrica_points_list &lt;- sf::st_sample(africa_union_sf, 10)\nafrica_points_sf &lt;- sf::st_sf(africa_points_list)\nafrica_points_map &lt;- mapview(africa_points_sf, label=\"Random Point\", col.regions=cb_palette[1], legend=FALSE)\n\n\nWarning in cbind(`Feature ID` = fid, mat): number of rows of result is not a\nmultiple of vector length (arg 1)\n\n\nCode\nafrica_map + africa_points_map",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#the-default-predicate-st_intersects",
    "href": "w05/index.html#the-default-predicate-st_intersects",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "The ‚ÄúDefault‚Äù Predicate: st_intersects",
    "text": "The ‚ÄúDefault‚Äù Predicate: st_intersects\n\n\nCode\ncountries_w_points &lt;- africa_sf[africa_points_sf,]\nmapview(countries_w_points, label=\"geounit\", legend=FALSE) + africa_points_map",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#counting-with-lengths",
    "href": "w05/index.html#counting-with-lengths",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Counting with lengths()",
    "text": "Counting with lengths()\n\n\nCode\ncountry_inter &lt;- sf::st_intersects(africa_sf, africa_points_sf)\n# Computes point counts for each polygon\n(num_intersections &lt;- lengths(country_inter))\n\n\n [1] 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0\n[39] 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 0\n\n\nCode\nafrica_sf &lt;- africa_sf |&gt; mutate(\n  num_points = num_intersections\n) |&gt; arrange(geounit)\nafrica_sf |&gt; select(geounit, num_points) |&gt; head()\n\n\n\n\n\n\ngeounit\nnum_points\ngeometry\n\n\n\n\nAlgeria\n0\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\nAngola\n2\nMULTIPOLYGON (((13.07275 -4‚Ä¶\n\n\nBenin\n0\nMULTIPOLYGON (((1.622656 6‚Ä¶.\n\n\nBotswana\n0\nMULTIPOLYGON (((25.25879 -1‚Ä¶\n\n\nBurkina Faso\n0\nMULTIPOLYGON (((0.9004883 1‚Ä¶\n\n\nBurundi\n0\nMULTIPOLYGON (((30.55361 -2‚Ä¶",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#plotting-with-mapview",
    "href": "w05/index.html#plotting-with-mapview",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Plotting with mapview",
    "text": "Plotting with mapview\n\n\nCode\nmapview(africa_sf, zcol=\"num_points\")",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#plotting-with-ggplot2",
    "href": "w05/index.html#plotting-with-ggplot2",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Plotting with ggplot2",
    "text": "Plotting with ggplot2\nSince we‚Äôre starting to get into data attributes rather than geometric features, switching to ggplot2 is recommended!\n\n\nCode\nafrica_sf |&gt; ggplot(aes(fill=num_points)) +\n  geom_sf() +\n  theme_classic()",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#one-more-unary-operation-st_buffer",
    "href": "w05/index.html#one-more-unary-operation-st_buffer",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "One More Unary Operation: st_buffer()",
    "text": "One More Unary Operation: st_buffer()\n\nThink about how you might answer questions like:\n\n‚ÄúHow far is your house (POINT) from Manhattan (POLYGON)?‚Äù\n‚ÄúAre there any chemical plants within a mile of this building (POLYGON) / stretch of road (LINESTRING)?‚Äù\n\nLazy mode (my favorite mode): Compute distances from the centroid\nGIS master mode: Construct the buffer!",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#on-polygons",
    "href": "w05/index.html#on-polygons",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "On POLYGONs",
    "text": "On POLYGONs\nKey line: manhattan_buffer_sf &lt;- manhattan_union_sf |&gt; st_buffer(dist = 1609.34) (1 mile \\(\\approx\\) 1609.34 meters)\n\n\nCode\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tidycensus)\nlibrary(tigris)\nlibrary(mapview)\noptions(tigris_use_cache = TRUE)\nmanhattan_sf &lt;- get_acs(\n  geography = \"tract\",\n  variables = \"B19013_001\",\n  state = \"NY\",\n  county = \"New York\",\n  year = 2020,\n  geometry = TRUE,\n  cb = FALSE\n)\n# Erase the island tracts real quick\nisland_tracts &lt;- c(\n  \"Census Tract 1, New York County, New York\",\n  \"Census Tract 2.02, New York County, New York\"\n)\nmanhattan_sf &lt;- manhattan_sf |&gt; filter(\n  !(NAME %in% island_tracts)\n)\n# Union of all census tracts within the county\nmanhattan_union_sf &lt;- st_union(manhattan_sf)\nmanhattan_union_map &lt;- mapview(manhattan_union_sf, label=\"New York County\")\n# Construct buffer (1 mile ~= 1609.34 meters)\nmanhattan_buffer_sf &lt;- manhattan_union_sf |&gt; st_buffer(dist = 1609.34)\nmanhattan_buffer_map &lt;- mapview(manhattan_buffer_sf, label=\"Buffer (1 Mile)\", col.regions = cbPalette[1], legend = TRUE)\nmanhattan_buffer_map + manhattan_union_map",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#on-linestrings",
    "href": "w05/index.html#on-linestrings",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "On LINESTRINGs",
    "text": "On LINESTRINGs\n\n\nCode\nlibrary(tidyverse)\nlibrary(sf)\n## st_buffer, style options (taken from rgeos gBuffer)\nl1 = st_as_sfc(\"LINESTRING(0 0,1 5,4 5,5 2,8 2,9 4,4 6.5)\")\nop = par(mfrow=c(2,3))\nplot(st_buffer(l1, dist = 1, endCapStyle=\"ROUND\"), reset = FALSE, main = \"endCapStyle: ROUND\")\nplot(l1,col='blue',add=TRUE)\nplot(st_buffer(l1, dist = 1, endCapStyle=\"FLAT\"), reset = FALSE, main = \"endCapStyle: FLAT\")\nplot(l1,col='blue',add=TRUE)\nplot(st_buffer(l1, dist = 1, endCapStyle=\"SQUARE\"), reset = FALSE, main = \"endCapStyle: SQUARE\")\nplot(l1,col='blue',add=TRUE)\nplot(st_buffer(l1, dist = 1, nQuadSegs=1), reset = FALSE, main = \"nQuadSegs: 1\")\nplot(l1,col='blue',add=TRUE)\nplot(st_buffer(l1, dist = 1, nQuadSegs=2), reset = FALSE, main = \"nQuadSegs: 2\")\nplot(l1,col='blue',add=TRUE)\nplot(st_buffer(l1, dist = 1, nQuadSegs= 5), reset = FALSE, main = \"nQuadSegs: 5\")\nplot(l1,col='blue',add=TRUE)\n\n\n\n\n\nFrom the sf Documentation",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#what-makes-binary-operations-fancier",
    "href": "w05/index.html#what-makes-binary-operations-fancier",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "What Makes Binary Operations ‚ÄúFancier‚Äù?",
    "text": "What Makes Binary Operations ‚ÄúFancier‚Äù?\n\n\n\nUnary\n\n\nst_centroid()\n\nPOLYGON \\(\\mapsto\\) POINT\nMULTIPOLYGON \\(\\mapsto\\) POINT\n\nst_convex_hull()\n\nPOLYGON \\(\\mapsto\\) POLYGON\nMULTIPOINT \\(\\mapsto\\) POLYGON\n\n\n\n\nBinary\n\n\nst_intersection()\n\n(POINT, POINT) \\(\\mapsto\\) POINT | POINT EMPTY\n(POLYGON, POLYGON) \\(\\mapsto\\) POLYGON | LINESTRING | POINT | POLYGON EMPTY\n\n\n\n\n\nst_is_empty() and st_dimension() become your new best friends üòâ\nst_is_empty(): Distinguishes between, e.g., POINT EMPTY and POINT(0 0)\nst_dimension(): NA for empty versions, otherwise\n\n2 for surfaces (POLYGON, MULTIPOLYGON)\n1 for lines (LINESTRING, MULTILINESTRING)\n0 for points (POINT, MULTIPOINT)",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#the-bad-kind-of-overthinking-will-my-life-just-get-harder-and-harder",
    "href": "w05/index.html#the-bad-kind-of-overthinking-will-my-life-just-get-harder-and-harder",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "The Bad Kind of Overthinking: Will My Life Just Get Harder and Harder?",
    "text": "The Bad Kind of Overthinking: Will My Life Just Get Harder and Harder?\n\n\n\n\n\n\n\n\n\n\nUnary Operations\n\n\n\n\n\n\n\n\n\n\n\n\n\nBinary Operations\n\n\n\n\n\n\n\n\n\n\n\n\n\nTernary Operations\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuaternary Operations",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#good-news-and-bad-news",
    "href": "w05/index.html#good-news-and-bad-news",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Good News and Bad News",
    "text": "Good News and Bad News\n\nThe good news: No!\nThe bad news: You‚Äôll have to read the 465-page Volume I and then the 451-page Volume II and then to page 15 of Volume III of Cohn (1965) to know why:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(i spent 4 yrs of undergrad studying abstract algebra and now it all sits gathering dust somewhere deep within my brain plz just let me have this moment i‚Äôll never mention it again i promise)",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#the-good-kind-of-overthinking",
    "href": "w05/index.html#the-good-kind-of-overthinking",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "The Good Kind of Overthinking‚Ä¶",
    "text": "The Good Kind of Overthinking‚Ä¶\n\nFor fancier geospatial operations, we‚Äôll need to start overthinking, about the possible relationships between two (or more) geometries! \\(\\leadsto\\) Relational Predicates:\n\n\n\n\nFigure 4.2 in Lovelace, Nowosad, and Muenchow (2024)",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#de-9im-strings",
    "href": "w05/index.html#de-9im-strings",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "DE-9IM Strings",
    "text": "DE-9IM Strings\nEach cell here visualizes one component of the DE-9IM string 1020F1102, which describes the relationship between the following two geometries:\n\nBoxey McBoxface: POLYGON(0 0, 1 0, 1 1, 0 1, 0 0)\nLiney McLineface: LINESTRING(0.5 -0.5, 0.5 0.5)\n\n\n\nCode\nlibrary(sf)\npolygon &lt;- po &lt;- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))\np0 &lt;- st_polygon(list(rbind(c(-1,-1), c(2,-1), c(2,2), c(-1,2), c(-1,-1))))\nline &lt;- li &lt;- st_linestring(rbind(c(.5, -.5), c(.5, 0.5)))\ns &lt;- st_sfc(po, li)\n\npar(mfrow = c(3,3))\npar(mar = c(1,1,1,1))\n\n# \"1020F1102\"\n# 1: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5,0), c(.5,.495)), col = 'red', lwd = 2)\npoints(0.5, 0.5, pch = 1)\n\n# 2: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"B(line) = 0\")))\npoints(0.5, 0.5, col = 'red', pch = 16)\n\n# 3: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"E(line) = 2\")))\nplot(po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n# 4: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"I(line) = 0\")))\npoints(.5, 0, col = 'red', pch = 16)\n\n# 5: F\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"B(line) = F\")))\n\n# 6: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"E(line) = 1\")))\nplot(po, border = 'red', col = NA, add = TRUE, lwd = 2)\n\n# 7: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5, -.5), c(.5, 0)), col = 'red', lwd = 2)\n\n# 8: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"B(line) = 0\")))\npoints(.5, -.5, col = 'red', pch = 16)\n\n# 9: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"E(line) = 2\")))\nplot(p0 / po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n\n\n\n\nCode from Pebesma and Bivand (2023)\n\n\n\n\n\nThe predicate equals corresponds to the DE-9IM string \"T*F**FFF*\". If any two geometries obey this relationship, they are (topologically) equal!",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#slowing-down-9im-no-de-yet",
    "href": "w05/index.html#slowing-down-9im-no-de-yet",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Slowing Down: 9IM (no DE yet!)",
    "text": "Slowing Down: 9IM (no DE yet!)\n\n\n\nTable¬†1: From OSGeo Project\n\n\n\n\n\n\n\n\n\n\n\n9IM\nInterior\nBoundary\nExterior\n\n\n\n\nInterior\n¬†\n¬†\n¬†\n\n\nBoundary\n¬†\n¬†\n¬†\n\n\nExterior",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#dimensionally-extended-de-9im",
    "href": "w05/index.html#dimensionally-extended-de-9im",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Dimensionally Extended (DE) 9IM",
    "text": "Dimensionally Extended (DE) 9IM\n\n\n\nTable¬†2: From OSGeo Project\n\n\n\n\n\n\n\n\n\n\n\n9IM\nInterior\nBoundary\nExterior\n\n\n\n\nInterior\n2\n1\n2\n\n\nBoundary\n1\n0\n1\n\n\nExterior\n2\n1\n2",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#crunching-it-down-into-a-tiny-box",
    "href": "w05/index.html#crunching-it-down-into-a-tiny-box",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Crunching it Down into a Tiny Box",
    "text": "Crunching it Down into a Tiny Box\n\n\n\nDE-9IM\nInterior\nBoundary\nExterior\n\n\n\n\nInterior\n2\n1\n2\n\n\nBoundary\n1\n0\n1\n\n\nExterior\n2\n1\n2\n\n\n\n\nAnd Then into a Tiny String\n\n\n212101212\n\n\nAnd Then into an Infinitesimally-Small Point",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#de-9im-masks",
    "href": "w05/index.html#de-9im-masks",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "DE-9IM Masks",
    "text": "DE-9IM Masks\n\nNow terms can be given unambiguous, precise meaning!\n\n\n\n\nst_overlaps()\nInterior\nBoundary\nExterior\n\n\n\n\nInterior\nT\n*\nT\n\n\nBoundary\n*\n*\n*\n\n\nExterior\nT\n*\n*\n\n\n\n\nSpecial Values (besides 0, 1, 2):\n\nT: ‚ÄúTrue‚Äù (non-empty, st_dimension() &gt;= 0)\nF: ‚ÄúFalse‚Äù (empty, st_dimension() == NA)\n*: ‚ÄúWildcard‚Äù (Don‚Äôt care what the value is)\n\nst_overlaps(): T*T***T**, st_equals(): T*F**FFF*",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#de-9im-vs.-everyday-language",
    "href": "w05/index.html#de-9im-vs.-everyday-language",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "DE-9IM vs.¬†Everyday Language",
    "text": "DE-9IM vs.¬†Everyday Language\n\nDE-9IM can (in theory) represent \\(6^9 = 10~077~696\\) possible geometric relationships!\nThe English language has like 10, and they‚Äôre ambiguous ‚ò†Ô∏è (Compromise employed by GIS systems: allow multiple masks for same English word:)\n\n\n\n\nEnglish\nMask\n212101212\nResult\n\n\n\n\n‚ÄúDisjoint‚Äù\nFF*FF****\nFALSE\nx not disjoint from y\n\n\n‚ÄúTouches‚Äù\nFT*******\nFALSE\nx doesn‚Äôt touch y\n\n\n‚ÄúTouches‚Äù\nF***T****\nFALSE\nx doesn‚Äôt touch y\n\n\n‚ÄúCrosses‚Äù\nT*T***T**\nTRUE\nx crosses y\n\n\n‚ÄúWithin‚Äù\nTF*F*****\nFALSE\nx is not within y\n\n\n‚ÄúOverlaps‚Äù\nT*T***T**\nTRUE\nx overlaps y",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#st_relate-the-ultimate-predicate",
    "href": "w05/index.html#st_relate-the-ultimate-predicate",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "st_relate(): The Ultimate Predicate",
    "text": "st_relate(): The Ultimate Predicate\n\n\nCode\nlibrary(tidyverse)\nlibrary(rnaturalearth)\nus &lt;- ne_states(country=\"United States of America\")\ndc &lt;- us |&gt; filter(iso_3166_2 == \"US-DC\")\nus &lt;- us |&gt;\n  mutate(\n    de9im = st_relate(us, dc),\n    touch = st_touches(us, dc, sparse = F)\n  ) |&gt;\n  select(iso_3166_2, name, de9im, touch) |&gt;\n  arrange(name)\n\n\nalthough coordinates are longitude/latitude, st_relate assumes that they are\nplanar\n\n\nCode\nus\n\n\n\n\n\n\n\n\n\n\n\n\n\niso_3166_2\nname\nde9im\ntouch\ngeometry\n\n\n\n\nUS-AL\nAlabama\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-87.41958 3‚Ä¶\n\n\nUS-AK\nAlaska\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-141.0056 6‚Ä¶\n\n\nUS-AZ\nArizona\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-111.0063 3‚Ä¶\n\n\nUS-AR\nArkansas\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-90.30422 3‚Ä¶\n\n\nUS-CA\nCalifornia\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-114.7243 3‚Ä¶\n\n\nUS-CO\nColorado\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-109.0463 4‚Ä¶\n\n\nUS-CT\nConnecticut\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-73.6417 41‚Ä¶\n\n\nUS-DE\nDelaware\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-75.05809 3‚Ä¶\n\n\nUS-DC\nDistrict of Columbia\n2FFF1FFF2\nFALSE\nMULTIPOLYGON (((-77.02293 3‚Ä¶\n\n\nUS-FL\nFlorida\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-87.44734 3‚Ä¶\n\n\nUS-GA\nGeorgia\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-80.89029 3‚Ä¶\n\n\nUS-HI\nHawaii\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-154.8996 1‚Ä¶\n\n\nUS-ID\nIdaho\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-117.0382 4‚Ä¶\n\n\nUS-IL\nIllinois\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-89.1237 36‚Ä¶\n\n\nUS-IN\nIndiana\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-84.80608 4‚Ä¶\n\n\nUS-IA\nIowa\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-96.48266 4‚Ä¶\n\n\nUS-KS\nKansas\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-102.0396 3‚Ä¶\n\n\nUS-KY\nKentucky\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-89.42446 3‚Ä¶\n\n\nUS-LA\nLouisiana\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-89.52599 3‚Ä¶\n\n\nUS-ME\nMaine\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-71.08495 4‚Ä¶\n\n\nUS-MD\nMaryland\nFF2F11212\nTRUE\nMULTIPOLYGON (((-75.64786 3‚Ä¶\n\n\nUS-MA\nMassachusetts\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-71.19396 4‚Ä¶\n\n\nUS-MI\nMichigan\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-84.4913 46‚Ä¶\n\n\nUS-MN\nMinnesota\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-97.22609 4‚Ä¶\n\n\nUS-MS\nMississippi\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-88.40221 3‚Ä¶\n\n\nUS-MO\nMissouri\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-95.31725 4‚Ä¶\n\n\nUS-MT\nMontana\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-116.0482 4‚Ä¶\n\n\nUS-NE\nNebraska\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-104.0537 4‚Ä¶\n\n\nUS-NV\nNevada\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-114.0425 4‚Ä¶\n\n\nUS-NH\nNew Hampshire\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-71.50585 4‚Ä¶\n\n\nUS-NJ\nNew Jersey\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-75.54133 3‚Ä¶\n\n\nUS-NM\nNew Mexico\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-108.1375 3‚Ä¶\n\n\nUS-NY\nNew York\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-79.06523 4‚Ä¶\n\n\nUS-NC\nNorth Carolina\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-76.03173 3‚Ä¶\n\n\nUS-ND\nNorth Dakota\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-104.0476 4‚Ä¶\n\n\nUS-OH\nOhio\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-80.52023 4‚Ä¶\n\n\nUS-OK\nOklahoma\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-103.0002 3‚Ä¶\n\n\nUS-OR\nOregon\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-124.4924 4‚Ä¶\n\n\nUS-PA\nPennsylvania\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-79.76301 4‚Ä¶\n\n\nUS-RI\nRhode Island\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-71.23686 4‚Ä¶\n\n\nUS-SC\nSouth Carolina\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-78.57316 3‚Ä¶\n\n\nUS-SD\nSouth Dakota\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-104.0567 4‚Ä¶\n\n\nUS-TN\nTennessee\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-90.30422 3‚Ä¶\n\n\nUS-TX\nTexas\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-103.3115 2‚Ä¶\n\n\nUS-UT\nUtah\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-111.0502 4‚Ä¶\n\n\nUS-VT\nVermont\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-73.35134 4‚Ä¶\n\n\nUS-VA\nVirginia\nFF2F11212\nTRUE\nMULTIPOLYGON (((-76.01325 3‚Ä¶\n\n\nUS-WA\nWashington\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-122.753 48‚Ä¶\n\n\nUS-WV\nWest Virginia\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-82.58945 3‚Ä¶\n\n\nUS-WI\nWisconsin\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-87.80425 4‚Ä¶\n\n\nUS-WY\nWyoming\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-109.0463 4‚Ä¶",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#if-you-dont-want-to-scroll",
    "href": "w05/index.html#if-you-dont-want-to-scroll",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "(If You Don‚Äôt Want to Scroll)",
    "text": "(If You Don‚Äôt Want to Scroll)\n\n\nCode\nus |&gt; filter(touch)\n\n\nWarning: Using one column matrices in `filter()` was deprecated in dplyr 1.1.0.\n‚Ñπ Please use one dimensional logical vectors instead.\n\n\n\n\n\n\n\n\n\n\n\n\n\niso_3166_2\nname\nde9im\ntouch\ngeometry\n\n\n\n\nUS-MD\nMaryland\nFF2F11212\nTRUE\nMULTIPOLYGON (((-75.64786 3‚Ä¶\n\n\nUS-VA\nVirginia\nFF2F11212\nTRUE\nMULTIPOLYGON (((-76.01325 3‚Ä¶",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#almost-a-spatial-join",
    "href": "w05/index.html#almost-a-spatial-join",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Almost a Spatial Join",
    "text": "Almost a Spatial Join\n\n\nCode\nN &lt;- 10\nsampled_points_sf &lt;- sf::st_sample(africa_union_sf, N) |&gt; sf::st_sf() |&gt; mutate(temp = runif(N, 0, 100))\nsampled_points_map &lt;- mapview(sampled_points_sf, label=\"Random Point\", col.regions=cbPalette[1], legend=FALSE)\ncountries_points_sf &lt;- africa_sf[sampled_points_sf,]\nfiltered_map &lt;- mapview(countries_points_sf, label=\"geounit\", legend=FALSE) + sampled_points_map\n(africa_map + sampled_points_map) | filtered_map",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#spatial-filter-neq-spatial-join",
    "href": "w05/index.html#spatial-filter-neq-spatial-join",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Spatial Filter \\(\\neq\\) Spatial Join",
    "text": "Spatial Filter \\(\\neq\\) Spatial Join\n\nThe issue: Data attributes of POINTs are not merged into data attributes of POLYGONs\n\n\n\n\nPOINT Attributes\n\n\n\nCode\nst_geometry(sampled_points_sf) &lt;- c(\"geom\")\nsampled_points_sf |&gt; head()\n\n\n\n\n\n\ngeom\ntemp\n\n\n\n\nPOINT (28.88401 -11.04133)\n40.75371\n\n\nPOINT (-3.388461 5.887811)\n78.41337\n\n\nPOINT (-3.314273 26.46337)\n30.54672\n\n\nPOINT (-4.557087 6.634956)\n16.08607\n\n\nPOINT (31.89275 10.71022)\n24.59659\n\n\nPOINT (11.21248 1.520453)\n16.11862\n\n\n\n\n\n\n\n\nPOLYGON Attributes\n\n\n\nCode\ncountries_points_sf |&gt; head(4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfeaturecla\nscalerank\nlabelrank\nsovereignt\nsov_a3\nadm0_dif\nlevel\ntype\ntlc\nadmin\nadm0_a3\ngeou_dif\ngeounit\ngu_a3\nsu_dif\nsubunit\nsu_a3\nbrk_diff\nname\nname_long\nbrk_a3\nbrk_name\nbrk_group\nabbrev\npostal\nformal_en\nformal_fr\nname_ciawf\nnote_adm0\nnote_brk\nname_sort\nname_alt\nmapcolor7\nmapcolor8\nmapcolor9\nmapcolor13\npop_est\npop_rank\npop_year\ngdp_md\ngdp_year\neconomy\nincome_grp\nfips_10\niso_a2\niso_a2_eh\niso_a3\niso_a3_eh\niso_n3\niso_n3_eh\nun_a3\nwb_a2\nwb_a3\nwoe_id\nwoe_id_eh\nwoe_note\nadm0_iso\nadm0_diff\nadm0_tlc\nadm0_a3_us\nadm0_a3_fr\nadm0_a3_ru\nadm0_a3_es\nadm0_a3_cn\nadm0_a3_tw\nadm0_a3_in\nadm0_a3_np\nadm0_a3_pk\nadm0_a3_de\nadm0_a3_gb\nadm0_a3_br\nadm0_a3_il\nadm0_a3_ps\nadm0_a3_sa\nadm0_a3_eg\nadm0_a3_ma\nadm0_a3_pt\nadm0_a3_ar\nadm0_a3_jp\nadm0_a3_ko\nadm0_a3_vn\nadm0_a3_tr\nadm0_a3_id\nadm0_a3_pl\nadm0_a3_gr\nadm0_a3_it\nadm0_a3_nl\nadm0_a3_se\nadm0_a3_bd\nadm0_a3_ua\nadm0_a3_un\nadm0_a3_wb\ncontinent\nregion_un\nsubregion\nregion_wb\nname_len\nlong_len\nabbrev_len\ntiny\nhomepart\nmin_zoom\nmin_label\nmax_label\nlabel_x\nlabel_y\nne_id\nwikidataid\nname_ar\nname_bn\nname_de\nname_en\nname_es\nname_fa\nname_fr\nname_el\nname_he\nname_hi\nname_hu\nname_id\nname_it\nname_ja\nname_ko\nname_nl\nname_pl\nname_pt\nname_ru\nname_sv\nname_tr\nname_uk\nname_ur\nname_vi\nname_zh\nname_zht\nfclass_iso\ntlc_diff\nfclass_tlc\nfclass_us\nfclass_fr\nfclass_ru\nfclass_es\nfclass_cn\nfclass_tw\nfclass_in\nfclass_np\nfclass_pk\nfclass_de\nfclass_gb\nfclass_br\nfclass_il\nfclass_ps\nfclass_sa\nfclass_eg\nfclass_ma\nfclass_pt\nfclass_ar\nfclass_jp\nfclass_ko\nfclass_vn\nfclass_tr\nfclass_id\nfclass_pl\nfclass_gr\nfclass_it\nfclass_nl\nfclass_se\nfclass_bd\nfclass_ua\nnum_points\ngeometry\n\n\n\n\n1\nAdmin-0 country\n1\n3\nAlgeria\nDZA\n0\n2\nSovereign country\n1\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nAlgeria\nDZA\nAlgeria\nNA\nAlg.\nDZ\nPeople‚Äôs Democratic Republic of Algeria\nNA\nAlgeria\nNA\nNA\nAlgeria\nNA\n5\n1\n6\n3\n43053054\n15\n2019\n171091\n2019\n6. Developing region\n3. Upper middle income\nAG\nDZ\nDZ\nDZA\nDZA\n012\n012\n012\nDZ\nDZA\n23424740\n23424740\nExact WOE match as country\nDZA\nNA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\n-99\n-99\nAfrica\nAfrica\nNorthern Africa\nMiddle East & North Africa\n7\n7\n4\n-99\n1\n0\n2.5\n7\n2.808241\n27.397406\n1159320565\nQ262\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\n‡¶Ü‡¶≤‡¶ú‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ\nAlgerien\nAlgeria\nArgelia\nÿßŸÑÿ¨ÿ≤ÿß€åÿ±\nAlg√©rie\nŒëŒªŒ≥ŒµœÅŒØŒ±\n◊ê◊ú◊í‚Äô◊ô◊®◊ô◊î\n‡§Ö‡§≤‡•ç‡§ú‡•Ä‡§∞‡§ø‡§Ø‡§æ\nAlg√©ria\nAljazair\nAlgeria\n„Ç¢„É´„Ç∏„Çß„É™„Ç¢\nÏïåÏ†úÎ¶¨\nAlgerije\nAlgieria\nArg√©lia\n–ê–ª–∂–∏—Ä\nAlgeriet\nCezayir\n–ê–ª–∂–∏—Ä\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\nAlg√©rie\nÈòøÂ∞îÂèäÂà©‰∫ö\nÈòøÁàæÂèäÂà©‰∫û\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\n8\nAdmin-0 country\n1\n3\nCameroon\nCMR\n0\n2\nSovereign country\n1\nCameroon\nCMR\n0\nCameroon\nCMR\n0\nCameroon\nCMR\n0\nCameroon\nCameroon\nCMR\nCameroon\nNA\nCam.\nCM\nRepublic of Cameroon\nNA\nCameroon\nNA\nNA\nCameroon\nNA\n1\n4\n1\n3\n25876380\n15\n2019\n39007\n2019\n6. Developing region\n4. Lower middle income\nCM\nCM\nCM\nCMR\nCMR\n120\n120\n120\nCM\nCMR\n23424785\n23424785\nExact WOE match as country\nCMR\nNA\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\n-99\n-99\nAfrica\nAfrica\nMiddle Africa\nSub-Saharan Africa\n8\n8\n4\n-99\n1\n0\n3.0\n8\n12.473488\n4.585041\n1159320509\nQ1009\nÿßŸÑŸÉÿßŸÖŸäÿ±ŸàŸÜ\n‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßá‡¶∞‡ßÅ‡¶®\nKamerun\nCameroon\nCamer√∫n\n⁄©ÿßŸÖÿ±ŸàŸÜ\nCameroun\nŒöŒ±ŒºŒµœÅŒøœçŒΩ\n◊ß◊û◊®◊ï◊ü\n‡§ï‡•à‡§Æ‡§∞‡•Å‡§®\nKamerun\nKamerun\nCamerun\n„Ç´„É°„É´„Éº„É≥\nÏπ¥Î©îÎ£¨\nKameroen\nKamerun\nCamar√µes\n–ö–∞–º–µ—Ä—É–Ω\nKamerun\nKamerun\n–ö–∞–º–µ—Ä—É–Ω\n⁄©€åŸÖÿ±ŸàŸÜ\nCameroon\nÂñÄÈ∫¶ÈöÜ\nÂñÄÈ∫•ÈöÜ\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n1\nMULTIPOLYGON (((8.555859 4‚Ä¶.\n\n\n9\nAdmin-0 country\n1\n4\nCentral African Republic\nCAF\n0\n2\nSovereign country\n1\nCentral African Republic\nCAF\n0\nCentral African Republic\nCAF\n0\nCentral African Republic\nCAF\n0\nCentral African Rep.\nCentral African Republic\nCAF\nCentral African Rep.\nNA\nC.A.R.\nCF\nCentral African Republic\nNA\nCentral African Republic\nNA\nNA\nCentral African Republic\nNA\n5\n6\n6\n9\n4745185\n12\n2019\n2220\n2019\n7. Least developed region\n5. Low income\nCT\nCF\nCF\nCAF\nCAF\n140\n140\n140\nCF\nCAF\n23424792\n23424792\nExact WOE match as country\nCAF\nNA\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\n-99\n-99\nAfrica\nAfrica\nMiddle Africa\nSub-Saharan Africa\n20\n24\n6\n-99\n1\n0\n4.0\n9\n20.906897\n6.989681\n1159320463\nQ929\nÿ¨ŸÖŸáŸàÿ±Ÿäÿ© ÿ£ŸÅÿ±ŸäŸÇŸäÿß ÿßŸÑŸàÿ≥ÿ∑Ÿâ\n‡¶Æ‡¶ß‡ßç‡¶Ø ‡¶Ü‡¶´‡ßç‡¶∞‡¶ø‡¶ï‡¶æ‡¶® ‡¶™‡ßç‡¶∞‡¶ú‡¶æ‡¶§‡¶®‡ßç‡¶§‡ßç‡¶∞\nZentralafrikanische Republik\nCentral African Republic\nRep√∫blica Centroafricana\nÿ¨ŸÖŸáŸàÿ±€å ÿ¢ŸÅÿ±€åŸÇÿß€å ŸÖÿ±⁄©ÿ≤€å\nR√©publique centrafricaine\nŒöŒµŒΩœÑœÅŒøŒ±œÜœÅŒπŒ∫Œ±ŒΩŒπŒ∫ŒÆ ŒîŒ∑ŒºŒøŒ∫œÅŒ±œÑŒØŒ±\n◊î◊®◊§◊ï◊ë◊ú◊ô◊ß◊î ◊î◊û◊®◊õ◊ñ-◊ê◊§◊®◊ô◊ß◊ê◊ô◊™\n‡§Æ‡§ß‡•ç‡§Ø ‡§Ö‡§´‡§º‡•ç‡§∞‡•Ä‡§ï‡•Ä ‡§ó‡§£‡§∞‡§æ‡§ú‡•ç‡§Ø\nK√∂z√©p-afrikai K√∂zt√°rsas√°g\nRepublik Afrika Tengah\nRepubblica Centrafricana\n‰∏≠Â§Æ„Ç¢„Éï„É™„Ç´ÂÖ±ÂíåÂõΩ\nÏ§ëÏïôÏïÑÌîÑÎ¶¨Ïπ¥ Í≥µÌôîÍµ≠\nCentraal-Afrikaanse Republiek\nRepublika ≈örodkowoafryka≈Ñska\nRep√∫blica Centro-Africana\n–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞\nCentralafrikanska republiken\nOrta Afrika Cumhuriyeti\n–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–∞—Ñ—Ä–∏–∫–∞–Ω—Å—å–∫–∞ –†–µ—Å–ø—É–±–ª—ñ–∫–∞\nŸàÿ≥ÿ∑€å ÿßŸÅÿ±€åŸÇ€å ÿ¨ŸÖ€ÅŸàÿ±€å€Å\nC·ªông h√≤a Trung Phi\n‰∏≠ÈùûÂÖ±ÂíåÂõΩ\n‰∏≠ÈùûÂÖ±ÂíåÂúã\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\nMULTIPOLYGON (((24.14736 8‚Ä¶.\n\n\n15\nAdmin-0 country\n1\n4\nEquatorial Guinea\nGNQ\n0\n2\nSovereign country\n1\nEquatorial Guinea\nGNQ\n0\nEquatorial Guinea\nGNQ\n0\nEquatorial Guinea\nGNQ\n0\nEq. Guinea\nEquatorial Guinea\nGNQ\nEq. Guinea\nNA\nEq. G.\nGQ\nRepublic of Equatorial Guinea\nNA\nEquatorial Guinea\nNA\nNA\nEquatorial Guinea\nNA\n4\n1\n4\n8\n1355986\n12\n2019\n11026\n2019\n7. Least developed region\n2. High income: nonOECD\nEK\nGQ\nGQ\nGNQ\nGNQ\n226\n226\n226\nGQ\nGNQ\n23424804\n23424804\nExact WOE match as country\nGNQ\nNA\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\n-99\n-99\nAfrica\nAfrica\nMiddle Africa\nSub-Saharan Africa\n10\n17\n6\n-99\n1\n0\n4.0\n9\n8.990200\n2.333000\n1159320801\nQ983\nÿ∫ŸäŸÜŸäÿß ÿßŸÑÿßÿ≥ÿ™Ÿàÿßÿ¶Ÿäÿ©\n‡¶¨‡¶ø‡¶∑‡ßÅ‡¶¨‡ßÄ‡¶Ø‡¶º ‡¶ó‡¶ø‡¶®‡¶ø\n√Ñquatorialguinea\nEquatorial Guinea\nGuinea Ecuatorial\n⁄Ø€åŸÜŸá ÿßÿ≥ÿ™Ÿàÿß€å€å\nGuin√©e √©quatoriale\nŒôœÉŒ∑ŒºŒµœÅŒπŒΩŒÆ ŒìŒøœÖŒπŒΩŒ≠Œ±\n◊í◊ô◊†◊ê◊î ◊î◊û◊©◊ï◊ï◊†◊ô◊™\n‡§≠‡•Ç‡§Æ‡§ß‡•ç‡§Ø‡§∞‡•á‡§ñ‡•Ä‡§Ø ‡§ó‡§ø‡§®‡•Ä\nEgyenl√≠t≈ëi-Guinea\nGuinea Khatulistiwa\nGuinea Equatoriale\nËµ§ÈÅì„ÇÆ„Éã„Ç¢\nÏ†ÅÎèÑ Í∏∞Îãà\nEquatoriaal-Guinea\nGwinea R√≥wnikowa\nGuin√© Equatorial\n–≠–∫–≤–∞—Ç–æ—Ä–∏–∞–ª—å–Ω–∞—è –ì–≤–∏–Ω–µ—è\nEkvatorialguinea\nEkvator Ginesi\n–ï–∫–≤–∞—Ç–æ—Ä—ñ–∞–ª—å–Ω–∞ –ì–≤—ñ–Ω–µ—è\nÿßÿ≥ÿ™Ÿàÿßÿ¶€å ⁄ØŸÜ€å\nGuinea X√≠ch ƒê·∫°o\nËµ§ÈÅìÂá†ÂÜÖ‰∫ö\nËµ§ÈÅìÂπæÂÖß‰∫û\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\nMULTIPOLYGON (((8.735742 3‚Ä¶.",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#our-first-real-spatial-join-st_join",
    "href": "w05/index.html#our-first-real-spatial-join-st_join",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Our First Real Spatial Join: st_join()",
    "text": "Our First Real Spatial Join: st_join()\n\n\nCode\njoined_sf &lt;- countries_points_sf |&gt; st_join(sampled_points_sf)\njoined_sf |&gt; head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfeaturecla\nscalerank\nlabelrank\nsovereignt\nsov_a3\nadm0_dif\nlevel\ntype\ntlc\nadmin\nadm0_a3\ngeou_dif\ngeounit\ngu_a3\nsu_dif\nsubunit\nsu_a3\nbrk_diff\nname\nname_long\nbrk_a3\nbrk_name\nbrk_group\nabbrev\npostal\nformal_en\nformal_fr\nname_ciawf\nnote_adm0\nnote_brk\nname_sort\nname_alt\nmapcolor7\nmapcolor8\nmapcolor9\nmapcolor13\npop_est\npop_rank\npop_year\ngdp_md\ngdp_year\neconomy\nincome_grp\nfips_10\niso_a2\niso_a2_eh\niso_a3\niso_a3_eh\niso_n3\niso_n3_eh\nun_a3\nwb_a2\nwb_a3\nwoe_id\nwoe_id_eh\nwoe_note\nadm0_iso\nadm0_diff\nadm0_tlc\nadm0_a3_us\nadm0_a3_fr\nadm0_a3_ru\nadm0_a3_es\nadm0_a3_cn\nadm0_a3_tw\nadm0_a3_in\nadm0_a3_np\nadm0_a3_pk\nadm0_a3_de\nadm0_a3_gb\nadm0_a3_br\nadm0_a3_il\nadm0_a3_ps\nadm0_a3_sa\nadm0_a3_eg\nadm0_a3_ma\nadm0_a3_pt\nadm0_a3_ar\nadm0_a3_jp\nadm0_a3_ko\nadm0_a3_vn\nadm0_a3_tr\nadm0_a3_id\nadm0_a3_pl\nadm0_a3_gr\nadm0_a3_it\nadm0_a3_nl\nadm0_a3_se\nadm0_a3_bd\nadm0_a3_ua\nadm0_a3_un\nadm0_a3_wb\ncontinent\nregion_un\nsubregion\nregion_wb\nname_len\nlong_len\nabbrev_len\ntiny\nhomepart\nmin_zoom\nmin_label\nmax_label\nlabel_x\nlabel_y\nne_id\nwikidataid\nname_ar\nname_bn\nname_de\nname_en\nname_es\nname_fa\nname_fr\nname_el\nname_he\nname_hi\nname_hu\nname_id\nname_it\nname_ja\nname_ko\nname_nl\nname_pl\nname_pt\nname_ru\nname_sv\nname_tr\nname_uk\nname_ur\nname_vi\nname_zh\nname_zht\nfclass_iso\ntlc_diff\nfclass_tlc\nfclass_us\nfclass_fr\nfclass_ru\nfclass_es\nfclass_cn\nfclass_tw\nfclass_in\nfclass_np\nfclass_pk\nfclass_de\nfclass_gb\nfclass_br\nfclass_il\nfclass_ps\nfclass_sa\nfclass_eg\nfclass_ma\nfclass_pt\nfclass_ar\nfclass_jp\nfclass_ko\nfclass_vn\nfclass_tr\nfclass_id\nfclass_pl\nfclass_gr\nfclass_it\nfclass_nl\nfclass_se\nfclass_bd\nfclass_ua\nnum_points\ntemp\ngeometry\n\n\n\n\n1\nAdmin-0 country\n1\n3\nAlgeria\nDZA\n0\n2\nSovereign country\n1\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nAlgeria\nDZA\nAlgeria\nNA\nAlg.\nDZ\nPeople‚Äôs Democratic Republic of Algeria\nNA\nAlgeria\nNA\nNA\nAlgeria\nNA\n5\n1\n6\n3\n43053054\n15\n2019\n171091\n2019\n6. Developing region\n3. Upper middle income\nAG\nDZ\nDZ\nDZA\nDZA\n012\n012\n012\nDZ\nDZA\n23424740\n23424740\nExact WOE match as country\nDZA\nNA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\n-99\n-99\nAfrica\nAfrica\nNorthern Africa\nMiddle East & North Africa\n7\n7\n4\n-99\n1\n0\n2.5\n7\n2.808241\n27.397406\n1159320565\nQ262\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\n‡¶Ü‡¶≤‡¶ú‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ\nAlgerien\nAlgeria\nArgelia\nÿßŸÑÿ¨ÿ≤ÿß€åÿ±\nAlg√©rie\nŒëŒªŒ≥ŒµœÅŒØŒ±\n◊ê◊ú◊í‚Äô◊ô◊®◊ô◊î\n‡§Ö‡§≤‡•ç‡§ú‡•Ä‡§∞‡§ø‡§Ø‡§æ\nAlg√©ria\nAljazair\nAlgeria\n„Ç¢„É´„Ç∏„Çß„É™„Ç¢\nÏïåÏ†úÎ¶¨\nAlgerije\nAlgieria\nArg√©lia\n–ê–ª–∂–∏—Ä\nAlgeriet\nCezayir\n–ê–ª–∂–∏—Ä\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\nAlg√©rie\nÈòøÂ∞îÂèäÂà©‰∫ö\nÈòøÁàæÂèäÂà©‰∫û\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n30.546725\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\n1.1\nAdmin-0 country\n1\n3\nAlgeria\nDZA\n0\n2\nSovereign country\n1\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nAlgeria\nDZA\nAlgeria\nNA\nAlg.\nDZ\nPeople‚Äôs Democratic Republic of Algeria\nNA\nAlgeria\nNA\nNA\nAlgeria\nNA\n5\n1\n6\n3\n43053054\n15\n2019\n171091\n2019\n6. Developing region\n3. Upper middle income\nAG\nDZ\nDZ\nDZA\nDZA\n012\n012\n012\nDZ\nDZA\n23424740\n23424740\nExact WOE match as country\nDZA\nNA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\n-99\n-99\nAfrica\nAfrica\nNorthern Africa\nMiddle East & North Africa\n7\n7\n4\n-99\n1\n0\n2.5\n7\n2.808241\n27.397406\n1159320565\nQ262\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\n‡¶Ü‡¶≤‡¶ú‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ\nAlgerien\nAlgeria\nArgelia\nÿßŸÑÿ¨ÿ≤ÿß€åÿ±\nAlg√©rie\nŒëŒªŒ≥ŒµœÅŒØŒ±\n◊ê◊ú◊í‚Äô◊ô◊®◊ô◊î\n‡§Ö‡§≤‡•ç‡§ú‡•Ä‡§∞‡§ø‡§Ø‡§æ\nAlg√©ria\nAljazair\nAlgeria\n„Ç¢„É´„Ç∏„Çß„É™„Ç¢\nÏïåÏ†úÎ¶¨\nAlgerije\nAlgieria\nArg√©lia\n–ê–ª–∂–∏—Ä\nAlgeriet\nCezayir\n–ê–ª–∂–∏—Ä\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\nAlg√©rie\nÈòøÂ∞îÂèäÂà©‰∫ö\nÈòøÁàæÂèäÂà©‰∫û\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n88.988614\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\n8\nAdmin-0 country\n1\n3\nCameroon\nCMR\n0\n2\nSovereign country\n1\nCameroon\nCMR\n0\nCameroon\nCMR\n0\nCameroon\nCMR\n0\nCameroon\nCameroon\nCMR\nCameroon\nNA\nCam.\nCM\nRepublic of Cameroon\nNA\nCameroon\nNA\nNA\nCameroon\nNA\n1\n4\n1\n3\n25876380\n15\n2019\n39007\n2019\n6. Developing region\n4. Lower middle income\nCM\nCM\nCM\nCMR\nCMR\n120\n120\n120\nCM\nCMR\n23424785\n23424785\nExact WOE match as country\nCMR\nNA\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\nCMR\n-99\n-99\nAfrica\nAfrica\nMiddle Africa\nSub-Saharan Africa\n8\n8\n4\n-99\n1\n0\n3.0\n8\n12.473488\n4.585041\n1159320509\nQ1009\nÿßŸÑŸÉÿßŸÖŸäÿ±ŸàŸÜ\n‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßá‡¶∞‡ßÅ‡¶®\nKamerun\nCameroon\nCamer√∫n\n⁄©ÿßŸÖÿ±ŸàŸÜ\nCameroun\nŒöŒ±ŒºŒµœÅŒøœçŒΩ\n◊ß◊û◊®◊ï◊ü\n‡§ï‡•à‡§Æ‡§∞‡•Å‡§®\nKamerun\nKamerun\nCamerun\n„Ç´„É°„É´„Éº„É≥\nÏπ¥Î©îÎ£¨\nKameroen\nKamerun\nCamar√µes\n–ö–∞–º–µ—Ä—É–Ω\nKamerun\nKamerun\n–ö–∞–º–µ—Ä—É–Ω\n⁄©€åŸÖÿ±ŸàŸÜ\nCameroon\nÂñÄÈ∫¶ÈöÜ\nÂñÄÈ∫•ÈöÜ\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n1\n95.012962\nMULTIPOLYGON (((8.555859 4‚Ä¶.\n\n\n9\nAdmin-0 country\n1\n4\nCentral African Republic\nCAF\n0\n2\nSovereign country\n1\nCentral African Republic\nCAF\n0\nCentral African Republic\nCAF\n0\nCentral African Republic\nCAF\n0\nCentral African Rep.\nCentral African Republic\nCAF\nCentral African Rep.\nNA\nC.A.R.\nCF\nCentral African Republic\nNA\nCentral African Republic\nNA\nNA\nCentral African Republic\nNA\n5\n6\n6\n9\n4745185\n12\n2019\n2220\n2019\n7. Least developed region\n5. Low income\nCT\nCF\nCF\nCAF\nCAF\n140\n140\n140\nCF\nCAF\n23424792\n23424792\nExact WOE match as country\nCAF\nNA\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\nCAF\n-99\n-99\nAfrica\nAfrica\nMiddle Africa\nSub-Saharan Africa\n20\n24\n6\n-99\n1\n0\n4.0\n9\n20.906897\n6.989681\n1159320463\nQ929\nÿ¨ŸÖŸáŸàÿ±Ÿäÿ© ÿ£ŸÅÿ±ŸäŸÇŸäÿß ÿßŸÑŸàÿ≥ÿ∑Ÿâ\n‡¶Æ‡¶ß‡ßç‡¶Ø ‡¶Ü‡¶´‡ßç‡¶∞‡¶ø‡¶ï‡¶æ‡¶® ‡¶™‡ßç‡¶∞‡¶ú‡¶æ‡¶§‡¶®‡ßç‡¶§‡ßç‡¶∞\nZentralafrikanische Republik\nCentral African Republic\nRep√∫blica Centroafricana\nÿ¨ŸÖŸáŸàÿ±€å ÿ¢ŸÅÿ±€åŸÇÿß€å ŸÖÿ±⁄©ÿ≤€å\nR√©publique centrafricaine\nŒöŒµŒΩœÑœÅŒøŒ±œÜœÅŒπŒ∫Œ±ŒΩŒπŒ∫ŒÆ ŒîŒ∑ŒºŒøŒ∫œÅŒ±œÑŒØŒ±\n◊î◊®◊§◊ï◊ë◊ú◊ô◊ß◊î ◊î◊û◊®◊õ◊ñ-◊ê◊§◊®◊ô◊ß◊ê◊ô◊™\n‡§Æ‡§ß‡•ç‡§Ø ‡§Ö‡§´‡§º‡•ç‡§∞‡•Ä‡§ï‡•Ä ‡§ó‡§£‡§∞‡§æ‡§ú‡•ç‡§Ø\nK√∂z√©p-afrikai K√∂zt√°rsas√°g\nRepublik Afrika Tengah\nRepubblica Centrafricana\n‰∏≠Â§Æ„Ç¢„Éï„É™„Ç´ÂÖ±ÂíåÂõΩ\nÏ§ëÏïôÏïÑÌîÑÎ¶¨Ïπ¥ Í≥µÌôîÍµ≠\nCentraal-Afrikaanse Republiek\nRepublika ≈örodkowoafryka≈Ñska\nRep√∫blica Centro-Africana\n–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞\nCentralafrikanska republiken\nOrta Afrika Cumhuriyeti\n–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–∞—Ñ—Ä–∏–∫–∞–Ω—Å—å–∫–∞ –†–µ—Å–ø—É–±–ª—ñ–∫–∞\nŸàÿ≥ÿ∑€å ÿßŸÅÿ±€åŸÇ€å ÿ¨ŸÖ€ÅŸàÿ±€å€Å\nC·ªông h√≤a Trung Phi\n‰∏≠ÈùûÂÖ±ÂíåÂõΩ\n‰∏≠ÈùûÂÖ±ÂíåÂúã\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n6.492276\nMULTIPOLYGON (((24.14736 8‚Ä¶.\n\n\n15\nAdmin-0 country\n1\n4\nEquatorial Guinea\nGNQ\n0\n2\nSovereign country\n1\nEquatorial Guinea\nGNQ\n0\nEquatorial Guinea\nGNQ\n0\nEquatorial Guinea\nGNQ\n0\nEq. Guinea\nEquatorial Guinea\nGNQ\nEq. Guinea\nNA\nEq. G.\nGQ\nRepublic of Equatorial Guinea\nNA\nEquatorial Guinea\nNA\nNA\nEquatorial Guinea\nNA\n4\n1\n4\n8\n1355986\n12\n2019\n11026\n2019\n7. Least developed region\n2. High income: nonOECD\nEK\nGQ\nGQ\nGNQ\nGNQ\n226\n226\n226\nGQ\nGNQ\n23424804\n23424804\nExact WOE match as country\nGNQ\nNA\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\nGNQ\n-99\n-99\nAfrica\nAfrica\nMiddle Africa\nSub-Saharan Africa\n10\n17\n6\n-99\n1\n0\n4.0\n9\n8.990200\n2.333000\n1159320801\nQ983\nÿ∫ŸäŸÜŸäÿß ÿßŸÑÿßÿ≥ÿ™Ÿàÿßÿ¶Ÿäÿ©\n‡¶¨‡¶ø‡¶∑‡ßÅ‡¶¨‡ßÄ‡¶Ø‡¶º ‡¶ó‡¶ø‡¶®‡¶ø\n√Ñquatorialguinea\nEquatorial Guinea\nGuinea Ecuatorial\n⁄Ø€åŸÜŸá ÿßÿ≥ÿ™Ÿàÿß€å€å\nGuin√©e √©quatoriale\nŒôœÉŒ∑ŒºŒµœÅŒπŒΩŒÆ ŒìŒøœÖŒπŒΩŒ≠Œ±\n◊í◊ô◊†◊ê◊î ◊î◊û◊©◊ï◊ï◊†◊ô◊™\n‡§≠‡•Ç‡§Æ‡§ß‡•ç‡§Ø‡§∞‡•á‡§ñ‡•Ä‡§Ø ‡§ó‡§ø‡§®‡•Ä\nEgyenl√≠t≈ëi-Guinea\nGuinea Khatulistiwa\nGuinea Equatoriale\nËµ§ÈÅì„ÇÆ„Éã„Ç¢\nÏ†ÅÎèÑ Í∏∞Îãà\nEquatoriaal-Guinea\nGwinea R√≥wnikowa\nGuin√© Equatorial\n–≠–∫–≤–∞—Ç–æ—Ä–∏–∞–ª—å–Ω–∞—è –ì–≤–∏–Ω–µ—è\nEkvatorialguinea\nEkvator Ginesi\n–ï–∫–≤–∞—Ç–æ—Ä—ñ–∞–ª—å–Ω–∞ –ì–≤—ñ–Ω–µ—è\nÿßÿ≥ÿ™Ÿàÿßÿ¶€å ⁄ØŸÜ€å\nGuinea X√≠ch ƒê·∫°o\nËµ§ÈÅìÂá†ÂÜÖ‰∫ö\nËµ§ÈÅìÂπæÂÖß‰∫û\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n16.118619\nMULTIPOLYGON (((8.735742 3‚Ä¶.\n\n\n23\nAdmin-0 country\n5\n3\nIvory Coast\nCIV\n0\n2\nSovereign country\n1\nIvory Coast\nCIV\n0\nIvory Coast\nCIV\n0\nIvory Coast\nCIV\n0\nC√¥te d‚ÄôIvoire\nC√¥te d‚ÄôIvoire\nCIV\nC√¥te d‚ÄôIvoire\nNA\nI.C.\nCI\nRepublic of Ivory Coast\nRepublic of Cote D‚ÄôIvoire\nCote D‚Äôivoire\nNA\nNA\nC√¥te d‚ÄôIvoire\nNA\n4\n6\n3\n3\n25716544\n15\n2019\n58539\n2019\n6. Developing region\n4. Lower middle income\nIV\nCI\nCI\nCIV\nCIV\n384\n384\n384\nCI\nCIV\n23424854\n23424854\nExact WOE match as country\nCIV\nNA\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\nCIV\n-99\n-99\nAfrica\nAfrica\nWestern Africa\nSub-Saharan Africa\n13\n13\n4\n-99\n1\n0\n2.5\n8\n-5.568618\n7.491390\n1159320507\nQ1008\nÿ≥ÿßÿ≠ŸÑ ÿßŸÑÿπÿßÿ¨\n‡¶ï‡ßã‡¶§ ‡¶¶‡¶ø‡¶≠‡ßã‡¶Ø‡¶º‡¶æ‡¶∞\nElfenbeink√ºste\nIvory Coast\nCosta de Marfil\nÿ≥ÿßÿ≠ŸÑ ÿπÿßÿ¨\nC√¥te d‚ÄôIvoire\nŒëŒ∫œÑŒÆ ŒïŒªŒµœÜŒ±ŒΩœÑŒøœÉœÑŒøœç\n◊ó◊ï◊£ ◊î◊©◊†◊î◊ë\n‡§ï‡•ã‡§§ ‡§¶‡§ø‡§µ‡•ç‡§µ‡§æ‡§∞\nElef√°ntcsontpart\nPantai Gading\nCosta d‚ÄôAvorio\n„Ç≥„Éº„Éà„Ç∏„Éú„ÉØ„Éº„É´\nÏΩîÌä∏ÎîîÎ∂ÄÏïÑÎ•¥\nIvoorkust\nWybrze≈ºe Ko≈õci S≈Çoniowej\nCosta do Marfim\n–ö–æ—Ç-–¥‚Äô–ò–≤—É–∞—Ä\nElfenbenskusten\nFildi≈üi Sahili\n–ö–æ—Ç-–¥‚Äô–Ü–≤—É–∞—Ä\n⁄©Ÿàÿ™ ÿØÿßŸàŸàÿßÿ∫\nB·ªù Bi·ªÉn Ng√†\nÁßëÁâπËø™Áì¶\nË±°ÁâôÊµ∑Â≤∏\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n78.413373\nMULTIPOLYGON (((-3.086719 5‚Ä¶",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#but-we-were-still-in-easy-mode",
    "href": "w05/index.html#but-we-were-still-in-easy-mode",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "But‚Ä¶ We Were Still in Easy Mode",
    "text": "But‚Ä¶ We Were Still in Easy Mode\n\nEvery point could be matched one-to-one with a country. But what if‚Ä¶ üò±\n\n\n\nCode\ng &lt;- st_make_grid(st_bbox(st_as_sfc(\"LINESTRING(0 0,1 1)\")), n = c(2,2))\npar(mar = rep(0,4))\nplot(g)\nplot(g[1] * diag(c(3/4, 1)) + c(0.25, 0.125), add = TRUE, lty = 2)\ntext(c(.2, .8, .2, .8), c(.2, .2, .8, .8), c(1,2,4,8), col = 'red')",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#spatially-intensive-vs.-spatially-extensive",
    "href": "w05/index.html#spatially-intensive-vs.-spatially-extensive",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Spatially Intensive vs.¬†Spatially Extensive",
    "text": "Spatially Intensive vs.¬†Spatially Extensive\n\nExtensive attributes: associated with a physical size (length, area, volume, counts of items). Ex: population count.\n\nAssociated with an area \\(\\implies\\) if that area is cut into smaller areas, the population count needs to be split too\n(At minimum, the sum of the population counts for the smaller areas needs to equal the total for the larger area)\n\nIntensive attributes: Not proportional to support: if the area is split, values may vary but on average remain the same. Ex: population density\n\nIf an area is split into smaller areas, population density is not split similarly!\nThe sum of population densities for the smaller areas is a meaningless measure\nInstead, the mean will be more useful as ~similar to the density of the total",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#handling-the-extensive-case",
    "href": "w05/index.html#handling-the-extensive-case",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Handling the Extensive Case",
    "text": "Handling the Extensive Case\n\nAssume the extensive attribute \\(Y\\) is uniformly distributed over a space \\(S_i\\) (e.g., for population counts we assume everyone is evenly-spaced across the region)\nWe first compute \\(Y_{ij}\\), derived from \\(Y_i\\) for a sub-area of \\(S_i\\), \\(A_{ij} = S_i \\cap T_j\\):\n\\[\n\\hat{Y}_{ij}(A_{ij}) = \\frac{|A_{ij}|}{|S_i|}Y_i(S_i)\n\\]\nwhere \\(|\\cdot|\\) denotes area.\nThen we can compute \\(Y_j(T_j)\\) by summing all the elements over area \\(T_j\\):\n\n\\[\n\\hat{Y}_j(T_j) = \\sum_{i=1}^{p}\\frac{|A_{ij}|}{|S_i|}Y_i(S_i)\n\\]",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#handling-the-intensive-case",
    "href": "w05/index.html#handling-the-intensive-case",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Handling the Intensive Case",
    "text": "Handling the Intensive Case\n\nAssume the variable \\(Y\\) has constant value over a space \\(S_i\\) (e.g., population density in assumed to be the same across all sub-areas)\nThen the estimate for a sub-area is the same as the estimate for the total area:\n\n\\[\n\\hat{Y}_{ij} = Y_i(S_i)\n\\]\n\nSo that we can obtain estimates of \\(Y\\) for new spatial units \\(T_j\\) via area-weighted average of the source values:\n\n\\[\n\\hat{Y}_j(T_j) = \\sum_{i=1}^{p}\\frac{|A_{ij}|}{|T_j|}Y_j(S_i)\n\\]",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#lets-go-see-it-in-action",
    "href": "w05/index.html#lets-go-see-it-in-action",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Let‚Äôs Go See It In Action!",
    "text": "Let‚Äôs Go See It In Action!",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#who-are-my-neighbors",
    "href": "w05/index.html#who-are-my-neighbors",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Who Are My Neighbors?",
    "text": "Who Are My Neighbors?\nIntroducing the spdep library!",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#spatial-autocorrelation",
    "href": "w05/index.html#spatial-autocorrelation",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Spatial Autocorrelation",
    "text": "Spatial Autocorrelation",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/index.html#references",
    "href": "w05/index.html#references",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "References",
    "text": "References\n\n\nCohn, P. M. 1965. Universal Algebra. Springer Science & Business Media.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2024. Geocomputation with R. CRC Press. https://r.geocompx.org/.\n\n\nPebesma, Edzer, and Roger Bivand. 2023. Spatial Data Science: With Applications in R. CRC Press. https://r-spatial.org/book/.",
    "crumbs": [
      "Week 5: Sep 24"
    ]
  },
  {
    "objectID": "w05/slides.html#spatial-joins",
    "href": "w05/slides.html#spatial-joins",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Spatial Joins",
    "text": "Spatial Joins\n\n\n\nCode\nafrica_sf &lt;- ne_countries(continent = \"Africa\", scale = 50)\nafrica_union_sf &lt;- sf::st_union(africa_sf)\nafrica_map &lt;- mapview(africa_sf, label=\"geounit\", legend=FALSE)\nnc &lt;- system.file(\"shape/nc.shp\", package=\"sf\") |&gt;\n  read_sf() |&gt;\n  st_transform('EPSG:2264')\ngr &lt;- st_sf(\n         label = apply(expand.grid(1:10, LETTERS[10:1])[,2:1], 1, paste0, collapse = \"\"),\n         geom = st_make_grid(nc))\ngr$col &lt;- sf.colors(10, categorical = TRUE, alpha = .3)\n# cut, to verify that NA's work out:\ngr &lt;- gr[-(1:30),]\nsuppressWarnings(nc_j &lt;- st_join(nc, gr, largest = TRUE))\npar(mfrow = c(2,1), mar = rep(0,4))\nplot(st_geometry(nc_j), border = 'grey')\nplot(st_geometry(gr), add = TRUE, col = gr$col)\ntext(st_coordinates(st_centroid(st_geometry(gr))), labels = gr$label, cex = .85)\n# the joined dataset:\nplot(st_geometry(nc_j), border = 'grey', col = nc_j$col)\ntext(st_coordinates(st_centroid(st_geometry(nc_j))), labels = nc_j$label, cex = .7)\nplot(st_geometry(gr), border = '#88ff88aa', add = TRUE)"
  },
  {
    "objectID": "w05/slides.html#spatial-sampling",
    "href": "w05/slides.html#spatial-sampling",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Spatial Sampling",
    "text": "Spatial Sampling\n\n\nCode\n# Sample random points\nafrica_points_list &lt;- sf::st_sample(africa_union_sf, 10)\nafrica_points_sf &lt;- sf::st_sf(africa_points_list)\nafrica_points_map &lt;- mapview(africa_points_sf, label=\"Random Point\", col.regions=cb_palette[1], legend=FALSE)\nafrica_map + africa_points_map"
  },
  {
    "objectID": "w05/slides.html#the-default-predicate-st_intersects",
    "href": "w05/slides.html#the-default-predicate-st_intersects",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "The ‚ÄúDefault‚Äù Predicate: st_intersects",
    "text": "The ‚ÄúDefault‚Äù Predicate: st_intersects\n\n\nCode\ncountries_w_points &lt;- africa_sf[africa_points_sf,]\nmapview(countries_w_points, label=\"geounit\", legend=FALSE) + africa_points_map"
  },
  {
    "objectID": "w05/slides.html#counting-with-lengths",
    "href": "w05/slides.html#counting-with-lengths",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Counting with lengths()",
    "text": "Counting with lengths()\n\n\nCode\ncountry_inter &lt;- sf::st_intersects(africa_sf, africa_points_sf)\n# Computes point counts for each polygon\n(num_intersections &lt;- lengths(country_inter))\n\n\n [1] 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0\n[39] 1 0 0 2 0 0 2 0 0 0 0 1 0 0 0 0\n\n\nCode\nafrica_sf &lt;- africa_sf |&gt; mutate(\n  num_points = num_intersections\n) |&gt; arrange(geounit)\nafrica_sf |&gt; select(geounit, num_points) |&gt; head()\n\n\n\n\n\n\ngeounit\nnum_points\ngeometry\n\n\n\n\nAlgeria\n0\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\nAngola\n0\nMULTIPOLYGON (((13.07275 -4‚Ä¶\n\n\nBenin\n0\nMULTIPOLYGON (((1.622656 6‚Ä¶.\n\n\nBotswana\n0\nMULTIPOLYGON (((25.25879 -1‚Ä¶\n\n\nBurkina Faso\n1\nMULTIPOLYGON (((0.9004883 1‚Ä¶\n\n\nBurundi\n0\nMULTIPOLYGON (((30.55361 -2‚Ä¶"
  },
  {
    "objectID": "w05/slides.html#plotting-with-mapview",
    "href": "w05/slides.html#plotting-with-mapview",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Plotting with mapview",
    "text": "Plotting with mapview\n\n\nCode\nmapview(africa_sf, zcol=\"num_points\")"
  },
  {
    "objectID": "w05/slides.html#plotting-with-ggplot2",
    "href": "w05/slides.html#plotting-with-ggplot2",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Plotting with ggplot2",
    "text": "Plotting with ggplot2\nSince we‚Äôre starting to get into data attributes rather than geometric features, switching to ggplot2 is recommended!\n\n\nCode\nafrica_sf |&gt; ggplot(aes(fill=num_points)) +\n  geom_sf() +\n  theme_classic()"
  },
  {
    "objectID": "w05/slides.html#one-more-unary-operation-st_buffer",
    "href": "w05/slides.html#one-more-unary-operation-st_buffer",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "One More Unary Operation: st_buffer()",
    "text": "One More Unary Operation: st_buffer()\n\nThink about how you might answer questions like:\n\n‚ÄúHow far is your house (POINT) from Manhattan (POLYGON)?‚Äù\n‚ÄúAre there any chemical plants within a mile of this building (POLYGON) / stretch of road (LINESTRING)?‚Äù\n\nLazy mode (my favorite mode): Compute distances from the centroid\nGIS master mode: Construct the buffer!"
  },
  {
    "objectID": "w05/slides.html#on-polygons",
    "href": "w05/slides.html#on-polygons",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "On POLYGONs",
    "text": "On POLYGONs\nKey line: manhattan_buffer_sf &lt;- manhattan_union_sf |&gt; st_buffer(dist = 1609.34) (1 mile \\(\\approx\\) 1609.34 meters)\n\n\nCode\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tidycensus)\nlibrary(tigris)\nlibrary(mapview)\noptions(tigris_use_cache = TRUE)\nmanhattan_sf &lt;- get_acs(\n  geography = \"tract\",\n  variables = \"B19013_001\",\n  state = \"NY\",\n  county = \"New York\",\n  year = 2020,\n  geometry = TRUE,\n  cb = FALSE\n)\n# Erase the island tracts real quick\nisland_tracts &lt;- c(\n  \"Census Tract 1, New York County, New York\",\n  \"Census Tract 2.02, New York County, New York\"\n)\nmanhattan_sf &lt;- manhattan_sf |&gt; filter(\n  !(NAME %in% island_tracts)\n)\n# Union of all census tracts within the county\nmanhattan_union_sf &lt;- st_union(manhattan_sf)\nmanhattan_union_map &lt;- mapview(manhattan_union_sf, label=\"New York County\")\n# Construct buffer (1 mile ~= 1609.34 meters)\nmanhattan_buffer_sf &lt;- manhattan_union_sf |&gt; st_buffer(dist = 1609.34)\nmanhattan_buffer_map &lt;- mapview(manhattan_buffer_sf, label=\"Buffer (1 Mile)\", col.regions = cbPalette[1], legend = TRUE)\nmanhattan_buffer_map + manhattan_union_map"
  },
  {
    "objectID": "w05/slides.html#on-linestrings",
    "href": "w05/slides.html#on-linestrings",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "On LINESTRINGs",
    "text": "On LINESTRINGs\n\n\nCode\nlibrary(tidyverse)\nlibrary(sf)\n## st_buffer, style options (taken from rgeos gBuffer)\nl1 = st_as_sfc(\"LINESTRING(0 0,1 5,4 5,5 2,8 2,9 4,4 6.5)\")\nop = par(mfrow=c(2,3))\nplot(st_buffer(l1, dist = 1, endCapStyle=\"ROUND\"), reset = FALSE, main = \"endCapStyle: ROUND\")\nplot(l1,col='blue',add=TRUE)\nplot(st_buffer(l1, dist = 1, endCapStyle=\"FLAT\"), reset = FALSE, main = \"endCapStyle: FLAT\")\nplot(l1,col='blue',add=TRUE)\nplot(st_buffer(l1, dist = 1, endCapStyle=\"SQUARE\"), reset = FALSE, main = \"endCapStyle: SQUARE\")\nplot(l1,col='blue',add=TRUE)\nplot(st_buffer(l1, dist = 1, nQuadSegs=1), reset = FALSE, main = \"nQuadSegs: 1\")\nplot(l1,col='blue',add=TRUE)\nplot(st_buffer(l1, dist = 1, nQuadSegs=2), reset = FALSE, main = \"nQuadSegs: 2\")\nplot(l1,col='blue',add=TRUE)\nplot(st_buffer(l1, dist = 1, nQuadSegs= 5), reset = FALSE, main = \"nQuadSegs: 5\")\nplot(l1,col='blue',add=TRUE)\n\n\n\nFrom the sf Documentation"
  },
  {
    "objectID": "w05/slides.html#what-makes-binary-operations-fancier",
    "href": "w05/slides.html#what-makes-binary-operations-fancier",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "What Makes Binary Operations ‚ÄúFancier‚Äù?",
    "text": "What Makes Binary Operations ‚ÄúFancier‚Äù?\n\n\n\nUnary\n\n\nst_centroid()\n\nPOLYGON \\(\\mapsto\\) POINT\nMULTIPOLYGON \\(\\mapsto\\) POINT\n\nst_convex_hull()\n\nPOLYGON \\(\\mapsto\\) POLYGON\nMULTIPOINT \\(\\mapsto\\) POLYGON\n\n\n\n\nBinary\n\n\nst_intersection()\n\n(POINT, POINT) \\(\\mapsto\\) POINT | POINT EMPTY\n(POLYGON, POLYGON) \\(\\mapsto\\) POLYGON | LINESTRING | POINT | POLYGON EMPTY\n\n\n\n\nst_is_empty() and st_dimension() become your new best friends üòâ\nst_is_empty(): Distinguishes between, e.g., POINT EMPTY and POINT(0 0)\nst_dimension(): NA for empty versions, otherwise\n\n2 for surfaces (POLYGON, MULTIPOLYGON)\n1 for lines (LINESTRING, MULTILINESTRING)\n0 for points (POINT, MULTIPOINT)"
  },
  {
    "objectID": "w05/slides.html#the-bad-kind-of-overthinking-will-my-life-just-get-harder-and-harder",
    "href": "w05/slides.html#the-bad-kind-of-overthinking-will-my-life-just-get-harder-and-harder",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "The Bad Kind of Overthinking: Will My Life Just Get Harder and Harder?",
    "text": "The Bad Kind of Overthinking: Will My Life Just Get Harder and Harder?\n\n\n\n\n\n\n\n\n\n\nUnary Operations\n\n\n\n\n\n\n\n\n\n\n\n\n\nBinary Operations\n\n\n\n\n\n\n\n\n\n\n\n\n\nTernary Operations\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuaternary Operations"
  },
  {
    "objectID": "w05/slides.html#good-news-and-bad-news",
    "href": "w05/slides.html#good-news-and-bad-news",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Good News and Bad News",
    "text": "Good News and Bad News\n\nThe good news: No!\nThe bad news: You‚Äôll have to read the 465-page Volume I and then the 451-page Volume II and then to page 15 of Volume III of Cohn (1965) to know why:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(i spent 4 yrs of undergrad studying abstract algebra and now it all sits gathering dust somewhere deep within my brain plz just let me have this moment i‚Äôll never mention it again i promise)"
  },
  {
    "objectID": "w05/slides.html#the-good-kind-of-overthinking",
    "href": "w05/slides.html#the-good-kind-of-overthinking",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "The Good Kind of Overthinking‚Ä¶",
    "text": "The Good Kind of Overthinking‚Ä¶\n\nFor fancier geospatial operations, we‚Äôll need to start overthinking, about the possible relationships between two (or more) geometries! \\(\\leadsto\\) Relational Predicates:\n\n\nFigure 4.2 in Lovelace, Nowosad, and Muenchow (2024)"
  },
  {
    "objectID": "w05/slides.html#de-9im-strings",
    "href": "w05/slides.html#de-9im-strings",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "DE-9IM Strings",
    "text": "DE-9IM Strings\nEach cell here visualizes one component of the DE-9IM string 1020F1102, which describes the relationship between the following two geometries:\n\nBoxey McBoxface: POLYGON(0 0, 1 0, 1 1, 0 1, 0 0)\nLiney McLineface: LINESTRING(0.5 -0.5, 0.5 0.5)\n\n\n\nCode\nlibrary(sf)\npolygon &lt;- po &lt;- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))\np0 &lt;- st_polygon(list(rbind(c(-1,-1), c(2,-1), c(2,2), c(-1,2), c(-1,-1))))\nline &lt;- li &lt;- st_linestring(rbind(c(.5, -.5), c(.5, 0.5)))\ns &lt;- st_sfc(po, li)\n\npar(mfrow = c(3,3))\npar(mar = c(1,1,1,1))\n\n# \"1020F1102\"\n# 1: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5,0), c(.5,.495)), col = 'red', lwd = 2)\npoints(0.5, 0.5, pch = 1)\n\n# 2: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"B(line) = 0\")))\npoints(0.5, 0.5, col = 'red', pch = 16)\n\n# 3: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"E(line) = 2\")))\nplot(po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n# 4: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"I(line) = 0\")))\npoints(.5, 0, col = 'red', pch = 16)\n\n# 5: F\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"B(line) = F\")))\n\n# 6: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"E(line) = 1\")))\nplot(po, border = 'red', col = NA, add = TRUE, lwd = 2)\n\n# 7: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5, -.5), c(.5, 0)), col = 'red', lwd = 2)\n\n# 8: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"B(line) = 0\")))\npoints(.5, -.5, col = 'red', pch = 16)\n\n# 9: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"E(line) = 2\")))\nplot(p0 / po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n\n\nCode from Pebesma and Bivand (2023)\nThe predicate equals corresponds to the DE-9IM string \"T*F**FFF*\". If any two geometries obey this relationship, they are (topologically) equal!"
  },
  {
    "objectID": "w05/slides.html#slowing-down-9im-no-de-yet",
    "href": "w05/slides.html#slowing-down-9im-no-de-yet",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Slowing Down: 9IM (no DE yet!)",
    "text": "Slowing Down: 9IM (no DE yet!)\n\n\n\n\n\n\n\n\n\n\n\n\n9IM\nInterior\nBoundary\nExterior\n\n\n\n\nInterior\n¬†\n¬†\n¬†\n\n\nBoundary\n¬†\n¬†\n¬†\n\n\nExterior\n¬†\n¬†\n¬†\n\n\n\n\n\nTable¬†1: From OSGeo Project"
  },
  {
    "objectID": "w05/slides.html#dimensionally-extended-de-9im",
    "href": "w05/slides.html#dimensionally-extended-de-9im",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Dimensionally Extended (DE) 9IM",
    "text": "Dimensionally Extended (DE) 9IM\n\n\n\n\n\n\n\n\n\n\n\n\n9IM\nInterior\nBoundary\nExterior\n\n\n\n\nInterior\n2\n1\n2\n\n\nBoundary\n1\n0\n1\n\n\nExterior\n2\n1\n2\n\n\n\n\n\nTable¬†2: From OSGeo Project"
  },
  {
    "objectID": "w05/slides.html#crunching-it-down-into-a-tiny-box",
    "href": "w05/slides.html#crunching-it-down-into-a-tiny-box",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Crunching it Down into a Tiny Box",
    "text": "Crunching it Down into a Tiny Box\n\n\n\nDE-9IM\nInterior\nBoundary\nExterior\n\n\n\n\nInterior\n2\n1\n2\n\n\nBoundary\n1\n0\n1\n\n\nExterior\n2\n1\n2\n\n\n\n\nAnd Then into a Tiny String\n\n\n212101212\n\n\nAnd Then into an Infinitesimally-Small Point"
  },
  {
    "objectID": "w05/slides.html#de-9im-masks",
    "href": "w05/slides.html#de-9im-masks",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "DE-9IM Masks",
    "text": "DE-9IM Masks\n\nNow terms can be given unambiguous, precise meaning!\n\n\n\n\nst_overlaps()\nInterior\nBoundary\nExterior\n\n\n\n\nInterior\nT\n*\nT\n\n\nBoundary\n*\n*\n*\n\n\nExterior\nT\n*\n*\n\n\n\n\nSpecial Values (besides 0, 1, 2):\n\nT: ‚ÄúTrue‚Äù (non-empty, st_dimension() &gt;= 0)\nF: ‚ÄúFalse‚Äù (empty, st_dimension() == NA)\n*: ‚ÄúWildcard‚Äù (Don‚Äôt care what the value is)\n\nst_overlaps(): T*T***T**, st_equals(): T*F**FFF*"
  },
  {
    "objectID": "w05/slides.html#de-9im-vs.-everyday-language",
    "href": "w05/slides.html#de-9im-vs.-everyday-language",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "DE-9IM vs.¬†Everyday Language",
    "text": "DE-9IM vs.¬†Everyday Language\n\nDE-9IM can (in theory) represent \\(6^9 = 10~077~696\\) possible geometric relationships!\nThe English language has like 10, and they‚Äôre ambiguous ‚ò†Ô∏è (Compromise employed by GIS systems: allow multiple masks for same English word:)\n\n\n\n\nEnglish\nMask\n212101212\nResult\n\n\n\n\n‚ÄúDisjoint‚Äù\nFF*FF****\nFALSE\nx not disjoint from y\n\n\n‚ÄúTouches‚Äù\nFT*******\nFALSE\nx doesn‚Äôt touch y\n\n\n‚ÄúTouches‚Äù\nF***T****\nFALSE\nx doesn‚Äôt touch y\n\n\n‚ÄúCrosses‚Äù\nT*T***T**\nTRUE\nx crosses y\n\n\n‚ÄúWithin‚Äù\nTF*F*****\nFALSE\nx is not within y\n\n\n‚ÄúOverlaps‚Äù\nT*T***T**\nTRUE\nx overlaps y"
  },
  {
    "objectID": "w05/slides.html#st_relate-the-ultimate-predicate",
    "href": "w05/slides.html#st_relate-the-ultimate-predicate",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "st_relate(): The Ultimate Predicate",
    "text": "st_relate(): The Ultimate Predicate\n\n\nCode\nlibrary(tidyverse)\nlibrary(rnaturalearth)\nus &lt;- ne_states(country=\"United States of America\")\ndc &lt;- us |&gt; filter(iso_3166_2 == \"US-DC\")\nus &lt;- us |&gt;\n  mutate(\n    de9im = st_relate(us, dc),\n    touch = st_touches(us, dc, sparse = F)\n  ) |&gt;\n  select(iso_3166_2, name, de9im, touch) |&gt;\n  arrange(name)\nus\n\n\n\n\n\n\n\n\n\n\n\n\n\niso_3166_2\nname\nde9im\ntouch\ngeometry\n\n\n\n\nUS-AL\nAlabama\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-87.41958 3‚Ä¶\n\n\nUS-AK\nAlaska\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-141.0056 6‚Ä¶\n\n\nUS-AZ\nArizona\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-111.0063 3‚Ä¶\n\n\nUS-AR\nArkansas\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-90.30422 3‚Ä¶\n\n\nUS-CA\nCalifornia\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-114.7243 3‚Ä¶\n\n\nUS-CO\nColorado\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-109.0463 4‚Ä¶\n\n\nUS-CT\nConnecticut\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-73.6417 41‚Ä¶\n\n\nUS-DE\nDelaware\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-75.05809 3‚Ä¶\n\n\nUS-DC\nDistrict of Columbia\n2FFF1FFF2\nFALSE\nMULTIPOLYGON (((-77.02293 3‚Ä¶\n\n\nUS-FL\nFlorida\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-87.44734 3‚Ä¶\n\n\nUS-GA\nGeorgia\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-80.89029 3‚Ä¶\n\n\nUS-HI\nHawaii\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-154.8996 1‚Ä¶\n\n\nUS-ID\nIdaho\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-117.0382 4‚Ä¶\n\n\nUS-IL\nIllinois\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-89.1237 36‚Ä¶\n\n\nUS-IN\nIndiana\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-84.80608 4‚Ä¶\n\n\nUS-IA\nIowa\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-96.48266 4‚Ä¶\n\n\nUS-KS\nKansas\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-102.0396 3‚Ä¶\n\n\nUS-KY\nKentucky\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-89.42446 3‚Ä¶\n\n\nUS-LA\nLouisiana\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-89.52599 3‚Ä¶\n\n\nUS-ME\nMaine\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-71.08495 4‚Ä¶\n\n\nUS-MD\nMaryland\nFF2F11212\nTRUE\nMULTIPOLYGON (((-75.64786 3‚Ä¶\n\n\nUS-MA\nMassachusetts\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-71.19396 4‚Ä¶\n\n\nUS-MI\nMichigan\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-84.4913 46‚Ä¶\n\n\nUS-MN\nMinnesota\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-97.22609 4‚Ä¶\n\n\nUS-MS\nMississippi\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-88.40221 3‚Ä¶\n\n\nUS-MO\nMissouri\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-95.31725 4‚Ä¶\n\n\nUS-MT\nMontana\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-116.0482 4‚Ä¶\n\n\nUS-NE\nNebraska\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-104.0537 4‚Ä¶\n\n\nUS-NV\nNevada\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-114.0425 4‚Ä¶\n\n\nUS-NH\nNew Hampshire\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-71.50585 4‚Ä¶\n\n\nUS-NJ\nNew Jersey\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-75.54133 3‚Ä¶\n\n\nUS-NM\nNew Mexico\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-108.1375 3‚Ä¶\n\n\nUS-NY\nNew York\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-79.06523 4‚Ä¶\n\n\nUS-NC\nNorth Carolina\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-76.03173 3‚Ä¶\n\n\nUS-ND\nNorth Dakota\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-104.0476 4‚Ä¶\n\n\nUS-OH\nOhio\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-80.52023 4‚Ä¶\n\n\nUS-OK\nOklahoma\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-103.0002 3‚Ä¶\n\n\nUS-OR\nOregon\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-124.4924 4‚Ä¶\n\n\nUS-PA\nPennsylvania\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-79.76301 4‚Ä¶\n\n\nUS-RI\nRhode Island\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-71.23686 4‚Ä¶\n\n\nUS-SC\nSouth Carolina\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-78.57316 3‚Ä¶\n\n\nUS-SD\nSouth Dakota\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-104.0567 4‚Ä¶\n\n\nUS-TN\nTennessee\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-90.30422 3‚Ä¶\n\n\nUS-TX\nTexas\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-103.3115 2‚Ä¶\n\n\nUS-UT\nUtah\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-111.0502 4‚Ä¶\n\n\nUS-VT\nVermont\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-73.35134 4‚Ä¶\n\n\nUS-VA\nVirginia\nFF2F11212\nTRUE\nMULTIPOLYGON (((-76.01325 3‚Ä¶\n\n\nUS-WA\nWashington\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-122.753 48‚Ä¶\n\n\nUS-WV\nWest Virginia\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-82.58945 3‚Ä¶\n\n\nUS-WI\nWisconsin\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-87.80425 4‚Ä¶\n\n\nUS-WY\nWyoming\nFF2FF1212\nFALSE\nMULTIPOLYGON (((-109.0463 4‚Ä¶"
  },
  {
    "objectID": "w05/slides.html#if-you-dont-want-to-scroll",
    "href": "w05/slides.html#if-you-dont-want-to-scroll",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "(If You Don‚Äôt Want to Scroll)",
    "text": "(If You Don‚Äôt Want to Scroll)\n\n\nCode\nus |&gt; filter(touch)\n\n\n\n\n\n\n\n\n\n\n\n\n\niso_3166_2\nname\nde9im\ntouch\ngeometry\n\n\n\n\nUS-MD\nMaryland\nFF2F11212\nTRUE\nMULTIPOLYGON (((-75.64786 3‚Ä¶\n\n\nUS-VA\nVirginia\nFF2F11212\nTRUE\nMULTIPOLYGON (((-76.01325 3‚Ä¶"
  },
  {
    "objectID": "w05/slides.html#almost-a-spatial-join",
    "href": "w05/slides.html#almost-a-spatial-join",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Almost a Spatial Join",
    "text": "Almost a Spatial Join\n\n\nCode\nN &lt;- 10\nsampled_points_sf &lt;- sf::st_sample(africa_union_sf, N) |&gt; sf::st_sf() |&gt; mutate(temp = runif(N, 0, 100))\nsampled_points_map &lt;- mapview(sampled_points_sf, label=\"Random Point\", col.regions=cbPalette[1], legend=FALSE)\ncountries_points_sf &lt;- africa_sf[sampled_points_sf,]\nfiltered_map &lt;- mapview(countries_points_sf, label=\"geounit\", legend=FALSE) + sampled_points_map\n(africa_map + sampled_points_map) | filtered_map"
  },
  {
    "objectID": "w05/slides.html#spatial-filter-neq-spatial-join",
    "href": "w05/slides.html#spatial-filter-neq-spatial-join",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Spatial Filter \\(\\neq\\) Spatial Join",
    "text": "Spatial Filter \\(\\neq\\) Spatial Join\n\nThe issue: Data attributes of POINTs are not merged into data attributes of POLYGONs\n\n\n\n\nPOINT Attributes\n\n\n\nCode\nst_geometry(sampled_points_sf) &lt;- c(\"geom\")\nsampled_points_sf |&gt; head()\n\n\n\n\n\n\ngeom\ntemp\n\n\n\n\nPOINT (10.39683 22.46)\n16.71006\n\n\nPOINT (20.57223 1.684078)\n39.83420\n\n\nPOINT (35.20928 12.59952)\n97.58459\n\n\nPOINT (44.98236 -17.25921)\n22.55100\n\n\nPOINT (46.96843 7.95096)\n19.74197\n\n\nPOINT (7.528037 26.14925)\n84.43853\n\n\n\n\n\n\n\n\nPOLYGON Attributes\n\n\n\nCode\ncountries_points_sf |&gt; head(4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfeaturecla\nscalerank\nlabelrank\nsovereignt\nsov_a3\nadm0_dif\nlevel\ntype\ntlc\nadmin\nadm0_a3\ngeou_dif\ngeounit\ngu_a3\nsu_dif\nsubunit\nsu_a3\nbrk_diff\nname\nname_long\nbrk_a3\nbrk_name\nbrk_group\nabbrev\npostal\nformal_en\nformal_fr\nname_ciawf\nnote_adm0\nnote_brk\nname_sort\nname_alt\nmapcolor7\nmapcolor8\nmapcolor9\nmapcolor13\npop_est\npop_rank\npop_year\ngdp_md\ngdp_year\neconomy\nincome_grp\nfips_10\niso_a2\niso_a2_eh\niso_a3\niso_a3_eh\niso_n3\niso_n3_eh\nun_a3\nwb_a2\nwb_a3\nwoe_id\nwoe_id_eh\nwoe_note\nadm0_iso\nadm0_diff\nadm0_tlc\nadm0_a3_us\nadm0_a3_fr\nadm0_a3_ru\nadm0_a3_es\nadm0_a3_cn\nadm0_a3_tw\nadm0_a3_in\nadm0_a3_np\nadm0_a3_pk\nadm0_a3_de\nadm0_a3_gb\nadm0_a3_br\nadm0_a3_il\nadm0_a3_ps\nadm0_a3_sa\nadm0_a3_eg\nadm0_a3_ma\nadm0_a3_pt\nadm0_a3_ar\nadm0_a3_jp\nadm0_a3_ko\nadm0_a3_vn\nadm0_a3_tr\nadm0_a3_id\nadm0_a3_pl\nadm0_a3_gr\nadm0_a3_it\nadm0_a3_nl\nadm0_a3_se\nadm0_a3_bd\nadm0_a3_ua\nadm0_a3_un\nadm0_a3_wb\ncontinent\nregion_un\nsubregion\nregion_wb\nname_len\nlong_len\nabbrev_len\ntiny\nhomepart\nmin_zoom\nmin_label\nmax_label\nlabel_x\nlabel_y\nne_id\nwikidataid\nname_ar\nname_bn\nname_de\nname_en\nname_es\nname_fa\nname_fr\nname_el\nname_he\nname_hi\nname_hu\nname_id\nname_it\nname_ja\nname_ko\nname_nl\nname_pl\nname_pt\nname_ru\nname_sv\nname_tr\nname_uk\nname_ur\nname_vi\nname_zh\nname_zht\nfclass_iso\ntlc_diff\nfclass_tlc\nfclass_us\nfclass_fr\nfclass_ru\nfclass_es\nfclass_cn\nfclass_tw\nfclass_in\nfclass_np\nfclass_pk\nfclass_de\nfclass_gb\nfclass_br\nfclass_il\nfclass_ps\nfclass_sa\nfclass_eg\nfclass_ma\nfclass_pt\nfclass_ar\nfclass_jp\nfclass_ko\nfclass_vn\nfclass_tr\nfclass_id\nfclass_pl\nfclass_gr\nfclass_it\nfclass_nl\nfclass_se\nfclass_bd\nfclass_ua\nnum_points\ngeometry\n\n\n\n\n1\nAdmin-0 country\n1\n3\nAlgeria\nDZA\n0\n2\nSovereign country\n1\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nAlgeria\nDZA\nAlgeria\nNA\nAlg.\nDZ\nPeople‚Äôs Democratic Republic of Algeria\nNA\nAlgeria\nNA\nNA\nAlgeria\nNA\n5\n1\n6\n3\n43053054\n15\n2019\n171091\n2019\n6. Developing region\n3. Upper middle income\nAG\nDZ\nDZ\nDZA\nDZA\n012\n012\n012\nDZ\nDZA\n23424740\n23424740\nExact WOE match as country\nDZA\nNA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\n-99\n-99\nAfrica\nAfrica\nNorthern Africa\nMiddle East & North Africa\n7\n7\n4\n-99\n1\n0\n2.5\n7.0\n2.808241\n27.397406\n1159320565\nQ262\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\n‡¶Ü‡¶≤‡¶ú‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ\nAlgerien\nAlgeria\nArgelia\nÿßŸÑÿ¨ÿ≤ÿß€åÿ±\nAlg√©rie\nŒëŒªŒ≥ŒµœÅŒØŒ±\n◊ê◊ú◊í‚Äô◊ô◊®◊ô◊î\n‡§Ö‡§≤‡•ç‡§ú‡•Ä‡§∞‡§ø‡§Ø‡§æ\nAlg√©ria\nAljazair\nAlgeria\n„Ç¢„É´„Ç∏„Çß„É™„Ç¢\nÏïåÏ†úÎ¶¨\nAlgerije\nAlgieria\nArg√©lia\n–ê–ª–∂–∏—Ä\nAlgeriet\nCezayir\n–ê–ª–∂–∏—Ä\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\nAlg√©rie\nÈòøÂ∞îÂèäÂà©‰∫ö\nÈòøÁàæÂèäÂà©‰∫û\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\n10\nAdmin-0 country\n1\n3\nChad\nTCD\n0\n2\nSovereign country\n1\nChad\nTCD\n0\nChad\nTCD\n0\nChad\nTCD\n0\nChad\nChad\nTCD\nChad\nNA\nChad\nTD\nRepublic of Chad\nNA\nChad\nNA\nNA\nChad\nNA\n6\n1\n8\n6\n15946876\n14\n2019\n11314\n2019\n7. Least developed region\n5. Low income\nCD\nTD\nTD\nTCD\nTCD\n148\n148\n148\nTD\nTCD\n23424777\n23424777\nExact WOE match as country\nTCD\nNA\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\n-99\n-99\nAfrica\nAfrica\nMiddle Africa\nSub-Saharan Africa\n4\n4\n4\n-99\n1\n0\n3.0\n8.0\n18.645041\n15.142959\n1159321301\nQ657\nÿ™ÿ¥ÿßÿØ\n‡¶ö‡¶æ‡¶¶\nTschad\nChad\nChad\n⁄ÜÿßÿØ\nTchad\nŒ§œÉŒ±ŒΩœÑ\n◊¶‚Äô◊ê◊ì\n‡§ö‡§æ‡§°\nCs√°d\nChad\nCiad\n„ÉÅ„É£„Éâ\nÏ∞®Îìú\nTsjaad\nCzad\nChade\n–ß–∞–¥\nTchad\n√áad\n–ß–∞–¥\n⁄Üÿß⁄à\nTchad\n‰πçÂæó\nÊü•Âæ∑\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n2\nMULTIPOLYGON (((23.98027 19‚Ä¶\n\n\n12\nAdmin-0 country\n1\n2\nDemocratic Republic of the Congo\nCOD\n0\n2\nSovereign country\n1\nDemocratic Republic of the Congo\nCOD\n0\nDemocratic Republic of the Congo\nCOD\n0\nDemocratic Republic of the Congo\nCOD\n0\nDem. Rep.¬†Congo\nDemocratic Republic of the Congo\nCOD\nDemocratic Republic of the Congo\nNA\nD.R.C.\nDRC\nDemocratic Republic of the Congo\nNA\nCongo, Democratic Republic of the\nNA\nNA\nCongo, Dem. Rep.\nNA\n4\n4\n4\n7\n86790567\n16\n2019\n50400\n2019\n7. Least developed region\n5. Low income\nCG\nCD\nCD\nCOD\nCOD\n180\n180\n180\nZR\nZAR\n23424780\n23424780\nExact WOE match as country\nCOD\nNA\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\n-99\n-99\nAfrica\nAfrica\nMiddle Africa\nSub-Saharan Africa\n15\n32\n6\n-99\n1\n0\n2.0\n7.0\n23.458829\n-1.858167\n1159320513\nQ974\nÿ¨ŸÖŸáŸàÿ±Ÿäÿ© ÿßŸÑŸÉŸàŸÜÿ∫Ÿà ÿßŸÑÿØŸäŸÖŸÇÿ±ÿßÿ∑Ÿäÿ©\n‡¶ó‡¶£‡¶§‡¶æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶ø‡¶ï ‡¶ï‡¶ô‡ßç‡¶ó‡ßã ‡¶™‡ßç‡¶∞‡¶ú‡¶æ‡¶§‡¶®‡ßç‡¶§‡ßç‡¶∞\nDemokratische Republik Kongo\nDemocratic Republic of the Congo\nRep√∫blica Democr√°tica del Congo\nÿ¨ŸÖŸáŸàÿ±€å ÿØŸÖŸà⁄©ÿ±ÿßÿ™€å⁄© ⁄©ŸÜ⁄ØŸà\nR√©publique d√©mocratique du Congo\nŒõŒ±œäŒ∫ŒÆ ŒîŒ∑ŒºŒøŒ∫œÅŒ±œÑŒØŒ± œÑŒøœÖ ŒöŒøŒΩŒ≥Œ∫œå\n◊î◊®◊§◊ï◊ë◊ú◊ô◊ß◊î ◊î◊ì◊û◊ï◊ß◊®◊ò◊ô◊™ ◊©◊ú ◊ß◊ï◊†◊í◊ï\n‡§ï‡§æ‡§Ç‡§ó‡•ã ‡§≤‡•ã‡§ï‡§§‡§æ‡§®‡•ç‡§§‡•ç‡§∞‡§ø‡§ï ‡§ó‡§£‡§∞‡§æ‡§ú‡•ç‡§Ø\nKong√≥i Demokratikus K√∂zt√°rsas√°g\nRepublik Demokratik Kongo\nRepubblica Democratica del Congo\n„Ç≥„É≥„Ç¥Ê∞ë‰∏ªÂÖ±ÂíåÂõΩ\nÏΩ©Í≥† ÎØºÏ£º Í≥µÌôîÍµ≠\nCongo-Kinshasa\nDemokratyczna Republika Konga\nRep√∫blica Democr√°tica do Congo\n–î–µ–º–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–æ–Ω–≥–æ\nKongo-Kinshasa\nDemokratik Kongo Cumhuriyeti\n–î–µ–º–æ–∫—Ä–∞—Ç–∏—á–Ω–∞ –†–µ—Å–ø—É–±–ª—ñ–∫–∞ –ö–æ–Ω–≥–æ\nÿ¨ŸÖ€ÅŸàÿ±€å ÿ¨ŸÖ€ÅŸàÿ±€å€Å ⁄©ÿßŸÜ⁄ØŸà\nC·ªông h√≤a D√¢n ch·ªß Congo\nÂàöÊûúÊ∞ë‰∏ªÂÖ±ÂíåÂõΩ\nÂâõÊûúÊ∞ë‰∏ªÂÖ±ÂíåÂúã\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n2\nMULTIPOLYGON (((30.75117 -8‚Ä¶\n\n\n14\nAdmin-0 country\n1\n2\nEgypt\nEGY\n0\n2\nSovereign country\n1\nEgypt\nEGY\n0\nEgypt\nEGY\n0\nEgypt\nEGY\n0\nEgypt\nEgypt\nEGY\nEgypt\nNA\nEgypt\nEG\nArab Republic of Egypt\nNA\nEgypt\nNA\nNA\nEgypt, Arab Rep.\nNA\n4\n6\n7\n2\n100388073\n17\n2019\n303092\n2019\n5. Emerging region: G20\n4. Lower middle income\nEG\nEG\nEG\nEGY\nEGY\n818\n818\n818\nEG\nEGY\n23424802\n23424802\nExact WOE match as country\nEGY\nNA\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\n-99\n-99\nAfrica\nAfrica\nNorthern Africa\nMiddle East & North Africa\n5\n5\n5\n-99\n1\n0\n1.7\n6.7\n29.445837\n26.186173\n1159320575\nQ79\nŸÖÿµÿ±\n‡¶Æ‡¶ø‡¶∂‡¶∞\n√Ñgypten\nEgypt\nEgipto\nŸÖÿµÿ±\n√âgypte\nŒëŒØŒ≥œÖœÄœÑŒøœÇ\n◊û◊¶◊®◊ô◊ù\n‡§Æ‡§ø‡§∏‡•ç‡§∞\nEgyiptom\nMesir\nEgitto\n„Ç®„Ç∏„Éó„Éà\nÏù¥ÏßëÌä∏\nEgypte\nEgipt\nEgito\n–ï–≥–∏–ø–µ—Ç\nEgypten\nMƒ±sƒ±r\n–Ñ–≥–∏–ø–µ—Ç\nŸÖÿµÿ±\nAi C·∫≠p\nÂüÉÂèä\nÂüÉÂèä\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n1\nMULTIPOLYGON (((36.87139 21‚Ä¶"
  },
  {
    "objectID": "w05/slides.html#our-first-real-spatial-join-st_join",
    "href": "w05/slides.html#our-first-real-spatial-join-st_join",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Our First Real Spatial Join: st_join()",
    "text": "Our First Real Spatial Join: st_join()\n\n\nCode\njoined_sf &lt;- countries_points_sf |&gt; st_join(sampled_points_sf)\njoined_sf |&gt; head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfeaturecla\nscalerank\nlabelrank\nsovereignt\nsov_a3\nadm0_dif\nlevel\ntype\ntlc\nadmin\nadm0_a3\ngeou_dif\ngeounit\ngu_a3\nsu_dif\nsubunit\nsu_a3\nbrk_diff\nname\nname_long\nbrk_a3\nbrk_name\nbrk_group\nabbrev\npostal\nformal_en\nformal_fr\nname_ciawf\nnote_adm0\nnote_brk\nname_sort\nname_alt\nmapcolor7\nmapcolor8\nmapcolor9\nmapcolor13\npop_est\npop_rank\npop_year\ngdp_md\ngdp_year\neconomy\nincome_grp\nfips_10\niso_a2\niso_a2_eh\niso_a3\niso_a3_eh\niso_n3\niso_n3_eh\nun_a3\nwb_a2\nwb_a3\nwoe_id\nwoe_id_eh\nwoe_note\nadm0_iso\nadm0_diff\nadm0_tlc\nadm0_a3_us\nadm0_a3_fr\nadm0_a3_ru\nadm0_a3_es\nadm0_a3_cn\nadm0_a3_tw\nadm0_a3_in\nadm0_a3_np\nadm0_a3_pk\nadm0_a3_de\nadm0_a3_gb\nadm0_a3_br\nadm0_a3_il\nadm0_a3_ps\nadm0_a3_sa\nadm0_a3_eg\nadm0_a3_ma\nadm0_a3_pt\nadm0_a3_ar\nadm0_a3_jp\nadm0_a3_ko\nadm0_a3_vn\nadm0_a3_tr\nadm0_a3_id\nadm0_a3_pl\nadm0_a3_gr\nadm0_a3_it\nadm0_a3_nl\nadm0_a3_se\nadm0_a3_bd\nadm0_a3_ua\nadm0_a3_un\nadm0_a3_wb\ncontinent\nregion_un\nsubregion\nregion_wb\nname_len\nlong_len\nabbrev_len\ntiny\nhomepart\nmin_zoom\nmin_label\nmax_label\nlabel_x\nlabel_y\nne_id\nwikidataid\nname_ar\nname_bn\nname_de\nname_en\nname_es\nname_fa\nname_fr\nname_el\nname_he\nname_hi\nname_hu\nname_id\nname_it\nname_ja\nname_ko\nname_nl\nname_pl\nname_pt\nname_ru\nname_sv\nname_tr\nname_uk\nname_ur\nname_vi\nname_zh\nname_zht\nfclass_iso\ntlc_diff\nfclass_tlc\nfclass_us\nfclass_fr\nfclass_ru\nfclass_es\nfclass_cn\nfclass_tw\nfclass_in\nfclass_np\nfclass_pk\nfclass_de\nfclass_gb\nfclass_br\nfclass_il\nfclass_ps\nfclass_sa\nfclass_eg\nfclass_ma\nfclass_pt\nfclass_ar\nfclass_jp\nfclass_ko\nfclass_vn\nfclass_tr\nfclass_id\nfclass_pl\nfclass_gr\nfclass_it\nfclass_nl\nfclass_se\nfclass_bd\nfclass_ua\nnum_points\ntemp\ngeometry\n\n\n\n\n1\nAdmin-0 country\n1\n3\nAlgeria\nDZA\n0\n2\nSovereign country\n1\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nAlgeria\nDZA\nAlgeria\nNA\nAlg.\nDZ\nPeople‚Äôs Democratic Republic of Algeria\nNA\nAlgeria\nNA\nNA\nAlgeria\nNA\n5\n1\n6\n3\n43053054\n15\n2019\n171091\n2019\n6. Developing region\n3. Upper middle income\nAG\nDZ\nDZ\nDZA\nDZA\n012\n012\n012\nDZ\nDZA\n23424740\n23424740\nExact WOE match as country\nDZA\nNA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\n-99\n-99\nAfrica\nAfrica\nNorthern Africa\nMiddle East & North Africa\n7\n7\n4\n-99\n1\n0\n2.5\n7.0\n2.808241\n27.397406\n1159320565\nQ262\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\n‡¶Ü‡¶≤‡¶ú‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ\nAlgerien\nAlgeria\nArgelia\nÿßŸÑÿ¨ÿ≤ÿß€åÿ±\nAlg√©rie\nŒëŒªŒ≥ŒµœÅŒØŒ±\n◊ê◊ú◊í‚Äô◊ô◊®◊ô◊î\n‡§Ö‡§≤‡•ç‡§ú‡•Ä‡§∞‡§ø‡§Ø‡§æ\nAlg√©ria\nAljazair\nAlgeria\n„Ç¢„É´„Ç∏„Çß„É™„Ç¢\nÏïåÏ†úÎ¶¨\nAlgerije\nAlgieria\nArg√©lia\n–ê–ª–∂–∏—Ä\nAlgeriet\nCezayir\n–ê–ª–∂–∏—Ä\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\nAlg√©rie\nÈòøÂ∞îÂèäÂà©‰∫ö\nÈòøÁàæÂèäÂà©‰∫û\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n84.43853\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\n1.1\nAdmin-0 country\n1\n3\nAlgeria\nDZA\n0\n2\nSovereign country\n1\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nDZA\n0\nAlgeria\nAlgeria\nDZA\nAlgeria\nNA\nAlg.\nDZ\nPeople‚Äôs Democratic Republic of Algeria\nNA\nAlgeria\nNA\nNA\nAlgeria\nNA\n5\n1\n6\n3\n43053054\n15\n2019\n171091\n2019\n6. Developing region\n3. Upper middle income\nAG\nDZ\nDZ\nDZA\nDZA\n012\n012\n012\nDZ\nDZA\n23424740\n23424740\nExact WOE match as country\nDZA\nNA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\nDZA\n-99\n-99\nAfrica\nAfrica\nNorthern Africa\nMiddle East & North Africa\n7\n7\n4\n-99\n1\n0\n2.5\n7.0\n2.808241\n27.397406\n1159320565\nQ262\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\n‡¶Ü‡¶≤‡¶ú‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ\nAlgerien\nAlgeria\nArgelia\nÿßŸÑÿ¨ÿ≤ÿß€åÿ±\nAlg√©rie\nŒëŒªŒ≥ŒµœÅŒØŒ±\n◊ê◊ú◊í‚Äô◊ô◊®◊ô◊î\n‡§Ö‡§≤‡•ç‡§ú‡•Ä‡§∞‡§ø‡§Ø‡§æ\nAlg√©ria\nAljazair\nAlgeria\n„Ç¢„É´„Ç∏„Çß„É™„Ç¢\nÏïåÏ†úÎ¶¨\nAlgerije\nAlgieria\nArg√©lia\n–ê–ª–∂–∏—Ä\nAlgeriet\nCezayir\n–ê–ª–∂–∏—Ä\nÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±\nAlg√©rie\nÈòøÂ∞îÂèäÂà©‰∫ö\nÈòøÁàæÂèäÂà©‰∫û\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n10.91730\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\n10\nAdmin-0 country\n1\n3\nChad\nTCD\n0\n2\nSovereign country\n1\nChad\nTCD\n0\nChad\nTCD\n0\nChad\nTCD\n0\nChad\nChad\nTCD\nChad\nNA\nChad\nTD\nRepublic of Chad\nNA\nChad\nNA\nNA\nChad\nNA\n6\n1\n8\n6\n15946876\n14\n2019\n11314\n2019\n7. Least developed region\n5. Low income\nCD\nTD\nTD\nTCD\nTCD\n148\n148\n148\nTD\nTCD\n23424777\n23424777\nExact WOE match as country\nTCD\nNA\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\nTCD\n-99\n-99\nAfrica\nAfrica\nMiddle Africa\nSub-Saharan Africa\n4\n4\n4\n-99\n1\n0\n3.0\n8.0\n18.645041\n15.142959\n1159321301\nQ657\nÿ™ÿ¥ÿßÿØ\n‡¶ö‡¶æ‡¶¶\nTschad\nChad\nChad\n⁄ÜÿßÿØ\nTchad\nŒ§œÉŒ±ŒΩœÑ\n◊¶‚Äô◊ê◊ì\n‡§ö‡§æ‡§°\nCs√°d\nChad\nCiad\n„ÉÅ„É£„Éâ\nÏ∞®Îìú\nTsjaad\nCzad\nChade\n–ß–∞–¥\nTchad\n√áad\n–ß–∞–¥\n⁄Üÿß⁄à\nTchad\n‰πçÂæó\nÊü•Âæ∑\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n2\n81.54586\nMULTIPOLYGON (((23.98027 19‚Ä¶\n\n\n12\nAdmin-0 country\n1\n2\nDemocratic Republic of the Congo\nCOD\n0\n2\nSovereign country\n1\nDemocratic Republic of the Congo\nCOD\n0\nDemocratic Republic of the Congo\nCOD\n0\nDemocratic Republic of the Congo\nCOD\n0\nDem. Rep.¬†Congo\nDemocratic Republic of the Congo\nCOD\nDemocratic Republic of the Congo\nNA\nD.R.C.\nDRC\nDemocratic Republic of the Congo\nNA\nCongo, Democratic Republic of the\nNA\nNA\nCongo, Dem. Rep.\nNA\n4\n4\n4\n7\n86790567\n16\n2019\n50400\n2019\n7. Least developed region\n5. Low income\nCG\nCD\nCD\nCOD\nCOD\n180\n180\n180\nZR\nZAR\n23424780\n23424780\nExact WOE match as country\nCOD\nNA\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\nCOD\n-99\n-99\nAfrica\nAfrica\nMiddle Africa\nSub-Saharan Africa\n15\n32\n6\n-99\n1\n0\n2.0\n7.0\n23.458829\n-1.858167\n1159320513\nQ974\nÿ¨ŸÖŸáŸàÿ±Ÿäÿ© ÿßŸÑŸÉŸàŸÜÿ∫Ÿà ÿßŸÑÿØŸäŸÖŸÇÿ±ÿßÿ∑Ÿäÿ©\n‡¶ó‡¶£‡¶§‡¶æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶ø‡¶ï ‡¶ï‡¶ô‡ßç‡¶ó‡ßã ‡¶™‡ßç‡¶∞‡¶ú‡¶æ‡¶§‡¶®‡ßç‡¶§‡ßç‡¶∞\nDemokratische Republik Kongo\nDemocratic Republic of the Congo\nRep√∫blica Democr√°tica del Congo\nÿ¨ŸÖŸáŸàÿ±€å ÿØŸÖŸà⁄©ÿ±ÿßÿ™€å⁄© ⁄©ŸÜ⁄ØŸà\nR√©publique d√©mocratique du Congo\nŒõŒ±œäŒ∫ŒÆ ŒîŒ∑ŒºŒøŒ∫œÅŒ±œÑŒØŒ± œÑŒøœÖ ŒöŒøŒΩŒ≥Œ∫œå\n◊î◊®◊§◊ï◊ë◊ú◊ô◊ß◊î ◊î◊ì◊û◊ï◊ß◊®◊ò◊ô◊™ ◊©◊ú ◊ß◊ï◊†◊í◊ï\n‡§ï‡§æ‡§Ç‡§ó‡•ã ‡§≤‡•ã‡§ï‡§§‡§æ‡§®‡•ç‡§§‡•ç‡§∞‡§ø‡§ï ‡§ó‡§£‡§∞‡§æ‡§ú‡•ç‡§Ø\nKong√≥i Demokratikus K√∂zt√°rsas√°g\nRepublik Demokratik Kongo\nRepubblica Democratica del Congo\n„Ç≥„É≥„Ç¥Ê∞ë‰∏ªÂÖ±ÂíåÂõΩ\nÏΩ©Í≥† ÎØºÏ£º Í≥µÌôîÍµ≠\nCongo-Kinshasa\nDemokratyczna Republika Konga\nRep√∫blica Democr√°tica do Congo\n–î–µ–º–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–æ–Ω–≥–æ\nKongo-Kinshasa\nDemokratik Kongo Cumhuriyeti\n–î–µ–º–æ–∫—Ä–∞—Ç–∏—á–Ω–∞ –†–µ—Å–ø—É–±–ª—ñ–∫–∞ –ö–æ–Ω–≥–æ\nÿ¨ŸÖ€ÅŸàÿ±€å ÿ¨ŸÖ€ÅŸàÿ±€å€Å ⁄©ÿßŸÜ⁄ØŸà\nC·ªông h√≤a D√¢n ch·ªß Congo\nÂàöÊûúÊ∞ë‰∏ªÂÖ±ÂíåÂõΩ\nÂâõÊûúÊ∞ë‰∏ªÂÖ±ÂíåÂúã\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n2\n39.83420\nMULTIPOLYGON (((30.75117 -8‚Ä¶\n\n\n14\nAdmin-0 country\n1\n2\nEgypt\nEGY\n0\n2\nSovereign country\n1\nEgypt\nEGY\n0\nEgypt\nEGY\n0\nEgypt\nEGY\n0\nEgypt\nEgypt\nEGY\nEgypt\nNA\nEgypt\nEG\nArab Republic of Egypt\nNA\nEgypt\nNA\nNA\nEgypt, Arab Rep.\nNA\n4\n6\n7\n2\n100388073\n17\n2019\n303092\n2019\n5. Emerging region: G20\n4. Lower middle income\nEG\nEG\nEG\nEGY\nEGY\n818\n818\n818\nEG\nEGY\n23424802\n23424802\nExact WOE match as country\nEGY\nNA\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\nEGY\n-99\n-99\nAfrica\nAfrica\nNorthern Africa\nMiddle East & North Africa\n5\n5\n5\n-99\n1\n0\n1.7\n6.7\n29.445837\n26.186173\n1159320575\nQ79\nŸÖÿµÿ±\n‡¶Æ‡¶ø‡¶∂‡¶∞\n√Ñgypten\nEgypt\nEgipto\nŸÖÿµÿ±\n√âgypte\nŒëŒØŒ≥œÖœÄœÑŒøœÇ\n◊û◊¶◊®◊ô◊ù\n‡§Æ‡§ø‡§∏‡•ç‡§∞\nEgyiptom\nMesir\nEgitto\n„Ç®„Ç∏„Éó„Éà\nÏù¥ÏßëÌä∏\nEgypte\nEgipt\nEgito\n–ï–≥–∏–ø–µ—Ç\nEgypten\nMƒ±sƒ±r\n–Ñ–≥–∏–ø–µ—Ç\nŸÖÿµÿ±\nAi C·∫≠p\nÂüÉÂèä\nÂüÉÂèä\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n1\n86.20170\nMULTIPOLYGON (((36.87139 21‚Ä¶\n\n\n17\nAdmin-0 country\n1\n2\nEthiopia\nETH\n0\n2\nSovereign country\n1\nEthiopia\nETH\n0\nEthiopia\nETH\n0\nEthiopia\nETH\n0\nEthiopia\nEthiopia\nETH\nEthiopia\nNA\nEth.\nET\nFederal Democratic Republic of Ethiopia\nNA\nEthiopia\nNA\nNA\nEthiopia\nNA\n4\n4\n1\n13\n112078730\n17\n2019\n95912\n2019\n7. Least developed region\n5. Low income\nET\nET\nET\nETH\nETH\n231\n231\n231\nET\nETH\n23424808\n23424808\nExact WOE match as country\nETH\nNA\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\nETH\n-99\n-99\nAfrica\nAfrica\nEastern Africa\nSub-Saharan Africa\n8\n8\n4\n-99\n1\n0\n2.0\n7.0\n39.088600\n8.032795\n1159320617\nQ115\nÿ•ÿ´ŸäŸàÿ®Ÿäÿß\n‡¶á‡¶•‡¶ø‡¶ì‡¶™‡¶ø‡¶Ø‡¶º‡¶æ\n√Ñthiopien\nEthiopia\nEtiop√≠a\nÿßÿ™€åŸàŸæ€å\n√âthiopie\nŒëŒπŒ∏ŒπŒøœÄŒØŒ±\n◊ê◊™◊ô◊ï◊§◊ô◊î\n‡§á‡§•‡§ø‡§Ø‡•ã‡§™‡§ø‡§Ø‡§æ\nEti√≥pia\nEthiopia\nEtiopia\n„Ç®„ÉÅ„Ç™„Éî„Ç¢\nÏóêÌã∞Ïò§ÌîºÏïÑ\nEthiopi√´\nEtiopia\nEti√≥pia\n–≠—Ñ–∏–æ–ø–∏—è\nEtiopien\nEtiyopya\n–ï—Ñ—ñ–æ–ø—ñ—è\nÿß€åÿ™⁄æŸàŸæ€åÿß\nEthiopia\nÂüÉÂ°û‰øÑÊØî‰∫ö\nË°£Á¥¢ÊØî‰∫û\nAdmin-0 country\nNA\nAdmin-0 country\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n1\n19.74197\nMULTIPOLYGON (((35.26836 5‚Ä¶."
  },
  {
    "objectID": "w05/slides.html#but-we-were-still-in-easy-mode",
    "href": "w05/slides.html#but-we-were-still-in-easy-mode",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "But‚Ä¶ We Were Still in Easy Mode",
    "text": "But‚Ä¶ We Were Still in Easy Mode\n\nEvery point could be matched one-to-one with a country. But what if‚Ä¶ üò±\n\n\n\nCode\ng &lt;- st_make_grid(st_bbox(st_as_sfc(\"LINESTRING(0 0,1 1)\")), n = c(2,2))\npar(mar = rep(0,4))\nplot(g)\nplot(g[1] * diag(c(3/4, 1)) + c(0.25, 0.125), add = TRUE, lty = 2)\ntext(c(.2, .8, .2, .8), c(.2, .2, .8, .8), c(1,2,4,8), col = 'red')"
  },
  {
    "objectID": "w05/slides.html#spatially-intensive-vs.-spatially-extensive",
    "href": "w05/slides.html#spatially-intensive-vs.-spatially-extensive",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Spatially Intensive vs.¬†Spatially Extensive",
    "text": "Spatially Intensive vs.¬†Spatially Extensive\n\nExtensive attributes: associated with a physical size (length, area, volume, counts of items). Ex: population count.\n\nAssociated with an area \\(\\implies\\) if that area is cut into smaller areas, the population count needs to be split too\n(At minimum, the sum of the population counts for the smaller areas needs to equal the total for the larger area)\n\nIntensive attributes: Not proportional to support: if the area is split, values may vary but on average remain the same. Ex: population density\n\nIf an area is split into smaller areas, population density is not split similarly!\nThe sum of population densities for the smaller areas is a meaningless measure\nInstead, the mean will be more useful as ~similar to the density of the total"
  },
  {
    "objectID": "w05/slides.html#handling-the-extensive-case",
    "href": "w05/slides.html#handling-the-extensive-case",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Handling the Extensive Case",
    "text": "Handling the Extensive Case\n\nAssume the extensive attribute \\(Y\\) is uniformly distributed over a space \\(S_i\\) (e.g., for population counts we assume everyone is evenly-spaced across the region)\nWe first compute \\(Y_{ij}\\), derived from \\(Y_i\\) for a sub-area of \\(S_i\\), \\(A_{ij} = S_i \\cap T_j\\):\n\\[\n\\hat{Y}_{ij}(A_{ij}) = \\frac{|A_{ij}|}{|S_i|}Y_i(S_i)\n\\]\nwhere \\(|\\cdot|\\) denotes area.\nThen we can compute \\(Y_j(T_j)\\) by summing all the elements over area \\(T_j\\):\n\n\\[\n\\hat{Y}_j(T_j) = \\sum_{i=1}^{p}\\frac{|A_{ij}|}{|S_i|}Y_i(S_i)\n\\]"
  },
  {
    "objectID": "w05/slides.html#handling-the-intensive-case",
    "href": "w05/slides.html#handling-the-intensive-case",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Handling the Intensive Case",
    "text": "Handling the Intensive Case\n\nAssume the variable \\(Y\\) has constant value over a space \\(S_i\\) (e.g., population density in assumed to be the same across all sub-areas)\nThen the estimate for a sub-area is the same as the estimate for the total area:\n\n\\[\n\\hat{Y}_{ij} = Y_i(S_i)\n\\]\n\nSo that we can obtain estimates of \\(Y\\) for new spatial units \\(T_j\\) via area-weighted average of the source values:\n\n\\[\n\\hat{Y}_j(T_j) = \\sum_{i=1}^{p}\\frac{|A_{ij}|}{|T_j|}Y_j(S_i)\n\\]"
  },
  {
    "objectID": "w05/slides.html#lets-go-see-it-in-action",
    "href": "w05/slides.html#lets-go-see-it-in-action",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Let‚Äôs Go See It In Action!",
    "text": "Let‚Äôs Go See It In Action!"
  },
  {
    "objectID": "w05/slides.html#who-are-my-neighbors",
    "href": "w05/slides.html#who-are-my-neighbors",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Who Are My Neighbors?",
    "text": "Who Are My Neighbors?\nIntroducing the spdep library!"
  },
  {
    "objectID": "w05/slides.html#spatial-autocorrelation",
    "href": "w05/slides.html#spatial-autocorrelation",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "Spatial Autocorrelation",
    "text": "Spatial Autocorrelation"
  },
  {
    "objectID": "w05/slides.html#references",
    "href": "w05/slides.html#references",
    "title": "Week 5: Binary Operations and Spatial Joins",
    "section": "References",
    "text": "References\n\n\nCohn, P. M. 1965. Universal Algebra. Springer Science & Business Media.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2024. Geocomputation with R. CRC Press. https://r.geocompx.org/.\n\n\nPebesma, Edzer, and Roger Bivand. 2023. Spatial Data Science: With Applications in R. CRC Press. https://r-spatial.org/book/."
  },
  {
    "objectID": "assignments/hw4/index.html",
    "href": "assignments/hw4/index.html",
    "title": "HW5A: International Borders and the Ethnic Cleansing of Palestine",
    "section": "",
    "text": "You may have noticed, in the news, the ‚Äúsudden‚Äù ‚Äúeruption‚Äù of violence between the Israeli Defense Forces (IDF) and the al-Qassam Brigades (the armed wing of Hamas, the democratically-elected government of the Occupied Palestinian Territories).\nIn this bonus homework you will use spatial point pattern analysis to understand a key piece of historical context which lies at the root of the present-day conflict, namely, the ethnic cleansing of Palestinian-populated villages in 1948, and Israel‚Äôs subsequent refusal to allow refugees from these villages to return to their homes, in violation of Article 49 of the Fourth Geneva Convention, the document which forms the basis for much of modern international law (see, e.g.¬†the 1998 Rome Statute of the International Criminal Court).\nThe centrality of this event for Palestinian refugees (who call it al-Nakba, or ‚ÄúThe Catastrophe‚Äù), and the importance of the Right to Return to their everyday lives, becomes immediately viscerally clear as you approach the UN-administered Aida camp in Beit Lahm, for example (the first refugee camp I ever worked in), and walk underneath the large key of return erected above its entrance Figure¬†1.\n\n\n\n\n\n\nFigure¬†1\n\n\n\nGiven that participants in armed attacks against Israeli occupying forces are disproportionately recruited from these very camps, understanding this linkage between al-Nakba and the present is crucial for understanding the conflict.\nThe data we‚Äôll be using can be understood through three key dates in this era of the conflict:\n\n29 November 1947: The UN announces its partition plan for the former British Mandate of Palestine\n15 May 1948: The armed Jewish groups throughout the former mandate declare independence for the State of Israel\n3 April 1949: Israel signs an armistice agreement with the Hashemite Kingdom of Jordan, leaving much of the present-day West Bank under Jordanian sovereignty (until its invasion and occupation by the IDF in 1967, which lasts to the present day)\n\nThese three dates will ‚Äúbookend‚Äù our hypotheses here, since the historiography of al-Nakba often involves debate around the following basic chronology:\n\nFrom 29 November 1947 until 15 May 1948, the Haganah (see below) conducted a campaign of terror and ethnic cleansing against Palestinian-populated villages, mainly targeting those located within the Jewish areas of the UN Partition Plan\nFrom 15 May 1948 until 3 April 1949, the IDF (see below again) conducted another campaign of terror and ethnic cleansing against Palestinian-populated villages, this time targeting those between the borders at the time of the declaration of independence and Jerusalem, the envisioned capital of Eretz Israel (‚ÄúGreater Israel‚Äù) in the eyes of the Zionist movement.\n\nBefore you begin, make sure to run the following code cell, which:\n\nSets R‚Äôs random seed,\nLoads the libraries we‚Äôll use,\nDefines a colorblind-friendly palette, and\nDefines a constant raster_eps which we‚Äôll use to determine the resolution of our intensity function estimates\n\nAlso, importantly, it switches off sf‚Äôs \\(S^2\\) (spherical geometry) mode, since the UN shapefiles here are incompatible with this mode (for reasons outlined here). Lastly, it defines a constant raster_eps\n\nset.seed(6805)\nlibrary(tidyverse) |&gt; suppressPackageStartupMessages()\nlibrary(sf) |&gt; suppressPackageStartupMessages()\nsf_use_s2(FALSE)\n\nSpherical geometry (s2) switched off\n\nlibrary(spatstat) |&gt; suppressPackageStartupMessages()\ncb_palette &lt;- c(\n  \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\",\"#0072B2\", \"#D55E00\", \"#CC79A7\"\n)\nraster_eps &lt;- 1000"
  },
  {
    "objectID": "assignments/hw4/index.html#overview",
    "href": "assignments/hw4/index.html#overview",
    "title": "HW5A: International Borders and the Ethnic Cleansing of Palestine",
    "section": "",
    "text": "You may have noticed, in the news, the ‚Äúsudden‚Äù ‚Äúeruption‚Äù of violence between the Israeli Defense Forces (IDF) and the al-Qassam Brigades (the armed wing of Hamas, the democratically-elected government of the Occupied Palestinian Territories).\nIn this bonus homework you will use spatial point pattern analysis to understand a key piece of historical context which lies at the root of the present-day conflict, namely, the ethnic cleansing of Palestinian-populated villages in 1948, and Israel‚Äôs subsequent refusal to allow refugees from these villages to return to their homes, in violation of Article 49 of the Fourth Geneva Convention, the document which forms the basis for much of modern international law (see, e.g.¬†the 1998 Rome Statute of the International Criminal Court).\nThe centrality of this event for Palestinian refugees (who call it al-Nakba, or ‚ÄúThe Catastrophe‚Äù), and the importance of the Right to Return to their everyday lives, becomes immediately viscerally clear as you approach the UN-administered Aida camp in Beit Lahm, for example (the first refugee camp I ever worked in), and walk underneath the large key of return erected above its entrance Figure¬†1.\n\n\n\n\n\n\nFigure¬†1\n\n\n\nGiven that participants in armed attacks against Israeli occupying forces are disproportionately recruited from these very camps, understanding this linkage between al-Nakba and the present is crucial for understanding the conflict.\nThe data we‚Äôll be using can be understood through three key dates in this era of the conflict:\n\n29 November 1947: The UN announces its partition plan for the former British Mandate of Palestine\n15 May 1948: The armed Jewish groups throughout the former mandate declare independence for the State of Israel\n3 April 1949: Israel signs an armistice agreement with the Hashemite Kingdom of Jordan, leaving much of the present-day West Bank under Jordanian sovereignty (until its invasion and occupation by the IDF in 1967, which lasts to the present day)\n\nThese three dates will ‚Äúbookend‚Äù our hypotheses here, since the historiography of al-Nakba often involves debate around the following basic chronology:\n\nFrom 29 November 1947 until 15 May 1948, the Haganah (see below) conducted a campaign of terror and ethnic cleansing against Palestinian-populated villages, mainly targeting those located within the Jewish areas of the UN Partition Plan\nFrom 15 May 1948 until 3 April 1949, the IDF (see below again) conducted another campaign of terror and ethnic cleansing against Palestinian-populated villages, this time targeting those between the borders at the time of the declaration of independence and Jerusalem, the envisioned capital of Eretz Israel (‚ÄúGreater Israel‚Äù) in the eyes of the Zionist movement.\n\nBefore you begin, make sure to run the following code cell, which:\n\nSets R‚Äôs random seed,\nLoads the libraries we‚Äôll use,\nDefines a colorblind-friendly palette, and\nDefines a constant raster_eps which we‚Äôll use to determine the resolution of our intensity function estimates\n\nAlso, importantly, it switches off sf‚Äôs \\(S^2\\) (spherical geometry) mode, since the UN shapefiles here are incompatible with this mode (for reasons outlined here). Lastly, it defines a constant raster_eps\n\nset.seed(6805)\nlibrary(tidyverse) |&gt; suppressPackageStartupMessages()\nlibrary(sf) |&gt; suppressPackageStartupMessages()\nsf_use_s2(FALSE)\n\nSpherical geometry (s2) switched off\n\nlibrary(spatstat) |&gt; suppressPackageStartupMessages()\ncb_palette &lt;- c(\n  \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\",\"#0072B2\", \"#D55E00\", \"#CC79A7\"\n)\nraster_eps &lt;- 1000"
  },
  {
    "objectID": "assignments/hw4/index.html#loading-and-preparing-the-data",
    "href": "assignments/hw4/index.html#loading-and-preparing-the-data",
    "title": "HW5A: International Borders and the Ethnic Cleansing of Palestine",
    "section": "Loading and Preparing the Data",
    "text": "Loading and Preparing the Data\nHere, to avoid the midterm situation where loading and cleaning took up nearly the whole time for most students (üò≠), we carry out the data loading and cleaning for you!\nFirst, we download, unzip, and load the shapefile for the British Mandate of Palestine, as it was constituted in British colonial documents in 1948, on the eve of its (planned) transfer to UN jurisdiction. Since the shapefile corresponds to the Mandate‚Äôs border as it was defined earlier on by the League of Nations, we get a LINESTRING, which we convert to the POLYGON of the mandate using st_cast():\n\njpr_shapefile_url &lt;- \"https://github.com/jpowerj/dsan-content/raw/refs/heads/main/2024-fall-ppol6805/hw5a/jpr_data.zip\"\ndownload.file(jpr_shapefile_url, destfile = \"jpr_data.zip\", quiet = TRUE)\nunzip(\"jpr_data.zip\")\n# Delete the Mac OSX metadata\nunlink(\"__MACOSX\", recursive = TRUE)\n\n\nmandate_border_sf &lt;- sf::st_read(\"jpr_data/shapefiles/outside_border.shp\", quiet=TRUE)\nmandate_sf &lt;- mandate_border_sf |&gt; sf::st_cast(\"POLYGON\")\nmandate_sf |&gt; ggplot() +\n  geom_sf() +\n  theme_classic(base_size=10) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n\nNext, we load the dataset on villages in 1947 from McAlexander (2023), where the resulting plot indicates the villages cleansed in each of the two durations mentioned above:\n\nphases &lt;- c(\n  \"Not Cleansed\",\n  \"29 Nov 1947 - 15 May 1948\",\n  \"15 May 1948 - 3 Apr 1949\"\n)\nvill_url &lt;- \"https://github.com/jpowerj/dsan-content/raw/refs/heads/main/2024-fall-ppol6805/hw5a/villages_1947.gpkg\"\nvill_47_sf &lt;- sf::st_read(vill_url, quiet=TRUE)\nvill_47_sf &lt;- vill_47_sf |&gt; mutate(cleansed_phase = factor(cleansed_phase, levels=phases))\nggplot() +\n  geom_sf(data=mandate_sf) +\n  geom_sf(data=vill_47_sf, aes(color=cleansed_phase), size=0.5) +\n  scale_color_manual(values=c(\"black\", cb_palette[2], cb_palette[1])) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n\nAs you can see from this overlay, however, there are no recorded villages in the southern ~half of the Mandate territory. Condensing lots of details, this is not because there were no people in this portion, but because this southern portion was mainly populated by ‚ÄúNegev Bedouin‚Äù, who typically practiced nomadic herding/agriculture rather than settling in one fixed location‚Äîwhich is why it‚Äôs important to keep in mind that the unit of analysis here is villages, not people!\nGiven that the ethnic cleansing of the Bedouin from Mandate Palestine followed its own, somewhat separate trajectory, we will focus in on the non-Bedouin Palestinian villages, and thus take our window of observation to be the northern portion of the Mandate, with the Palestinian village of Bir Seb‚Äôa (ÿ®ÿ¶ÿ± ÿßŸÑÿ≥ÿ®ÿπ) as the ‚Äúcutoff‚Äù point, below which there are no recorded villages in the data:\n\nvill_47_bbox &lt;- vill_47_sf |&gt; sf::st_bbox()\nvill_47_bbox[['xmin']] &lt;- 34.0\nvill_47_bbox[['ymin']] &lt;- 31.2\nnorth_sf &lt;- mandate_sf |&gt; sf::st_crop(vill_47_bbox)\n\nalthough coordinates are longitude/latitude, st_intersection assumes that they\nare planar\n\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\nggplot() +\n  geom_sf(data=north_sf) +\n  geom_sf(data=vill_47_sf, aes(color=cleansed_phase), size=0.65) +\n  theme_classic() +\n  scale_color_manual(values=c(\"black\", cb_palette[2], cb_palette[1])) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))"
  },
  {
    "objectID": "assignments/hw4/index.html#part-1-cleansing-by-the-yishuv-29-nov-1947-to-15-may-1948",
    "href": "assignments/hw4/index.html#part-1-cleansing-by-the-yishuv-29-nov-1947-to-15-may-1948",
    "title": "HW5A: International Borders and the Ethnic Cleansing of Palestine",
    "section": "Part 1: Cleansing by the Yishuv, 29 Nov 1947 to 15 May 1948",
    "text": "Part 1: Cleansing by the Yishuv, 29 Nov 1947 to 15 May 1948\n\nBackground\nThe ‚ÄúYishuv‚Äù (◊ô◊©◊ï◊ë), Hebrew for ‚ÄúSettlement‚Äù, is a general term used to refer to the Jewish population of Ottoman (1881-1917) and British (1917-1948) Palestine, which increased dramatically between the First Aliyah (i.e., the first wave of European Jewish settlement in Palestine) onwards and the establishment of Israel on 15 May 1948, at which point various armed paramilitary groups of the Yishuv were unified to form the Israeli Defense Forces (IDF), the national army of the newly-formed State of Israel.\nThe reason we distinguish between the Yishuv groups and the IDF is precisely because of the tenets of international law (as described by the Fourth Geneva Convention) mentioned above: before 15 May 1948, these groups operated as non-state paramilitary forces within territory under British sovereignty, and therefore had a different legal status from the post-May 15th IDF, which obtained the legal status of ‚Äúofficial‚Äù state military (once Israel signed the Geneva Conventions and had its military and borders subsequently recognized by, e.g., the US, UK, USSR, and so on, leading to their accession to the United Nations less than a year later, on 11 May 1949).\nAs mentioned above, 29 Nov 1947 is our first key date, since it is the day that the UN Partition Plan for Palestine was announced. Skipping lots of details (as in pretty much every part of this assignment, so I‚Äôll stop providing this disclaimer from now on!): although the surrounding Arab nations rejected the UN plan, the Yishuv accepted it and recognized it as a crucial opportunity to gain international legitimacy as a soon-to-be nation-state.\nHowever, in the eyes of Yishuv leaders like David Ben-Gurion (who would become Israel‚Äôs first Prime Minister), this presented a dilemma:\n\nA key precondition of this international legitimacy would be to establish Israel as a ‚Äúdemocratic‚Äù state (and thus qualify for the post-WWII reconstruction efforts being granted to the ‚Äúfree world‚Äù by the United States, a la the Marshall Plan), but‚Ä¶\nThe goal of Zionism, since its inception, had been an ethnostate in Palestine: i.e., a state wherein the Jewish population held uncontested control over all political, economic, and military decisions.\n\nThe second point is perhaps best summarized by Ben-Gurion himself:\n\nIn the area allocated to the Jewish State [in the UN plan mentioned above] there are not more than 520,000 Jews and about 350,000 non-Jews, mostly Arabs. Such a population composition does not provide a stable basis for a Jewish State. With such a composition, there cannot even be absolute certainty that control will remain in the hands of the Jewish majority [‚Ä¶] There can be no stable and strong Jewish state so long as it has a Jewish majority of only 60%. (Source: Downes (2004), Targeting Civilians in War)\n\n\n\nThe Hypothesis\nGiven this dilemma, a natural hypothesis would be that the announcement of the UN plan would spark a campaign of intensified ethnic cleansing by the armed groups of the Yishuv, aiming to drive Palestinians out of villages within the UN-allotted Jewish region until a ‚Äúsafe‚Äù Jewish majority (well above the ‚Äúonly 60%‚Äù mentioned in the above quote) could be secured, at which point independence could be declared for a democratic State of Israel. And indeed, Ben-Gurion would refer to this goal somewhat indirectly as the ‚Äútransfer process‚Äù, a process which was codified in Plan Dalet and explored in McAlexander (2023), the article from which our dataset is drawn.\nThe operationalization of this hypothesis in terms of the data we have, therefore, would involve the null hypothesis that\nVillages were cleansed in proportion to their density across the Mandate, regardless of their position within or outside of the UN-allotted Jewish region\nwhich we compare with the alternative hypothesis that\nVillages within the UN-allotted Jewish region were disproportionately likely to be chosen for cleansing,\ni.e., that their probability of being chosen for cleansing was greater than their spatial density with respect to the distribution of villages across the Mandate.\nTo test this hypothesis, we will need to load the shapefiles corresponding to the UN partition plan, which are again helpfully provided by McAlexander (2023), in the form of the shapefiles for the UN-allotted Palestinian region specifically (the Jewish region being everything in the Mandate besides this territory and besides Jerusalem, which was to be internationally administered by the UN, which we‚Äôll see in Part 2 below). Then we plot the villages cleansed from 29 Nov 1947 to 15 May 1948, the points which we‚Äôll test for disproportionate appearance in the UN-allotted Jewish region:\n\nun_pal_url &lt;- \"https://github.com/jpowerj/dsan-content/raw/refs/heads/main/2024-fall-ppol6805/hw5a/un_pal_crop.gpkg\"\nun_pal_sf &lt;- sf::st_read(un_pal_url)\n\nReading layer `un_pal_crop' from data source \n  `https://github.com/jpowerj/dsan-content/raw/refs/heads/main/2024-fall-ppol6805/hw5a/un_pal_crop.gpkg' \n  using driver `GPKG'\nSimple feature collection with 1 feature and 0 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 3806734 ymin: 3658750 xmax: 3960787 ymax: 3908699\nProjected CRS: WGS 84 / Pseudo-Mercator\n\nggplot() +\n  geom_sf(data=north_sf) +\n  geom_sf(data=un_pal_sf, fill=cb_palette[3], alpha=0.5) +\n  geom_sf(data=vill_47_sf, aes(color=cleansed_yish_4748), size=0.65) +\n  theme_classic() +\n  scale_color_manual(values=c('black', cb_palette[2], cb_palette[1])) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n\n\n\nQuestion 1.1: Observed Region Counts\nWe start by computing the observed spatial distribution of (phase-1) cleansed villages, in terms of how many such villages were located in the UN-allotted Jewish and Palestinian regions, respectively. The following plot, therefore, represents the point pattern we‚Äôre hoping to test, in terms of how likely it would be to occur under our null hypothesis:\n\nvill_c4748_sf &lt;- vill_47_sf |&gt; filter(cleansed_yish_4748)\nnum_c4748 &lt;- nrow(vill_c4748_sf)\nplot_title &lt;- paste0(\"Yishuv-Cleansed Villages (N = \",num_c4748,\")\")\nplot_subtitle &lt;- \"15 May 1948 - 3 Apr 1949\"\nggplot() +\n  geom_sf(data=north_sf) +\n  geom_sf(data=un_pal_sf, fill=cb_palette[3], alpha=0.5) +\n  geom_sf(data=vill_c4748_sf, size=0.65) +\n  theme_classic() +\n  scale_color_manual(values=c('black', cb_palette[2], cb_palette[1])) +\n  theme(\n    axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),\n    title = element_text(size=10)\n  ) +\n  labs(title=plot_title, subtitle=plot_subtitle)\n\n\n\n\n\n\n\n\nUsing the above-created sf objects:\n\nnorth_sf, containing a POLYGON representing the northern ~half of the British Mandate of Palestine,\nun_pal_north_sf, containing MULTIPOLYGON representing the UN-allotted Palestinian regions, and\nvill_c4748_sf, containing POINTs representing the villages cleansed by the Yishuv from 29 Nov 1947 to 15 May 1948,\n\nYour goal is to compute the counts of how many villages in vill_c4748_sf fall within the UN-allotted Palestinian region and how many do not fall within this region.\nSince we are interested in the hypothesis that the number of cleansed villages in the UN-allotted Jewish region is disproportionate, we will use this number specifically as our test statistic: store this value in a variable named obs_nc4748_in_jewish.\n\n\n\n\n\n\nImplementing a Count Function\n\n\n\nThough it‚Äôs not required, it will save you time later on if you implement this by creating a function named compute_sf_jewish_count(), which takes in an sf object containing POINTs and returns the number of these points that fall outside of un_pal_north_sf.\nThough it requires more thought up-front, it will pay off when you construct the large number of Monte Carlo simulations in Questions 1.3 and 1.4, since you can convert these simulated ppp objects into sf objects (making sure to filter out the window and keep only the simulated POINT observations!), then use this function to compute counts for each simulation.\n\n\n\n# Your code here\n# Recommended, not required: a function for computing this count\ncompute_sf_jewish_count &lt;- function(village_sf) {\n  # Your (optional) code here: compute the number of points in village_sf lying\n  # outside of un_pal_north_sf.\n  return(NULL)\n}\n# Replace with count of cleansed villages in Jewish region\nobs_num_jewish_region &lt;- NULL\n\nYou should obtain the result that 159 villages, out of the 190 total that were cleansed between 29 Nov 1947 and 15 May 1948, were located within the UN-allotted Jewish region. In the remaining questions, you will compare this count with counts obtained via simulation under the null hypothesis.\n\n\nQuestion 1.2: Village Intensity Function\nNow that you have the observed count of how many of the 190 villages chosen for cleansing fell within the UN-allotted Jewish region, we need to evaluate whether this is higher or lower than the count we would expect to see under our null hypothesis!\nTo this end, the first step is to estimate an intensity function of villages across the Mandate territory as they existed in 1947, which will then allow us to simulate the spatial distribution of villages under the null, i.e., simulate what a choice of villages not affected by the UN partition plan would look like. Estimate this intensity function using the density() function from spatstat.random, and store the estimated intensity function in a variable named vill_47_int.\nRemember to use the raster_eps global parameter defined at the top of the notebook for the eps parameter of density()! Otherwise the estimated intensity function might be too coarse (too pixelated) or, even worse, too fine-grained (which might lead to your RAM quickly filling up).\n\nvill_47_int &lt;- NULL # Replace with call to\n\n\n\nQuestion 1.3: Simulated Region Counts\nNow that you have an intensity function for villages throughout the north of the Mandate, you have what you need to use the spatstat.random::rpoint() function to simulate 190 points drawn from this intensity function! Do this in the following code cell, saving the resulting ppp object as vill_c4748_sim_ppp (with this name chosen since we‚Äôre simulating the locations of cleansed villages between 29 Nov 1947 and 15 May 1948 under the null hypothesis):\n\nvill_c4748_sim_ppp &lt;- NULL # Replace with rpoint() call\n\nIf your ppp object was created as intended, running the following code cell should produce a plot of these simulated villages overlaid on the 1947 village intensity function, which you can use as a ‚Äúsanity check‚Äù (for example, if you observe a large number of villages in the blue low-intensity regions, something may be wrong with your call to rpoint()):\n\nif (!is.null(vill_c4748_sim_ppp)) {\n  vill_47_int_stars &lt;- stars::st_as_stars(vill_47_int)\n  vill_c4748_sim_points_sf &lt;- vill_c4748_sim_ppp |&gt;\n    sf::st_as_sf() |&gt;\n    sf::st_set_crs(3857) |&gt;\n    filter(label == \"point\")\n  ggplot() +\n    geom_stars(data=vill_47_int_stars) +\n    geom_sf(data=vill_c4748_sim_points_sf, size=0.65) +\n    geom_sf(data=un_pal_north_sf, alpha=0.4) +\n    theme_classic() +\n    scale_fill_viridis_c(option=\"C\", na.value=\"transparent\") +\n    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n    labs(title = \"190 Intensity-Sampled Villages\")\n} else {\n  writeLines(\"vill_c4748_sim_ppp object must be created first!\")\n}\n\nvill_c4748_sim_ppp object must be created first!\n\n\n\n\nQuestion 1.4: Computing the Test Statistic\nGiven the resulting ppp object, you should be able to use code similar to the code you wrote in Question 1.1 to count the number of points in vill_47_sim_ppp that fall within the UN-allotted Jewish region of the Mandate. Store this value in a variable named sim_c4748_points and print its value at the end of your code cell.\n\n# Your code here\n\nYou should find that the number of simulated points falling within the UN-allotted Jewish region is lower than the observed number you computed at the end of Question 1.1.\nThis gives us a‚Ä¶ small hint that 159 might be a high number of villages, but we can‚Äôt evaluate the hypothesis on the basis of a single counterfactual simulation! The main point of this question, secretly, was to get you into the habit of writing code for a single simulation, and then plotting the results as a sanity-check that it works, before you think about running 999 of them.\n\n\nQuestion 1.5: Monte Carlo Hypothesis Testing\nHere, your job is to just take the simulation code that you‚Äôve now used to generate one simulation and run it 999 times, to generate 999 ppp objects and then extract the count of the number of cleansed villages in the UN-allotted Jewish area from each. Like in the midterm, this will give you a distribution of test statistics that you can use to judge how unlikely it would be to observe 159 cleansed villages within the UN-allotted Jewish region under the null hypothesis.\nSo, in the following code cell: compute these 999 simulations, derive the test statistic for each, and then use ggplot2 to create a density plot (using geom_density()) of the 999 simulated test statistics, on top of which you should superimpose a dashed line (preferably with the color from the first element of cb_palette) representing the observed test statistic of 159, to see how likely or unlikely this value would be under the null hypothesis.\nAs I‚Äôve mentioned (ranted about) in class, you don‚Äôt need to compute a \\(p\\)-value or confidence interval here. But, below the produced density plot, please provide a sentence or two describing your inference from the plot, in terms of the likelihood that the null hypothesis is true.\n\n# Your code here"
  },
  {
    "objectID": "assignments/hw4/index.html#part-2-cleansing-by-the-idf-15-may-1948-to-3-apr-1949",
    "href": "assignments/hw4/index.html#part-2-cleansing-by-the-idf-15-may-1948-to-3-apr-1949",
    "title": "HW5A: International Borders and the Ethnic Cleansing of Palestine",
    "section": "Part 2: Cleansing by the IDF, 15 May 1948 to 3 Apr 1949",
    "text": "Part 2: Cleansing by the IDF, 15 May 1948 to 3 Apr 1949\n\nBackground\nOnce Israel had established itself as a democracy and signed onto the Fourth Geneva Convention, as mentioned above, the borders of the UN-allotted Jewish territory were accepted as the borders of the State of Israel by great powers like the US, UK, and USSR. However, the rejection of the plan by the surrounding Arab nations provided the newly-formed state with a fait accompli to conduct a second phase of the ethnic cleansing campaign, which could now be justified as essentially a ‚Äúside effect‚Äù of the inter-state wars between Israel and, for example:\n\nLebanon to the north,\nEgypt to the southwest (resulting in Egyptian sovereignty over the Gaza Strip), and\nJordan to the east (resulting in Jordanian sovereignty over the West Bank).\n\nHere we will focus on the war with Jordan in particular, for reasons that will become apparent once you visualize the spatial distribution of these phase-2 cleansed villages.\nAfter dropping the villages which had already been cleansed in the first phase (before 15 May 1948), a plot of those cleansed in this second phase immediately gives rise to a plausible hypothesis for their spatial distribution, revolving around the location of Jerusalem within the Jordanian-claimed portion of the UN-allotted Palestinian region.\n\n# Drop phase-1 cleansed villages\nvill_48_sf &lt;- vill_47_sf |&gt; filter(!cleansed_yish_4748)\n# Load POLYGON for Jordan-claimed portion\njord_url &lt;- \"https://github.com/jpowerj/dsan-content/raw/refs/heads/main/2024-fall-ppol6805/hw5a/un_jordan_claimed.gpkg\"\njord_sf &lt;- sf::st_read(jord_url)\n\nReading layer `un_jordan_claimed' from data source \n  `https://github.com/jpowerj/dsan-content/raw/refs/heads/main/2024-fall-ppol6805/hw5a/un_jordan_claimed.gpkg' \n  using driver `GPKG'\nSimple feature collection with 1 feature and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 34.68605 ymin: 31.22123 xmax: 35.58035 ymax: 32.63122\nGeodetic CRS:  WGS 84\n\n# Load POLYGON for 2024 West Bank\nwb_url &lt;- \"https://github.com/jpowerj/dsan-content/raw/refs/heads/main/2024-fall-ppol6805/hw5a/un_ocha_west_bank.gpkg\"\nwb_sf &lt;- sf::st_read(wb_url)\n\nReading layer `un_ocha_west_bank' from data source \n  `https://github.com/jpowerj/dsan-content/raw/refs/heads/main/2024-fall-ppol6805/hw5a/un_ocha_west_bank.gpkg' \n  using driver `GPKG'\nSimple feature collection with 1 feature and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 34.88054 ymin: 31.34269 xmax: 35.57319 ymax: 32.55239\nGeodetic CRS:  WGS 84\n\n# Create sf containing a POINT corresponding to the centroid of the Old City\njeru_df &lt;- tibble::tribble(\n  ~lat, ~lon,\n  31.777908401571544, 35.23166035886802\n)\njeru_sf &lt;- jeru_df |&gt; sf::st_as_sf(\n  coords=c(\"lon\",\"lat\"),\n  crs=4326\n) |&gt; sf::st_transform(3857)\n\n\ngen_p2_plot &lt;- function(include_wb=FALSE) {\n  p2_obj &lt;- ggplot() +\n    geom_sf(data=north_sf, aes(fill=\"Mandate (1917)\"), alpha=0.0) +\n    geom_sf(data=jord_sf, aes(fill=\"UN-Allocated (1947)\"), alpha=0.3, linewidth=0.5) +\n    ifelse(\n      include_wb,\n      geom_sf(data=wb_sf, aes(fill=\"West Bank (2024)\"), alpha=0.6, linewidth=0.5),\n      element_blank()\n    ) +\n    geom_sf(data=vill_48_sf, aes(color=cleansed_idf_4849), size=0.65) +\n    geom_sf(data=jeru_sf, aes(shape=\"Jerusalem\"), fill=cb_palette[4], size=3, stroke=1) +\n    geom_sf(data=sf::st_boundary(north_sf), linewidth=1) +\n    scale_color_manual(\"Cleansed\", values=c(\"black\",cb_palette[1])) +\n    scale_fill_manual(element_blank(), values=c(\"white\",cb_palette[3],cb_palette[3])) +\n    scale_shape_manual(element_blank(), values=21) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n    labs(title=\"Cleansed Villages, 1948-1949\")\n  return(p2_obj)\n}\ngen_p2_plot()\n\n\n\n\n\n\n\n\nAnd, by overlaying the POLYGON for the modern (2024) West Bank, you can also see how these IDF cleansings essentially determined the final armistice line which divides Israel from the Occupied West Bank to this day:\n\ngen_p2_plot(include_wb=TRUE)\n\n\n\n\n\n\n\n\n\n\nThe Hypothesis\nThough the UN Partition Plan designated Jerusalem as an internationally-administered territory (rather than placing it within the Jewish or Palestinian ‚Äúsides‚Äù), our hypothesis for the second phase is that the IDF wanted to clear a ‚Äúroad to Jerusalem‚Äù from the newly-formed State of Israel, as proposed by (newly-elected Prime Minister) David Ben-Gurion:\n\nIf we defeat them and capture western Galilee or territory on both sides of the road to Jerusalem, these areas will become part of the state. Why should we obligate ourselves to accept boundaries that in any case the Arabs don‚Äôt accept?‚Äù\n\nCleansing the villages which had the misfortune of existing on this ‚Äúroad to Jerusalem‚Äù would, ostensibly, make it easier to wrest Jerusalem from international or Jordanian control via military conquest, which was indeed achieved 19 years later.\nThus our null hypothesis in this part is that:\nVillages were cleansed in proportion to their density within the Jordanian-claimed portion of the UN-allotted Palestinian region, regardless of their distance to Jerusalem\nwhich we compare with the alternative hypothesis that\nVillages closer to Jerusalem were disproportionately likely to be chosen for cleansing.\nTo test this hypothesis, like on the midterm and the previous problem, your job is to conduct 999 Monte Carlo simulations of the null hypothesis, and see how different the observed average distance from Jerusalem is from the 999 simulated average distances.\nNotice that our observation window here is different from the previous part: wheres before we were considering the British Mandate territory as a whole, here we are ‚Äúzooming in‚Äù on just the Jordanian-claimed portion of the UN-allotted Palestinian region. The following code cells set up the necessary sf objects that you‚Äôll use for the remainder of the questions.\nFirst, the collection of all villages in the Jordanian-claimed region (the observation window for this question), which you‚Äôll use to estimate a new ‚Äúvillage intensity function‚Äù for this hypothesis:\n\n# All remaining (non-previously-cleansed) villages in Jordanian-claimed region\nvill_jord_sf &lt;- vill_48_sf |&gt; sf::st_filter(jord_sf)\n\nalthough coordinates are longitude/latitude, st_intersects assumes that they\nare planar\nalthough coordinates are longitude/latitude, st_intersects assumes that they\nare planar\n\nggplot() +\n  geom_sf(data=jord_sf) +\n  geom_sf(data=vill_jord_sf, aes(color=cleansed_idf_4849), size=0.7) +\n  geom_sf(data=jeru_sf, aes(shape=\"Jerusalem\"), fill=cb_palette[4], size=3, stroke=1) +\n  scale_color_manual(values=c(\"black\",cb_palette[1])) +\n  scale_shape_manual(element_blank(), values=21) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n\nAnd now the subset of just the post-15 May 1848 cleansed villages, the observed point pattern that you will test on the basis of the village intensity function:\n\n# Villages cleansed by IDF, post-15 May 1948\nvill_c4849_sf &lt;- vill_jord_sf |&gt; filter(cleansed_idf_4849)\nnum_c4849 &lt;- nrow(vill_c4849_sf)\nplot_title &lt;- paste0(\"IDF-Cleansed Villages (N = \",num_c4849,\")\")\nplot_subtitle &lt;- \"15 May 1948 - 3 Apr 1949\"\nggplot() +\n  geom_sf(data=jord_sf) +\n  geom_sf(data=vill_c4849_sf, size=0.7) +\n  geom_sf(data=jeru_sf, aes(shape=\"Jerusalem\"), fill=cb_palette[4], size=3, stroke=1) +\n  scale_shape_manual(element_blank(), values=21) +\n  theme_classic() +\n  theme(\n    axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),\n    plot.title = element_text(size=12),\n    plot.subtitle = element_text(size=10)\n  ) +\n  labs(title=plot_title, subtitle=plot_subtitle)\n\n\n\n\n\n\n\n\n\n\nQuestion 2.1: Observed Distances\nYour job in this question is to compute the observed test statistic: in this case, the mean distance between the cleansed villages and the centroid of the Old City of Jerusalem. You can call this obs_mean_dist.\n\nobs_mean_dist &lt;- NULL # Replace with computation of observed mean distance\n\nYou should obtain a value of about 30843.81. Is this low or high? Let‚Äôs use point-process simulation to check!\n\n\nQuestion 2.2: Village Intensity Function\nLike in the Question 1.2, your job here is to use the collection of all remaining villages within the Jordanian-claimed region (the points stored in vill_jord_sf above) to estimate and plot an intensity function, which you should call vill_jord_int.\nAnd, as in Question 1.2 again, please make sure to use the eps parameter when you call density() to ensure a reasonable level of resolution for the (raster-data) intensity function.\n\nvill_jord_int &lt;- NULL # Replace with density() call\n\n\n\nQuestion 2.3: Simulated Points\nHere, as you did in Question 1.3, use the estimated intensity function vill_jord_int to simulate num_c4849 points (num_c4849 is defined above, in the code cell with label q2-cleansed-villages), and store the results of this simulation in a ppp object named vill_c4849_sim_ppp.\n\nvill_c4849_sim_ppp &lt;- NULL # Replace with density() call\n\nLike in Question 1.3, if the intensity function was estimated correctly and the simulation ran as intended, the following code cell should plot the simulated points in vill_c4849_sim_ppp over top of the heatmap based on vill_jord_int, as a sanity check (you can run the q2-3-response code cell and then the following code multiple times, for example, to make sure that points tend to be generated in the regions with greater intensity!)\n\nif (!is.null(vill_c4849_sim_ppp)) {\n  vill_jord_int_stars &lt;- stars::st_as_stars(vill_jord_int)\n  vill_c4849_sim_points_sf &lt;- vill_c4849_sim_ppp |&gt; sf::st_as_sf() |&gt;\n    sf::st_set_crs(3857) |&gt; filter(label == \"point\")\n  ggplot() +\n    geom_stars(data=vill_jord_int_stars) +\n    geom_sf(data=vill_c4849_sim_points_sf, size=0.65) +\n    theme_classic() +\n    scale_fill_viridis_c(option=\"C\", na.value=\"transparent\") +\n    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n    labs(title = \"100 Intensity-Sampled Villages\")\n} else {\n  writeLines(\"vill_c4849_sim_ppp object must be created first!\")\n}\n\nvill_c4849_sim_ppp object must be created first!\n\n\n\n\nQuestion 2.4: Computing the Test Statistic\nThis is where your code will start to differ from the code in Question 1. Here, your job is to compute the new distance-based test statistic in this part‚Äìthe mean distance from the simulated villages to Jerusalem‚Äîfor the simulated ppp object you just created. Store this value in a variable named sim_c4849_mean and print its value at the end of your code cell.\n\n# Your code here\nsim_c4849_mean &lt;- NULL # Replace with calculated mean distance from Jerusalem\nprint(sim_c4849_mean)\n\nNULL\n\n\nOnce again, you should get a mean distance here that is lower than the observed mean distance, but (as before) we can‚Äôt evaluate the hypothesis on the basis of a single counterfactual simulation! So, in the next question, you will re-run this simulation, 999 times, and then create a density plot to see how likely or unlikely our observed value of 30843.81 is relative to the mean distances resulting from these 999 simulations.\n\n\nQuestion 2.5: Monte Carlo Hypothesis Testing\nHere, like in Question 1.5, your job is to just take the simulation code that you‚Äôve now used to generate one simulation and run it 999 times, computing the mean distance from Jerusalem for each (on the basis of the centroid in jeru_sf).\nLike in Question 1.5, this will give you a distribution of test statistics that you can use to judge how unlikely it would be to observe a mean distance of 30843.81 under the null hypothesis.\nSo, in the following code cell: compute these 999 simulations, derive the test statistic for each, and then use ggplot2 to create a density plot (using geom_density()) of the 999 simulated test statistics, on top of which you should superimpose a dashed line (preferably with the color from the first element of cb_palette) representing the observed test statistic of 30843.81, to see how likely or unlikely this value would be under the null hypothesis.\nAs before, you don‚Äôt need to compute an exact \\(p\\)-value or confidence interval here. But, below the produced density plot, please provide a sentence or two describing your inference from the plot, in terms of the likelihood that the null hypothesis is true.\n\n# Your code here\n\nThank you for your work! As with all of the other assignments, I hope they can be helpful as e.g.¬†starter code for stuff you may find yourself working on in the future üèÉ"
  },
  {
    "objectID": "writeups/positron/index.html",
    "href": "writeups/positron/index.html",
    "title": "Connecting to Positron and Accessing Assignments",
    "section": "",
    "text": "For both MacOS and Windows, you can download the latest version of Positron from its homepage. Once you have downloaded and installed it follow these instructions to connect to your JupyterHub space through Positron:\nFirst things first, note that this guide used a brand new installation of MacOS Sequioa 15.6.1 from scratch:\nBut also that, a fresh install of Windows 11 was used separately to test that the steps here work on Windows as well!\nMy hope is that the screenshots generated with this clean installation will therefore better resemble what you see when you first go to connect!"
  },
  {
    "objectID": "writeups/positron/index.html#footnotes",
    "href": "writeups/positron/index.html#footnotes",
    "title": "Connecting to Positron and Accessing Assignments",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nIn class I walked through a more laborious process, where we set up and added an entry into a special config file, but since lots of people are having issues with this approach, here we‚Äôre skipping the config file entirely, and instead just entering the two pieces of information manually into the Command Palette‚Ü©Ô∏é\nYou can also check the ‚ÄúTrust the authors of all files in the parent folder‚Äù checkbox, if you‚Äôd like, though it‚Äôs irrelevant since we won‚Äôt be loading or executing any files from that parent folder.‚Ü©Ô∏é"
  },
  {
    "objectID": "writeups/index.html",
    "href": "writeups/index.html",
    "title": "Extra Writeups",
    "section": "",
    "text": "Order By\n      Default\n      \n        Last Updated - Oldest\n      \n      \n        Last Updated - Newest\n      \n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\n\nLast Updated\n\n\n\nCategory\n\n\n\n\n\n\n\n\nPPOL 6805 Week 6 Lab: Interpolating Kurdistan\n\n\nOct 1, 2025\n\n\nLabs\n\n\n\n\n\n\nHW1 Hints\n\n\nSep 19, 2025\n\n\nAssignment Hints\n\n\n\n\n\n\nThings We Put On Maps\n\n\nSep 17, 2025\n\n\nExtra Writeups\n\n\n\n\n\n\nFinding GIS Data\n\n\nSep 17, 2025\n\n\nExtra Writeups\n\n\n\n\n\n\nConnecting to Positron and Accessing Assignments\n\n\nSep 7, 2025\n\n\nExtra Writeups\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Writeups"
    ]
  },
  {
    "objectID": "writeups/data-sources/index.html",
    "href": "writeups/data-sources/index.html",
    "title": "Finding GIS Data",
    "section": "",
    "text": "This collection of ‚Äúcore‚Äù data sources draws heavily on Chapter 6: ‚ÄúR packages to download open spatial data‚Äù, in Moraga (2018), Spatial Statistics for Data Science: Theory and Practice with R"
  },
  {
    "objectID": "writeups/data-sources/index.html#country-boundaries",
    "href": "writeups/data-sources/index.html#country-boundaries",
    "title": "Finding GIS Data",
    "section": "Country Boundaries",
    "text": "Country Boundaries\nKey package: rnaturalearth\n\n\nCode\nlibrary(rnaturalearth)\nlibrary(sf) |&gt; suppressPackageStartupMessages()\nlibrary(ggplot2)\nlibrary(viridis) |&gt; suppressPackageStartupMessages()\nlibrary(patchwork)\nde_national_map &lt;- ne_countries(type = \"countries\", country = \"Germany\", scale = \"medium\", returnclass = \"sf\")\nde_states_map &lt;- rnaturalearth::ne_states(\"Germany\", returnclass = \"sf\")\n(ggplot(de_national_map) + geom_sf()) + (ggplot(de_states_map) + geom_sf())"
  },
  {
    "objectID": "writeups/data-sources/index.html#climate-data",
    "href": "writeups/data-sources/index.html#climate-data",
    "title": "Finding GIS Data",
    "section": "Climate Data",
    "text": "Climate Data\nKey package: geodata\n\n\nCode\nlibrary(geodata)\n\n\nLoading required package: terra\n\n\nterra 1.8.60\n\n\n\nAttaching package: 'terra'\n\n\nThe following object is masked from 'package:patchwork':\n\n    area\n\n\nCode\njamaica_tmin &lt;- worldclim_country(\n  country = \"Jamaica\",\n  var = \"tmin\",\n  path = tempdir()\n)\nterra::plot(\n  mean(jamaica_tmin),\n  plg = list(title = \"Min. temperature (C)\")\n)"
  },
  {
    "objectID": "writeups/data-sources/index.html#elevation",
    "href": "writeups/data-sources/index.html#elevation",
    "title": "Finding GIS Data",
    "section": "Elevation",
    "text": "Elevation\nKey packages: rnaturalearth + elevatr\n\n\nCode\nlibrary(rnaturalearth)\nlibrary(elevatr)\n\n\nelevatr v0.99.0 NOTE: Version 0.99.0 of 'elevatr' uses 'sf' and 'terra'.  Use \nof the 'sp', 'raster', and underlying 'rgdal' packages by 'elevatr' is being \ndeprecated; however, get_elev_raster continues to return a RasterLayer.  This \nwill be dropped in future versions, so please plan accordingly.\n\n\nCode\nlibrary(terra)\nswitz_sf &lt;- ne_countries(\n  type = \"countries\",\n  country = \"Switzerland\",\n  scale = \"medium\",\n  returnclass = \"sf\"\n)\n# Special weird case with Georgetown's SaxaNet wifi... This if statement just\n# tells the R library curl that SaxaNet is indeed a valid wifi connection\nif (!curl::has_internet()) {\n  assign(\"has_internet_via_proxy\", TRUE, environment(curl::has_internet))\n}\nswitz_raster &lt;- get_elev_raster(\n  locations = switz_sf, z = 9, clip = \"locations\"\n)\n\n\nMosaicing & Projecting\n\n\nClipping DEM to locations\n\n\nNote: Elevation units are in meters.\n\n\nCode\nterra::plot(\n  rast(switz_raster),\n  plg = list(title = \"Elevation (m)\")\n)"
  },
  {
    "objectID": "writeups/data-sources/index.html#street-maps",
    "href": "writeups/data-sources/index.html#street-maps",
    "title": "Finding GIS Data",
    "section": "Street Maps",
    "text": "Street Maps\nKey package: osmdata\n\n\nCode\nlibrary(osmdata) |&gt; suppressPackageStartupMessages()\nlibrary(leaflet)\nplacebb &lt;- getbb(\"Barcelona\")\nhospitals &lt;- placebb |&gt;\n  opq() |&gt;\n  add_osm_feature(key = \"amenity\", value = \"hospital\") |&gt;\n  osmdata_sf()\nassign(\"has_internet_via_proxy\", TRUE, environment(curl::has_internet))\nmotorways &lt;- placebb |&gt;\n  opq() |&gt;\n  add_osm_feature(\n    key = \"highway\",\n    value = \"motorway\"\n  ) |&gt;\n  osmdata_sf()\nleaflet() |&gt;\n  addTiles() |&gt;\n  addPolylines(\n    data = motorways$osm_lines,\n    color = \"black\"\n  ) |&gt;\n  addPolygons(\n    data = hospitals$osm_polygons,\n    label = hospitals$osm_polygons$name\n  )"
  },
  {
    "objectID": "writeups/data-sources/index.html#world-bank-dataverse",
    "href": "writeups/data-sources/index.html#world-bank-dataverse",
    "title": "Finding GIS Data",
    "section": "World Bank Dataverse",
    "text": "World Bank Dataverse\nKey package: wbstats\n\n\nCode\nlibrary(wbstats)\nd &lt;- wb_data(\n  indicator = \"MO.INDEX.HDEV.XQ\",\n  start_date = 2011, end_date = 2011\n)\nlibrary(rnaturalearth)\nlibrary(mapview)\nmap &lt;- ne_countries(\n  continent = \"Africa\", returnclass = \"sf\"\n)\nmap &lt;- dplyr::left_join(\n  map, d, by = c(\"iso_a3\" = \"iso3c\")\n)\nmapview(map, zcol = \"MO.INDEX.HDEV.XQ\")"
  },
  {
    "objectID": "writeups/data-sources/index.html#additional-data-sources-raindrop.io-bookmarks",
    "href": "writeups/data-sources/index.html#additional-data-sources-raindrop.io-bookmarks",
    "title": "Finding GIS Data",
    "section": "Additional Data Sources (Raindrop.io Bookmarks)",
    "text": "Additional Data Sources (Raindrop.io Bookmarks)"
  },
  {
    "objectID": "writeups/interpolation/index.html",
    "href": "writeups/interpolation/index.html",
    "title": "PPOL 6805 Week 6 Lab: Interpolating Kurdistan",
    "section": "",
    "text": "First, check out this amazing ESRI StoryMap, which we‚Äôll cite as Hanson and Hinsdale (2023). If you‚Äôre interested, you can read a bunch more about the modern history of the Kurds in McDowall (2021).\nFor the sake of this assignment, though, we‚Äôll focus in on the following 1946 map, which Jeff will give the fuller details of (condensing McDowall (2021) into less than 5 minutes, hopefully!) in class:"
  },
  {
    "objectID": "writeups/interpolation/index.html#historical-kurdistan-geoms-from-esri",
    "href": "writeups/interpolation/index.html#historical-kurdistan-geoms-from-esri",
    "title": "PPOL 6805 Week 6 Lab: Interpolating Kurdistan",
    "section": "",
    "text": "First, check out this amazing ESRI StoryMap, which we‚Äôll cite as Hanson and Hinsdale (2023). If you‚Äôre interested, you can read a bunch more about the modern history of the Kurds in McDowall (2021).\nFor the sake of this assignment, though, we‚Äôll focus in on the following 1946 map, which Jeff will give the fuller details of (condensing McDowall (2021) into less than 5 minutes, hopefully!) in class:"
  },
  {
    "objectID": "writeups/interpolation/index.html#from-esri-storymaps-to-sf-objects",
    "href": "writeups/interpolation/index.html#from-esri-storymaps-to-sf-objects",
    "title": "PPOL 6805 Week 6 Lab: Interpolating Kurdistan",
    "section": "From ESRI StoryMaps to sf Objects",
    "text": "From ESRI StoryMaps to sf Objects\nDigging into the code using Developer Tools reveals the magical API endpoint: https://services.arcgis.com/3xOwF6p0r7IHIjfn/arcgis/rest/services/Kurdistan1947Boundaries\nWe could wrestle with ESRI‚Äôs API, but, there‚Äôs an even more fun way, which I learned about via this blog post. Reading that will lead you on to the pyesridump library, which I use within Python to download the layers of that StoryMap as .geojson files.\nThe remainder of the lab uses these files, along with rnaturalearth!"
  },
  {
    "objectID": "writeups/interpolation/index.html#now-modern-border-geoms",
    "href": "writeups/interpolation/index.html#now-modern-border-geoms",
    "title": "PPOL 6805 Week 6 Lab: Interpolating Kurdistan",
    "section": "Now Modern Border Geoms",
    "text": "Now Modern Border Geoms\n\nlibrary(tidyverse) |&gt; suppressPackageStartupMessages()\nlibrary(sf) |&gt; suppressPackageStartupMessages()\nlibrary(rnaturalearth) |&gt; suppressPackageStartupMessages()\nlibrary(mapview) |&gt; suppressPackageStartupMessages()\n\n\ncountry_list &lt;- c(\n  \"Turkey\",\n  \"Iran\",\n  \"Iraq\",\n  \"Syria\"\n)\ncountries_sf &lt;- rnaturalearth::ne_countries(\n  scale=50,\n  type=\"countries\",\n  country=country_list\n)\n\nFrom among allll the variables in countries_sf, we‚Äôre only going to need geounit!\n\ncountries_sf &lt;- countries_sf |&gt;\n  select(geounit)\n\n\ncountries_map &lt;- mapview(\n  countries_sf,\n  zcol='geounit'\n)\ncountries_map\n\n\n\n\n\nAnd now the 1946 .geojson file, from the ESRI StoryMap, as discussed above!\n\nprint(getwd())\n\n[1] \"/Users/jpj/gtown-local/ppol6805/writeups/interpolation\"\n\nkrd_sf &lt;- sf::st_read(\"data/krd_46.geojson\") |&gt;\n  mutate(label=\"Kurdistan 1946\")\n\nReading layer `krd_46' from data source \n  `/Users/jpj/gtown-local/ppol6805/writeups/interpolation/data/krd_46.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1 feature and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 36.25249 ymin: 31.58789 xmax: 50.9462 ymax: 40.05815\nGeodetic CRS:  WGS 84\n\n\n\nkrd_map &lt;- mapview(krd_sf, zcol='label')\nkrd_map\n\n\n\n\n\n\ncountries_map + krd_map"
  },
  {
    "objectID": "writeups/interpolation/index.html#first-splitting-krd",
    "href": "writeups/interpolation/index.html#first-splitting-krd",
    "title": "PPOL 6805 Week 6 Lab: Interpolating Kurdistan",
    "section": "First: Splitting KRD",
    "text": "First: Splitting KRD\nIntersects as the default predicate‚Ä¶ not very helpful here!\n\ndefault_sf &lt;- countries_sf[krd_sf,]\nmapview(default_sf)\n\n\n\n\n\nBut, intersection, via st_intersection(), does give us what we want!\n\ninter_sf &lt;- st_intersection(countries_sf, krd_sf)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\nmapview(inter_sf)"
  },
  {
    "objectID": "writeups/interpolation/index.html#new-name-column",
    "href": "writeups/interpolation/index.html#new-name-column",
    "title": "PPOL 6805 Week 6 Lab: Interpolating Kurdistan",
    "section": "New Name Column",
    "text": "New Name Column\n\ninter_sf &lt;- inter_sf |&gt; mutate(\n  krd_name = paste0(geounit, \" Kurdistan\")\n)\n\nNow let‚Äôs view the four rows of the sf object individually:\n\nmapview(inter_sf[1,], zcol='krd_name')\n\n\n\n\n\n\nmapview(inter_sf[2,], zcol='krd_name')\n\n\n\n\n\n\nmapview(inter_sf[3,], zcol='krd_name')\n\n\n\n\n\n\nmapview(inter_sf[4,], zcol='krd_name')"
  },
  {
    "objectID": "writeups/interpolation/index.html#and-all-at-once",
    "href": "writeups/interpolation/index.html#and-all-at-once",
    "title": "PPOL 6805 Week 6 Lab: Interpolating Kurdistan",
    "section": "‚Ä¶And All at Once",
    "text": "‚Ä¶And All at Once\n\nmapview(inter_sf, zcol='krd_name')\n\n\n\n\n\nVery cool, but, we haven‚Äôt taken population into account at all, which was the whole point of this exercise‚Ä¶ spatial join / interpolation time!"
  },
  {
    "objectID": "writeups/interpolation/index.html#spatial-join-interpolation",
    "href": "writeups/interpolation/index.html#spatial-join-interpolation",
    "title": "PPOL 6805 Week 6 Lab: Interpolating Kurdistan",
    "section": "Spatial Join / Interpolation",
    "text": "Spatial Join / Interpolation\nAgain drawing on McDowall (2021) (this table is on page 4), we can estimate that the overall population across the four modern countries is approximately 32 million:\n\n\n\nCountry\n% of Country\nCount\n\n\n\n\nTurkey\n18\n15 million\n\n\nIran\n10\n8 million\n\n\nIraq\n18\n7.2 million\n\n\nSyria\n9\n1.8 million\n\n\nDiaspora and Caucasus\n-\n2 million\n\n\nTotal\n-\n34 million\n\n\n\nSo, given this estimate, we can now ‚Äústart over‚Äù, this time with the goal of keeping track of the population as we do our operations:\n\nfmt_pop &lt;- function(x) formatC(x,big.mark=\",\",format='d')\nkrd_sf &lt;- krd_sf |&gt; mutate(\n  pop = 32000000,\n  pop_str = fmt_pop(pop)\n)\nmapview(krd_sf, zcol='pop_str')\n\n\n\n\n\nNow, if we just use st_intersection()‚Ä¶ it doesn‚Äôt know that it should pay attention to pop (even if it did know that, it wouldn‚Äôt know exactly how you want to split it up‚Ä¶ we‚Äôll get there)\n\npop_intersected_sf &lt;- st_intersection(countries_sf, krd_sf) |&gt;\n  mutate(\n    pop_str = fmt_pop(pop),\n    map_label = paste0(geounit, ' ', pop_str)\n  )\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\nmapview(pop_intersected_sf, zcol='pop', label='map_label')\n\n\n\n\n\nSo‚Ä¶ what do we do? The binary operations we‚Äôve learned so far won‚Äôt cut it, sadly.\nSo, we need to cap off the binary operations portion of the class with the fanciest operation we‚Äôll need: spatial joins, though more specifically we‚Äôll want an interpolation. The function in sf is called st_interpolate_aw().\nLet‚Äôs add that to our toolkit and get to spatial statistics/data science!\n\npop_interpolated_sf &lt;- st_interpolate_aw(\n  krd_sf['pop'],\n  countries_sf,\n  extensive=TRUE\n)\n\nWarning in st_interpolate_aw.sf(krd_sf[\"pop\"], countries_sf, extensive = TRUE):\nst_interpolate_aw assumes attributes are constant or uniform over areas of x\n\npop_interpolated_sf\n\n\n\n\n\npop\ngeometry\n\n\n\n\n13967353\nMULTIPOLYGON (((25.97002 40‚Ä¶\n\n\n749878\nMULTIPOLYGON (((35.89268 35‚Ä¶\n\n\n5987342\nMULTIPOLYGON (((42.35898 37‚Ä¶\n\n\n11295426\nMULTIPOLYGON (((56.18799 26‚Ä¶\n\n\n\n\n\n\nAnd let‚Äôs visualize it!\n\npop_interpolated_sf &lt;- pop_interpolated_sf |&gt; mutate(\n  pop_rounded = round(pop, 0),\n  pop_str = fmt_pop(pop_rounded)\n)\nmapview(pop_interpolated_sf, zcol='pop', label='pop_str')\n\n\n\n\n\nCool, this tells us, if we didn‚Äôt create a Kurdistan, and just drew the borders of the four states (hypothetically‚Ä¶‚Ä¶.), how many Kurds would be in each country (again, assuming uniform distribution across 1947 Kurdistan!)\n\npop_interpolated_sf\n\n\n\n\n\npop\ngeometry\npop_rounded\npop_str\n\n\n\n\n13967353\nMULTIPOLYGON (((25.97002 40‚Ä¶\n13967353\n13,967,353\n\n\n749878\nMULTIPOLYGON (((35.89268 35‚Ä¶\n749878\n749,878\n\n\n5987342\nMULTIPOLYGON (((42.35898 37‚Ä¶\n5987342\n5,987,342\n\n\n11295426\nMULTIPOLYGON (((56.18799 26‚Ä¶\n11295426\n11,295,426\n\n\n\n\n\npop_interpolated_sf$pop |&gt; sum() |&gt; fmt_pop()\n\n[1] \"32,000,000\""
  },
  {
    "objectID": "writeups/interpolation/index.html#now-interpolating-over-the-intersection",
    "href": "writeups/interpolation/index.html#now-interpolating-over-the-intersection",
    "title": "PPOL 6805 Week 6 Lab: Interpolating Kurdistan",
    "section": "Now Interpolating Over the Intersection",
    "text": "Now Interpolating Over the Intersection\nI think of the above as kind of a‚Ä¶ ‚Äúpartially-spatially-aware‚Äù interpolation. This isn‚Äôt a great description, but, what I‚Äôm getting at is the fact that:\n\nIt does successfully compute how our population (of 1947 Kurdistan) proportionally distributes across the four national borders, but\nIt then represents the output, geometrically (as in, the geometry column), as just the original four countries, now with an additional non-spatial property: the Kurdish population in that country\n\nSo, for what I‚Äôll call a ‚Äúfully-spatially-aware‚Äù interpolation, we‚Äôll combine the two things we figured out above:\n\nSpatial intersection between 1947 Kurdistan and the four countries (producing Turkish, Iranian, Syrian, and Iraqi Kurdistan), plus\nThe areal-weighted interpolation we just did above\n\nAnd it turns out, all that we really need to change is which sf object we‚Äôre spatially interpolating across! Meaning, this is the above code, copied-and-pasted, with countries_sf now replaced by inter_sf:\n\nfully_joined_sf &lt;- st_interpolate_aw(\n  krd_sf['pop'],\n  inter_sf,\n  extensive=TRUE\n)\n\nWarning in st_interpolate_aw.sf(krd_sf[\"pop\"], inter_sf, extensive = TRUE):\nst_interpolate_aw assumes attributes are constant or uniform over areas of x\n\nmapview(fully_joined_sf)\n\n\n\n\n\nAlso take note of something here: how did mapview ‚Äúknow‚Äù to color the four regions by population (using the viridis scheme, the default in mapview!), when we didn‚Äôt specify anything for the zcol argument?\nThis happens because, st_interpolate_aw() is solely dedicated to computing a single piece of information: the population that results from distributing the first argument (numeric) across the second argument (an sf, with a geometry column)! It‚Äôs technically not intended to carry out a full-on join.\nSo, if you find yourself needing to keep all the other information along with the new areal-weighted population (which will usually be the case), just make sure you add the new areal-weighted population column in fully_joined_sf back into the sf object you passed as the second argument to st_interpolate_aw(), as a new column:\n\ninter_sf &lt;- inter_sf |&gt; mutate(\n  interpolated_pop = fully_joined_sf$pop\n)\ninter_sf\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngeounit\nOBJECTID\narea\nShape__Area\nShape__Length\nlabel\ngeometry\nkrd_name\ninterpolated_pop\n\n\n\n\n37\nTurkey\n1\n41360557\n413605942351\n4362384\nKurdistan 1946\nMULTIPOLYGON (((37.746 39.1‚Ä¶\nTurkey Kurdistan\n13967353\n\n\n47\nSyria\n1\n41360557\n413605942351\n4362384\nKurdistan 1946\nMULTIPOLYGON (((41.81781 36‚Ä¶\nSyria Kurdistan\n749878\n\n\n142\nIraq\n1\n41360557\n413605942351\n4362384\nKurdistan 1946\nMULTIPOLYGON (((46.56862 32‚Ä¶\nIraq Kurdistan\n5987342\n\n\n143\nIran\n1\n41360557\n413605942351\n4362384\nKurdistan 1946\nMULTIPOLYGON (((44.54024 39‚Ä¶\nIran Kurdistan\n11295426\n\n\n\n\n\n\nAnd now we can use all the other info, like the name, for the rest of our analysis! For example, when making an interactive map!\n\ninter_sf &lt;- inter_sf |&gt; mutate(\n  krd_name = paste0(geounit, ' Kurdistan'),\n  pop_str = fmt_pop(interpolated_pop),\n  krd_label = paste0(krd_name, ': ', pop_str)\n)\nmapview(inter_sf, zcol='interpolated_pop', label='krd_label')"
  },
  {
    "objectID": "w10/index.html",
    "href": "w10/index.html",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#aggregating-point-processes",
    "href": "w10/index.html#aggregating-point-processes",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Aggregating Point Processes",
    "text": "Aggregating Point Processes\n\nRecall the two ‚Äústages‚Äù of our Poisson-based point processes\n\nA Poisson-distributed number of points, then\nUniformly-distributed coordinates for each point\n\nOne way to see areal data modeling: we keep the Poisson part, but we no longer observe the coordinates for the points!\nSo‚Ä¶ why is it still helpful for you to have sat through those lectures on Point Processes? Two reasons‚Ä¶",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#areal-patterns-aggregated-point-patterns",
    "href": "w10/index.html#areal-patterns-aggregated-point-patterns",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "(1) Areal Patterns = Aggregated Point Patterns",
    "text": "(1) Areal Patterns = Aggregated Point Patterns\n\nOne application, mentioned last week: areal-weighted interpolation using actual models of how the points are distributed within the area!\n\nRegularly-spaced points is rarely a good ‚Äúdefault‚Äù model!\nHumans, for example, rarely live at perfect evenly-spaced intervals‚Ä¶ they form households, villages, cities\nRegularly-spaced points (we now know) \\(\\implies\\) negative autocorrelation \\(\\implies\\) typically due to inhibition process (competition)",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#spatial-scan-statistics",
    "href": "w10/index.html#spatial-scan-statistics",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "(2) Spatial Scan Statistics",
    "text": "(2) Spatial Scan Statistics\n\nAreal regions often the result of artificial / ‚Äúarbitrary‚Äù human divisions\n\n(Particulate matter doesn‚Äôt pass through customs)\n\n\\(\\implies\\) If we care about processes which don‚Äôt ‚Äúadhere to‚Äù borders (like disease spread), we want to ‚Äúscan‚Äù buffers around points regardless of areal borders",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#hierarchical-bayesian-smoothing",
    "href": "w10/index.html#hierarchical-bayesian-smoothing",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "(3) Hierarchical Bayesian Smoothing",
    "text": "(3) Hierarchical Bayesian Smoothing\n\nThe issue might just be not enough data for some areas, while we have an abundance of data in nearby areas‚Ä¶\n\n\n\n\nFrom Kramer (2023), Spatial Epidemiology",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#reminder-weight-matrix-defines-neighbors",
    "href": "w10/index.html#reminder-weight-matrix-defines-neighbors",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Reminder: Weight Matrix Defines ‚ÄúNeighbors‚Äù",
    "text": "Reminder: Weight Matrix Defines ‚ÄúNeighbors‚Äù\n\n\n\nFrom Canadian Rockies Exploration Guide",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#choices-available-in-spdep",
    "href": "w10/index.html#choices-available-in-spdep",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Choices Available in spdep",
    "text": "Choices Available in spdep\n\n\\(w_{ij} = 1\\) if \\(i\\) and \\(j\\) ‚Äúoverlap‚Äù\n\nRook: Overlap is 1 or 2-dimensional\nQueen: Overlap is 0, 1, or 2-dimensional\n\n\\(w_{ij} = \\frac{1}{\\text{dist}(i, j)}\\)\n\\(w_{ij} = 1\\) if \\(dist(i, j) &lt; \\overline{D}\\)\n\\(w_{ij} = 1\\) for \\(K\\) nearest neighbors",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#morans-i-one-more-time",
    "href": "w10/index.html#morans-i-one-more-time",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Moran‚Äôs \\(I\\) One More Time",
    "text": "Moran‚Äôs \\(I\\) One More Time\n\nRound 1 (Week 6): Moran‚Äôs \\(I\\) as ‚Äúthermometer‚Äù\nRound 2 (Today): Could an \\(I\\) value this extreme occur due to random noise?",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#example-bolshevik-revolution-rightarrow-bipolar-world",
    "href": "w10/index.html#example-bolshevik-revolution-rightarrow-bipolar-world",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Example: Bolshevik Revolution \\(\\rightarrow\\) ‚ÄúBipolar‚Äù World",
    "text": "Example: Bolshevik Revolution \\(\\rightarrow\\) ‚ÄúBipolar‚Äù World\n\n\n\n\n\n\nNull hypothesis: no spatial effect of democratization/de-democratization on neighboring countries\nIf null hypothesis is true, and countries democratize/de-democratize independently‚Ä¶ could this pattern still arise?",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#motivation-when-does-non-spatial-regression-work",
    "href": "w10/index.html#motivation-when-does-non-spatial-regression-work",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Motivation: When Does Non-Spatial Regression ‚ÄúWork‚Äù?",
    "text": "Motivation: When Does Non-Spatial Regression ‚ÄúWork‚Äù?\n\\[\nY_i = \\beta_0 + \\beta_1X_{i,1} + \\beta_2X_{i,2} + \\cdots + \\beta_MX_{i,M} + \\varepsilon_i\n\\]\n\nImportance of OLS regression: can give us the Best Linear Unbiased Estimator (BLUE)\nThis is only true if the Gauss-Markov assumptions hold‚Äîone of these is that the error terms are uncorrelated:\n\\[\n\\text{Cov}[\\varepsilon_i, \\varepsilon_j] = 0 \\; \\forall i \\neq j\n\\]",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#spatial-autocorrelation-in-residuals",
    "href": "w10/index.html#spatial-autocorrelation-in-residuals",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Spatial Autocorrelation in Residuals",
    "text": "Spatial Autocorrelation in Residuals\n\nWe have now seen several models / datasets where effect of some variable \\(X\\) (say, population) on another variable \\(Y\\) (say, disease count) is spatial! (Kind of the whole point of the class üòú)\nSo, to see when OLS will ‚Äúwork‚Äù, vs.¬†when you need to incorporate GIS, key step is plotting the spatial distribution of regression residuals!",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#example-italian-elections",
    "href": "w10/index.html#example-italian-elections",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Example: Italian Elections",
    "text": "Example: Italian Elections\n\n\n\n\n\nWard and Gleditsch (2018), Figure 2.3\n\n\n\n\n\n\nWard and Gleditsch (2018), Figure 2.4",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#will-ols-work-here",
    "href": "w10/index.html#will-ols-work-here",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Will OLS ‚ÄúWork‚Äù Here?",
    "text": "Will OLS ‚ÄúWork‚Äù Here?\n\nCan we use OLS to derive the BLUE of the effect of GDP on voting?\n\n\n\n\nPlain OLS\n\n\n\n\n\\(N = 477\\)\n\\(\\widehat{\\beta}\\)\nSE\n\\(t\\)\n\n\n\n\nIntercept\n35.30\n2.21\n15.96\n\n\nLog GDP per cap\n13.46\n0.65\n20.84\n\n\n\nMoran‚Äôs \\(I\\) for residuals = 0.47(!)\n\n¬†\n\n\nSpatial Regression\n\n\n\n\n\\(N = 477\\)\n\\(\\widehat{\\beta}\\)\nSE\n\\(t\\)\n\n\n\n\nIntercept\n4.70\n1.66\n2.80\n\n\nLog GDP per cap\n1.77\n0.48\n3.66\n\n\n\\(\\rho\\)\n0.87\n0.02\n36.7",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#what-does-it-mean-that-spatial-effect-is-significant",
    "href": "w10/index.html#what-does-it-mean-that-spatial-effect-is-significant",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "What Does it Mean that ‚ÄúSpatial Effect‚Äù is Significant?",
    "text": "What Does it Mean that ‚ÄúSpatial Effect‚Äù is Significant?\n\n\n\nWard and Gleditsch (2018), Figure 2.5",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#case-1-no-residual-spatial-autocorrelation",
    "href": "w10/index.html#case-1-no-residual-spatial-autocorrelation",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Case 1: No Residual Spatial Autocorrelation",
    "text": "Case 1: No Residual Spatial Autocorrelation\n\nExample: Residuals have Moran‚Äôs \\(I\\) near 0‚Ä¶\n‚Ä¶Don‚Äôt need GIS at all!",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#case-2-conditional-autoregressive-model-car",
    "href": "w10/index.html#case-2-conditional-autoregressive-model-car",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Case 2: Conditional Autoregressive Model (CAR)",
    "text": "Case 2: Conditional Autoregressive Model (CAR)\n\nGIS, but‚Ä¶ only for ‚Äúfixing‚Äù your regression\n\n\\[\nY_i = \\underbrace{\\mu_i}_{\\text{Non-spatial model}} + \\underbrace{\\frac{1}{w_{i,cdot}}\\sum_{j \\neq i}(Y_j - \\mu_j)}_{\\text{Spatial Autocorrelation}} + \\varepsilon_i\n\\]",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#case-3-simultaneous-autoregressive-model-sar",
    "href": "w10/index.html#case-3-simultaneous-autoregressive-model-sar",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Case 3: Simultaneous Autoregressive Model (SAR)",
    "text": "Case 3: Simultaneous Autoregressive Model (SAR)\n\nThe main event! Here we are explicitly modeling ‚Äúspatially lagged‚Äù versions of our dependent variable \\(Y\\)!\n\n\\[\nY = \\mathbf{X}\\beta + \\rho \\underbrace{\\mathbf{W}Y}_{\\mathclap{\\text{Spatially-lagged }Y}} + \\boldsymbol\\varepsilon\n\\]",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/index.html#references",
    "href": "w10/index.html#references",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "References",
    "text": "References\n\n\nWard, Michael D., and Kristian Skrede Gleditsch. 2018. Spatial Regression Models. SAGE Publications.",
    "crumbs": [
      "Week 10: Oct 29"
    ]
  },
  {
    "objectID": "w10/slides.html#aggregating-point-processes",
    "href": "w10/slides.html#aggregating-point-processes",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Aggregating Point Processes",
    "text": "Aggregating Point Processes\n\nRecall the two ‚Äústages‚Äù of our Poisson-based point processes\n\nA Poisson-distributed number of points, then\nUniformly-distributed coordinates for each point\n\nOne way to see areal data modeling: we keep the Poisson part, but we no longer observe the coordinates for the points!\nSo‚Ä¶ why is it still helpful for you to have sat through those lectures on Point Processes? Two reasons‚Ä¶"
  },
  {
    "objectID": "w10/slides.html#areal-patterns-aggregated-point-patterns",
    "href": "w10/slides.html#areal-patterns-aggregated-point-patterns",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "(1) Areal Patterns = Aggregated Point Patterns",
    "text": "(1) Areal Patterns = Aggregated Point Patterns\n\nOne application, mentioned last week: areal-weighted interpolation using actual models of how the points are distributed within the area!\n\nRegularly-spaced points is rarely a good ‚Äúdefault‚Äù model!\nHumans, for example, rarely live at perfect evenly-spaced intervals‚Ä¶ they form households, villages, cities\nRegularly-spaced points (we now know) \\(\\implies\\) negative autocorrelation \\(\\implies\\) typically due to inhibition process (competition)"
  },
  {
    "objectID": "w10/slides.html#spatial-scan-statistics",
    "href": "w10/slides.html#spatial-scan-statistics",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "(2) Spatial Scan Statistics",
    "text": "(2) Spatial Scan Statistics\n\nAreal regions often the result of artificial / ‚Äúarbitrary‚Äù human divisions\n\n(Particulate matter doesn‚Äôt pass through customs)\n\n\\(\\implies\\) If we care about processes which don‚Äôt ‚Äúadhere to‚Äù borders (like disease spread), we want to ‚Äúscan‚Äù buffers around points regardless of areal borders"
  },
  {
    "objectID": "w10/slides.html#hierarchical-bayesian-smoothing",
    "href": "w10/slides.html#hierarchical-bayesian-smoothing",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "(3) Hierarchical Bayesian Smoothing",
    "text": "(3) Hierarchical Bayesian Smoothing\n\nThe issue might just be not enough data for some areas, while we have an abundance of data in nearby areas‚Ä¶\n\n\nFrom Kramer (2023), Spatial Epidemiology"
  },
  {
    "objectID": "w10/slides.html#reminder-weight-matrix-defines-neighbors",
    "href": "w10/slides.html#reminder-weight-matrix-defines-neighbors",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Reminder: Weight Matrix Defines ‚ÄúNeighbors‚Äù",
    "text": "Reminder: Weight Matrix Defines ‚ÄúNeighbors‚Äù\n\nFrom Canadian Rockies Exploration Guide"
  },
  {
    "objectID": "w10/slides.html#choices-available-in-spdep",
    "href": "w10/slides.html#choices-available-in-spdep",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Choices Available in spdep",
    "text": "Choices Available in spdep\n\n\\(w_{ij} = 1\\) if \\(i\\) and \\(j\\) ‚Äúoverlap‚Äù\n\nRook: Overlap is 1 or 2-dimensional\nQueen: Overlap is 0, 1, or 2-dimensional\n\n\\(w_{ij} = \\frac{1}{\\text{dist}(i, j)}\\)\n\\(w_{ij} = 1\\) if \\(dist(i, j) &lt; \\overline{D}\\)\n\\(w_{ij} = 1\\) for \\(K\\) nearest neighbors"
  },
  {
    "objectID": "w10/slides.html#morans-i-one-more-time",
    "href": "w10/slides.html#morans-i-one-more-time",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Moran‚Äôs \\(I\\) One More Time",
    "text": "Moran‚Äôs \\(I\\) One More Time\n\nRound 1 (Week 6): Moran‚Äôs \\(I\\) as ‚Äúthermometer‚Äù\nRound 2 (Today): Could an \\(I\\) value this extreme occur due to random noise?"
  },
  {
    "objectID": "w10/slides.html#example-bolshevik-revolution-rightarrow-bipolar-world",
    "href": "w10/slides.html#example-bolshevik-revolution-rightarrow-bipolar-world",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Example: Bolshevik Revolution \\(\\rightarrow\\) ‚ÄúBipolar‚Äù World",
    "text": "Example: Bolshevik Revolution \\(\\rightarrow\\) ‚ÄúBipolar‚Äù World\n\n\nNull hypothesis: no spatial effect of democratization/de-democratization on neighboring countries\nIf null hypothesis is true, and countries democratize/de-democratize independently‚Ä¶ could this pattern still arise?"
  },
  {
    "objectID": "w10/slides.html#motivation-when-does-non-spatial-regression-work",
    "href": "w10/slides.html#motivation-when-does-non-spatial-regression-work",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Motivation: When Does Non-Spatial Regression ‚ÄúWork‚Äù?",
    "text": "Motivation: When Does Non-Spatial Regression ‚ÄúWork‚Äù?\n\\[\nY_i = \\beta_0 + \\beta_1X_{i,1} + \\beta_2X_{i,2} + \\cdots + \\beta_MX_{i,M} + \\varepsilon_i\n\\]\n\nImportance of OLS regression: can give us the Best Linear Unbiased Estimator (BLUE)\nThis is only true if the Gauss-Markov assumptions hold‚Äîone of these is that the error terms are uncorrelated:\n\\[\n\\text{Cov}[\\varepsilon_i, \\varepsilon_j] = 0 \\; \\forall i \\neq j\n\\]"
  },
  {
    "objectID": "w10/slides.html#spatial-autocorrelation-in-residuals",
    "href": "w10/slides.html#spatial-autocorrelation-in-residuals",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Spatial Autocorrelation in Residuals",
    "text": "Spatial Autocorrelation in Residuals\n\nWe have now seen several models / datasets where effect of some variable \\(X\\) (say, population) on another variable \\(Y\\) (say, disease count) is spatial! (Kind of the whole point of the class üòú)\nSo, to see when OLS will ‚Äúwork‚Äù, vs.¬†when you need to incorporate GIS, key step is plotting the spatial distribution of regression residuals!"
  },
  {
    "objectID": "w10/slides.html#example-italian-elections",
    "href": "w10/slides.html#example-italian-elections",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Example: Italian Elections",
    "text": "Example: Italian Elections\n\n\n\n\n\nWard and Gleditsch (2018), Figure 2.3\n\n\n\n\n\n\nWard and Gleditsch (2018), Figure 2.4"
  },
  {
    "objectID": "w10/slides.html#will-ols-work-here",
    "href": "w10/slides.html#will-ols-work-here",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Will OLS ‚ÄúWork‚Äù Here?",
    "text": "Will OLS ‚ÄúWork‚Äù Here?\n\nCan we use OLS to derive the BLUE of the effect of GDP on voting?\n\n\n\n\nPlain OLS\n\n\n\n\n\\(N = 477\\)\n\\(\\widehat{\\beta}\\)\nSE\n\\(t\\)\n\n\n\n\nIntercept\n35.30\n2.21\n15.96\n\n\nLog GDP per cap\n13.46\n0.65\n20.84\n\n\n\nMoran‚Äôs \\(I\\) for residuals = 0.47(!)\n\n¬†\n\n\nSpatial Regression\n\n\n\n\n\\(N = 477\\)\n\\(\\widehat{\\beta}\\)\nSE\n\\(t\\)\n\n\n\n\nIntercept\n4.70\n1.66\n2.80\n\n\nLog GDP per cap\n1.77\n0.48\n3.66\n\n\n\\(\\rho\\)\n0.87\n0.02\n36.7"
  },
  {
    "objectID": "w10/slides.html#what-does-it-mean-that-spatial-effect-is-significant",
    "href": "w10/slides.html#what-does-it-mean-that-spatial-effect-is-significant",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "What Does it Mean that ‚ÄúSpatial Effect‚Äù is Significant?",
    "text": "What Does it Mean that ‚ÄúSpatial Effect‚Äù is Significant?\n\nWard and Gleditsch (2018), Figure 2.5"
  },
  {
    "objectID": "w10/slides.html#case-1-no-residual-spatial-autocorrelation",
    "href": "w10/slides.html#case-1-no-residual-spatial-autocorrelation",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Case 1: No Residual Spatial Autocorrelation",
    "text": "Case 1: No Residual Spatial Autocorrelation\n\nExample: Residuals have Moran‚Äôs \\(I\\) near 0‚Ä¶\n‚Ä¶Don‚Äôt need GIS at all!"
  },
  {
    "objectID": "w10/slides.html#case-2-conditional-autoregressive-model-car",
    "href": "w10/slides.html#case-2-conditional-autoregressive-model-car",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Case 2: Conditional Autoregressive Model (CAR)",
    "text": "Case 2: Conditional Autoregressive Model (CAR)\n\nGIS, but‚Ä¶ only for ‚Äúfixing‚Äù your regression\n\n\\[\nY_i = \\underbrace{\\mu_i}_{\\text{Non-spatial model}} + \\underbrace{\\frac{1}{w_{i,cdot}}\\sum_{j \\neq i}(Y_j - \\mu_j)}_{\\text{Spatial Autocorrelation}} + \\varepsilon_i\n\\]"
  },
  {
    "objectID": "w10/slides.html#case-3-simultaneous-autoregressive-model-sar",
    "href": "w10/slides.html#case-3-simultaneous-autoregressive-model-sar",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "Case 3: Simultaneous Autoregressive Model (SAR)",
    "text": "Case 3: Simultaneous Autoregressive Model (SAR)\n\nThe main event! Here we are explicitly modeling ‚Äúspatially lagged‚Äù versions of our dependent variable \\(Y\\)!\n\n\\[\nY = \\mathbf{X}\\beta + \\rho \\underbrace{\\mathbf{W}Y}_{\\mathclap{\\text{Spatially-lagged }Y}} + \\boldsymbol\\varepsilon\n\\]"
  },
  {
    "objectID": "w10/slides.html#references",
    "href": "w10/slides.html#references",
    "title": "Week 10: Evaluating Spatial Hypotheses II: Areal Data",
    "section": "References",
    "text": "References\n\n\nWard, Michael D., and Kristian Skrede Gleditsch. 2018. Spatial Regression Models. SAGE Publications."
  },
  {
    "objectID": "w07/index.html",
    "href": "w07/index.html",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 7: Oct 8"
    ]
  },
  {
    "objectID": "w07/index.html#why-na√Øve",
    "href": "w07/index.html#why-na√Øve",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Why ‚ÄúNa√Øve‚Äù?",
    "text": "Why ‚ÄúNa√Øve‚Äù?\n\n[Continuing from last week] Lattice data: easiest way to visualize / operationalize simple measures of clustering via spatial autocorrelation\nSo, we develop intuitions for measures like Moran‚Äôs \\(I\\) by looking at lattice data, but‚Ä¶\nNa√Øve because we‚Äôre not modeling the lattice regions (cells) themselves!\nNon-na√Øve clustering: Knowing the clusters but also what process led to their formation!",
    "crumbs": [
      "Week 7: Oct 8"
    ]
  },
  {
    "objectID": "w07/index.html#spatial-randomness",
    "href": "w07/index.html#spatial-randomness",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Spatial Randomness",
    "text": "Spatial Randomness\n\n\nCode\nlibrary(tidyverse)\nlibrary(spatstat)\nset.seed(6805)\nN &lt;- 60\nr_core &lt;- 0.05\nobs_window &lt;- square(1)\n# Regularity via Inhibition\n#reg_sims &lt;- rMaternI(N, r=r_core, win=obs_window)\ncond_reg_sims &lt;- rSSI(r=r_core, N)\n# CSR data\n#csr_sims &lt;- rpoispp(N, win=obs_window)\ncond_sr_sims &lt;- rpoint(N, win=obs_window)\n### Clustered data\n#clust_sims &lt;- rMatClust(kappa=6, r=2.5*r_core, mu=10, win=obs_window)\n#clust_sims &lt;- rMatClust(mu=5, kappa=1, scale=0.1, win=obs_window, n.cond=N, w.cond=obs_window)\n#clust_sims &lt;- rclusterBKBC(clusters=\"MatClust\", kappa=10, mu=10, scale=0.05, verbose=FALSE)\n# Each cluster consist of 10 points in a disc of radius 0.2\nnclust &lt;- function(x0, y0, radius, n) {\n    #print(n)\n    return(runifdisc(10, radius, centre=c(x0, y0)))\n}\ncond_clust_sims &lt;- rNeymanScott(kappa=5, expand=0.0, rclust=nclust, radius=2*r_core, n=10)\n# And PLOT\nplot_w &lt;- 400\nplot_h &lt;- 400\nplot_scale &lt;- 2.25\ncond_reg_plot &lt;- cond_reg_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme()\nggsave(\"images/cond_reg.png\", cond_reg_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\ncond_sr_plot &lt;- cond_sr_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme()\nggsave(\"images/cond_sr.png\", cond_sr_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\ncond_clust_plot &lt;- cond_clust_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme()\nggsave(\"images/cond_clust.png\", cond_clust_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\n\n\n\n\n\n\n\n\n\n\n\n\n\nAutocorrelation\n\\(I = -1\\)\n‚Üê\n\\(I = 0\\)\n‚Üí\n\\(I = 1\\)\n\n\n\n\nDescription\nNegative Autocorr\n\nNo Autocorr\n\nPositive Autocorr\n\n\nEvent at \\(\\mathbf{s} = (x,y)\\) Implies\nLess likely to find another point nearby\n\nNo information about nearby points\n\nMore likely to find another point nearby\n\n\nResulting Pattern\nRegularity\n\nReg/Clustered Mix\n\nClustering\n\n\nProcess(es) Which Could Produce Pattern\n1st Order: Random within even-spaced grid2nd Order: Competition\n\n1st Order: i.i.d. points2nd Order: i.i.d. distances\n\n1st Order: Tasty food at clust centers2nd Order: Cooperation\n\n\nFixed \\(N\\)\n60\n\n60\n\n60",
    "crumbs": [
      "Week 7: Oct 8"
    ]
  },
  {
    "objectID": "w07/index.html#complete-spatial-randomness-csr",
    "href": "w07/index.html#complete-spatial-randomness-csr",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Complete Spatial Randomness (CSR)",
    "text": "Complete Spatial Randomness (CSR)\n\n\nCode\nlibrary(tidyverse)\nlibrary(spatstat)\nset.seed(6807)\nlambda &lt;- 60\nr_core &lt;- 0.05\nobs_window &lt;- square(1)\n# Regularity via Inhibition\n# Regularity via Inhibition\nreg_sims &lt;- rMaternI(lambda, r=r_core, win=obs_window)\n# CSR data\ncsr_sims &lt;- rpoispp(N, win=obs_window)\n### Clustered data\nclust_mu &lt;- 10\nclust_sims &lt;- rMatClust(kappa=lambda / clust_mu, scale=2*r_core, mu=10, win=obs_window)\n# And PLOT\nplot_w &lt;- 400\nplot_h &lt;- 400\nplot_scale &lt;- 2.25\nreg_plot &lt;- reg_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  labs(title=paste0(\"N = \",reg_sims$n)) +\n  dsan_theme()\nggsave(\"images/reg.png\", reg_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\ncsr_plot &lt;- csr_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  labs(title=paste0(\"N = \",csr_sims$n)) +\n  dsan_theme()\nggsave(\"images/csr.png\", csr_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\nclust_plot &lt;- clust_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  labs(title=paste0(\"N = \",clust_sims$n)) +\n  dsan_theme()\nggsave(\"images/clust.png\", clust_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\n\n\n\n\n\n\n\n\n\n\n\n\n\nAutocorrelation\n\\(I = -1\\)\n‚Üê\n\\(I = 0\\)\n‚Üí\n\\(I = 1\\)\n\n\n\n\nDescription\nNegative Autocorr\n\nNo Autocorr\n\nPositive Autocorr\n\n\nEvent at \\(\\mathbf{s} = (x,y)\\) Implies\nLess likely to find another point nearby\n\nNo information about nearby points\n\nMore likely to find another point nearby\n\n\nResulting Pattern\nRegularity\n\nReg/Clustered Mix\n\nClustering\n\n\nProcess(es) Which Could Produce Pattern\n1st Order: Random within even-spaced grid2nd Order: Competition\n\n1st Order: i.i.d. points2nd Order: i.i.d. distances\n\n1st Order: Tasty food at clust centers2nd Order: Cooperation\n\n\nFixed Intensity \\(\\lambda\\)\n60\n\n60\n\n60\n\n\nRandom \\(N\\)",
    "crumbs": [
      "Week 7: Oct 8"
    ]
  },
  {
    "objectID": "w07/index.html#measures-are-relative-to-window-of-observation",
    "href": "w07/index.html#measures-are-relative-to-window-of-observation",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Measures are Relative to Window of Observation",
    "text": "Measures are Relative to Window of Observation\n\nSame data can be spatially random within one window, clustered or regular in others!\n\n\n\nCode\nN &lt;- 60\nobs_window &lt;- square(1)\nwindow_scale &lt;- 3.5\ncsr_sims_square &lt;- rpoispp(N, win=obs_window)\n# Triangular window\nobs_window_tri &lt;- st_sfc(st_polygon(list(\n    matrix(c(0.3,0.1,0.7,0.1,0.5,0.5,0.3,0.1), byrow=TRUE, nrow=4)\n)))\nobs_window_geom &lt;- st_sfc(st_linestring(\n    matrix(c(0,0,1,0,1,1,0,1,0,0), byrow=TRUE, nrow=5)\n))\ncsr_sims_tri &lt;- ppp(csr_sims_square$x, csr_sims_square$y, window=as.owin(obs_window_tri))\ntri_plot &lt;- csr_sims_tri |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme(\"quarter\");\nggsave(\"images/window_tri.png\", tri_plot, width=plot_w, height=plot_h, units=\"px\", scale=window_scale)\n# Square window\nsquare_plot &lt;- csr_sims_square |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  geom_sf(data=obs_window_tri |&gt; sf::st_boundary()) +\n  dsan_theme(\"quarter\")\nggsave(\"images/window_square.png\", square_plot, width=plot_w, height=plot_h, units=\"px\", scale=window_scale)\n# Circular window\nobs_window_disc &lt;- st_sfc(st_point(c(1, 0.5))) |&gt; st_buffer(1.2)\ncsr_sims_circ &lt;- ppp(csr_sims_square$x, csr_sims_square$y, window=as.owin(obs_window_disc))\ncirc_plot &lt;- csr_sims_circ |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  geom_sf(data=obs_window_geom) +\n  dsan_theme(\"quarter\")\nggsave(\"images/window_circ.png\", circ_plot, width=plot_w, height=plot_h, units=\"px\", scale=window_scale)\n\n\n\n\n\n\n\n\n\n\nRegular\nCSR\nClustered",
    "crumbs": [
      "Week 7: Oct 8"
    ]
  },
  {
    "objectID": "w07/index.html#our-new-library-spatstat",
    "href": "w07/index.html#our-new-library-spatstat",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Our New Library: spatstat!",
    "text": "Our New Library: spatstat!\n\n\n\nHomepage: spatstat.org\nGitHub: github.com/spatstat\nBook: Baddeley, Rubak, and Turner (2015) [Companion website]\nPDF: here",
    "crumbs": [
      "Week 7: Oct 8"
    ]
  },
  {
    "objectID": "w07/index.html#why-do-events-appear-where-they-do",
    "href": "w07/index.html#why-do-events-appear-where-they-do",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Why Do Events Appear Where They Do?",
    "text": "Why Do Events Appear Where They Do?\n\n\nCode\ncenter_l_function &lt;- function(x, ...) {\n\n  if (!spatstat.geom::is.ppp(x) && !spatstat.geom::is.fv(x)) {\n    stop(\"Please provide either ppp or fv object.\")\n  }\n\n  if (spatstat.geom::is.ppp(x)) {\n    x &lt;- spatstat.explore::Lest(x, ...)\n  }\n\n  r &lt;- x$r\n\n  l_centered &lt;- spatstat.explore::eval.fv(x - r)\n\n  return(l_centered)\n}\ncond_clust_sf &lt;- cond_clust_sims |&gt; sf::st_as_sf()\npines_plot &lt;- cond_clust_sf |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme(\"full\")\nggsave(\"images/pines.png\", pines_plot)\n# density() calls density.ppp() if the argument is a ppp object\nden &lt;- density(cond_clust_sims, sigma = 0.1)\n#summary(den)\npng(\"images/intensity_plot.png\")\nplot(den, main = \"Intensity Œª(s)\")\ncontour(den, add = TRUE) # contour plot\ndev.off()\n# And Kest / Lest\nkest_result &lt;- Kest(cond_clust_sims, rmax=0.5, correction=\"best\")\nlest_result &lt;- center_l_function(cond_clust_sims, rmax=0.5)\npng(\"images/lest.png\")\nplot(lest_result, main=\"K(h)\")\ndev.off()\n\n\n\n\n\n\n\n\n\n\n\nFirst-Order\nSecond-Order\n\n\n\n\n\nEvents considered individually \\(\\implies\\) Intensity function \\(\\lambda(\\mathbf{s})\\)\nSecond-Order: Events considered pairwise \\(\\implies\\) \\(K\\)-function \\(K(\\vec{h})\\)",
    "crumbs": [
      "Week 7: Oct 8"
    ]
  },
  {
    "objectID": "w07/index.html#references",
    "href": "w07/index.html#references",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "References",
    "text": "References\n\n\nBaddeley, Adrian, Ege Rubak, and Rolf Turner. 2015. Spatial Point Patterns: Methodology and Applications with R. CRC Press.\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2004. Statistical Methods for Spatial Data Analysis. CRC Press.\n\n\nWaller, Lance A., and Carol A. Gotway. 2004. Applied Spatial Statistics for Public Health Data. John Wiley & Sons. https://www.dropbox.com/scl/fi/kyq9h64e3x2zcd5qezaeh/Lance-A.-Waller-Carol-A.-Gotway-Applied-Spatial-Analysis-of-Public-Health-Data.pdf?rlkey=ajc3pfm3j01htkflidgd6jx28&dl=1.",
    "crumbs": [
      "Week 7: Oct 8"
    ]
  },
  {
    "objectID": "w07/slides.html#why-na√Øve",
    "href": "w07/slides.html#why-na√Øve",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Why ‚ÄúNa√Øve‚Äù?",
    "text": "Why ‚ÄúNa√Øve‚Äù?\n\n[Continuing from last week] Lattice data: easiest way to visualize / operationalize simple measures of clustering via spatial autocorrelation\nSo, we develop intuitions for measures like Moran‚Äôs \\(I\\) by looking at lattice data, but‚Ä¶\nNa√Øve because we‚Äôre not modeling the lattice regions (cells) themselves!\nNon-na√Øve clustering: Knowing the clusters but also what process led to their formation!"
  },
  {
    "objectID": "w07/slides.html#spatial-randomness",
    "href": "w07/slides.html#spatial-randomness",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Spatial Randomness",
    "text": "Spatial Randomness\n\n\nCode\nlibrary(tidyverse)\nlibrary(spatstat)\nset.seed(6805)\nN &lt;- 60\nr_core &lt;- 0.05\nobs_window &lt;- square(1)\n# Regularity via Inhibition\n#reg_sims &lt;- rMaternI(N, r=r_core, win=obs_window)\ncond_reg_sims &lt;- rSSI(r=r_core, N)\n# CSR data\n#csr_sims &lt;- rpoispp(N, win=obs_window)\ncond_sr_sims &lt;- rpoint(N, win=obs_window)\n### Clustered data\n#clust_sims &lt;- rMatClust(kappa=6, r=2.5*r_core, mu=10, win=obs_window)\n#clust_sims &lt;- rMatClust(mu=5, kappa=1, scale=0.1, win=obs_window, n.cond=N, w.cond=obs_window)\n#clust_sims &lt;- rclusterBKBC(clusters=\"MatClust\", kappa=10, mu=10, scale=0.05, verbose=FALSE)\n# Each cluster consist of 10 points in a disc of radius 0.2\nnclust &lt;- function(x0, y0, radius, n) {\n    #print(n)\n    return(runifdisc(10, radius, centre=c(x0, y0)))\n}\ncond_clust_sims &lt;- rNeymanScott(kappa=5, expand=0.0, rclust=nclust, radius=2*r_core, n=10)\n# And PLOT\nplot_w &lt;- 400\nplot_h &lt;- 400\nplot_scale &lt;- 2.25\ncond_reg_plot &lt;- cond_reg_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme()\nggsave(\"images/cond_reg.png\", cond_reg_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\ncond_sr_plot &lt;- cond_sr_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme()\nggsave(\"images/cond_sr.png\", cond_sr_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\ncond_clust_plot &lt;- cond_clust_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme()\nggsave(\"images/cond_clust.png\", cond_clust_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\n\n\n\n\n\n\n\n\n\n\n\n\n\nAutocorrelation\n\\(I = -1\\)\n‚Üê\n\\(I = 0\\)\n‚Üí\n\\(I = 1\\)\n\n\n\n\nDescription\nNegative Autocorr\n\nNo Autocorr\n\nPositive Autocorr\n\n\nEvent at \\(\\mathbf{s} = (x,y)\\) Implies\nLess likely to find another point nearby\n\nNo information about nearby points\n\nMore likely to find another point nearby\n\n\nResulting Pattern\nRegularity\n\nReg/Clustered Mix\n\nClustering\n\n\nProcess(es) Which Could Produce Pattern\n1st Order: Random within even-spaced grid2nd Order: Competition\n\n1st Order: i.i.d. points2nd Order: i.i.d. distances\n\n1st Order: Tasty food at clust centers2nd Order: Cooperation\n\n\nFixed \\(N\\)\n60\n\n60\n\n60"
  },
  {
    "objectID": "w07/slides.html#complete-spatial-randomness-csr",
    "href": "w07/slides.html#complete-spatial-randomness-csr",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Complete Spatial Randomness (CSR)",
    "text": "Complete Spatial Randomness (CSR)\n\n\nCode\nlibrary(tidyverse)\nlibrary(spatstat)\nset.seed(6807)\nlambda &lt;- 60\nr_core &lt;- 0.05\nobs_window &lt;- square(1)\n# Regularity via Inhibition\n# Regularity via Inhibition\nreg_sims &lt;- rMaternI(lambda, r=r_core, win=obs_window)\n# CSR data\ncsr_sims &lt;- rpoispp(N, win=obs_window)\n### Clustered data\nclust_mu &lt;- 10\nclust_sims &lt;- rMatClust(kappa=lambda / clust_mu, scale=2*r_core, mu=10, win=obs_window)\n# And PLOT\nplot_w &lt;- 400\nplot_h &lt;- 400\nplot_scale &lt;- 2.25\nreg_plot &lt;- reg_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  labs(title=paste0(\"N = \",reg_sims$n)) +\n  dsan_theme()\nggsave(\"images/reg.png\", reg_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\ncsr_plot &lt;- csr_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  labs(title=paste0(\"N = \",csr_sims$n)) +\n  dsan_theme()\nggsave(\"images/csr.png\", csr_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\nclust_plot &lt;- clust_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  labs(title=paste0(\"N = \",clust_sims$n)) +\n  dsan_theme()\nggsave(\"images/clust.png\", clust_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\n\n\n\n\n\n\n\n\n\n\n\n\n\nAutocorrelation\n\\(I = -1\\)\n‚Üê\n\\(I = 0\\)\n‚Üí\n\\(I = 1\\)\n\n\n\n\nDescription\nNegative Autocorr\n\nNo Autocorr\n\nPositive Autocorr\n\n\nEvent at \\(\\mathbf{s} = (x,y)\\) Implies\nLess likely to find another point nearby\n\nNo information about nearby points\n\nMore likely to find another point nearby\n\n\nResulting Pattern\nRegularity\n\nReg/Clustered Mix\n\nClustering\n\n\nProcess(es) Which Could Produce Pattern\n1st Order: Random within even-spaced grid2nd Order: Competition\n\n1st Order: i.i.d. points2nd Order: i.i.d. distances\n\n1st Order: Tasty food at clust centers2nd Order: Cooperation\n\n\nFixed Intensity \\(\\lambda\\)\n60\n\n60\n\n60\n\n\nRandom \\(N\\)"
  },
  {
    "objectID": "w07/slides.html#measures-are-relative-to-window-of-observation",
    "href": "w07/slides.html#measures-are-relative-to-window-of-observation",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Measures are Relative to Window of Observation",
    "text": "Measures are Relative to Window of Observation\n\nSame data can be spatially random within one window, clustered or regular in others!\n\n\n\nCode\nN &lt;- 60\nobs_window &lt;- square(1)\nwindow_scale &lt;- 3.5\ncsr_sims_square &lt;- rpoispp(N, win=obs_window)\n# Triangular window\nobs_window_tri &lt;- st_sfc(st_polygon(list(\n    matrix(c(0.3,0.1,0.7,0.1,0.5,0.5,0.3,0.1), byrow=TRUE, nrow=4)\n)))\nobs_window_geom &lt;- st_sfc(st_linestring(\n    matrix(c(0,0,1,0,1,1,0,1,0,0), byrow=TRUE, nrow=5)\n))\ncsr_sims_tri &lt;- ppp(csr_sims_square$x, csr_sims_square$y, window=as.owin(obs_window_tri))\ntri_plot &lt;- csr_sims_tri |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme(\"quarter\");\nggsave(\"images/window_tri.png\", tri_plot, width=plot_w, height=plot_h, units=\"px\", scale=window_scale)\n# Square window\nsquare_plot &lt;- csr_sims_square |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  geom_sf(data=obs_window_tri |&gt; sf::st_boundary()) +\n  dsan_theme(\"quarter\")\nggsave(\"images/window_square.png\", square_plot, width=plot_w, height=plot_h, units=\"px\", scale=window_scale)\n# Circular window\nobs_window_disc &lt;- st_sfc(st_point(c(1, 0.5))) |&gt; st_buffer(1.2)\ncsr_sims_circ &lt;- ppp(csr_sims_square$x, csr_sims_square$y, window=as.owin(obs_window_disc))\ncirc_plot &lt;- csr_sims_circ |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  geom_sf(data=obs_window_geom) +\n  dsan_theme(\"quarter\")\nggsave(\"images/window_circ.png\", circ_plot, width=plot_w, height=plot_h, units=\"px\", scale=window_scale)\n\n\n\n\n\n\n\n\n\n\nRegular\nCSR\nClustered"
  },
  {
    "objectID": "w07/slides.html#our-new-library-spatstat",
    "href": "w07/slides.html#our-new-library-spatstat",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Our New Library: spatstat!",
    "text": "Our New Library: spatstat!\n\n\n\nHomepage: spatstat.org\nGitHub: github.com/spatstat\nBook: Baddeley, Rubak, and Turner (2015) [Companion website]\nPDF: here"
  },
  {
    "objectID": "w07/slides.html#why-do-events-appear-where-they-do",
    "href": "w07/slides.html#why-do-events-appear-where-they-do",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "Why Do Events Appear Where They Do?",
    "text": "Why Do Events Appear Where They Do?\n\n\nCode\ncenter_l_function &lt;- function(x, ...) {\n\n  if (!spatstat.geom::is.ppp(x) && !spatstat.geom::is.fv(x)) {\n    stop(\"Please provide either ppp or fv object.\")\n  }\n\n  if (spatstat.geom::is.ppp(x)) {\n    x &lt;- spatstat.explore::Lest(x, ...)\n  }\n\n  r &lt;- x$r\n\n  l_centered &lt;- spatstat.explore::eval.fv(x - r)\n\n  return(l_centered)\n}\ncond_clust_sf &lt;- cond_clust_sims |&gt; sf::st_as_sf()\npines_plot &lt;- cond_clust_sf |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme(\"full\")\nggsave(\"images/pines.png\", pines_plot)\n# density() calls density.ppp() if the argument is a ppp object\nden &lt;- density(cond_clust_sims, sigma = 0.1)\n#summary(den)\npng(\"images/intensity_plot.png\")\nplot(den, main = \"Intensity Œª(s)\")\ncontour(den, add = TRUE) # contour plot\ndev.off()\n# And Kest / Lest\nkest_result &lt;- Kest(cond_clust_sims, rmax=0.5, correction=\"best\")\nlest_result &lt;- center_l_function(cond_clust_sims, rmax=0.5)\npng(\"images/lest.png\")\nplot(lest_result, main=\"K(h)\")\ndev.off()\n\n\n\n\n\n\n\n\n\n\n\nFirst-Order\nSecond-Order\n\n\n\n\n\nEvents considered individually \\(\\implies\\) Intensity function \\(\\lambda(\\mathbf{s})\\)\nSecond-Order: Events considered pairwise \\(\\implies\\) \\(K\\)-function \\(K(\\vec{h})\\)"
  },
  {
    "objectID": "w07/slides.html#references",
    "href": "w07/slides.html#references",
    "title": "Week 7: Point Processes, Clustering, and Regularity",
    "section": "References",
    "text": "References\n\n\nBaddeley, Adrian, Ege Rubak, and Rolf Turner. 2015. Spatial Point Patterns: Methodology and Applications with R. CRC Press.\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2004. Statistical Methods for Spatial Data Analysis. CRC Press.\n\n\nWaller, Lance A., and Carol A. Gotway. 2004. Applied Spatial Statistics for Public Health Data. John Wiley & Sons. https://www.dropbox.com/scl/fi/kyq9h64e3x2zcd5qezaeh/Lance-A.-Waller-Carol-A.-Gotway-Applied-Spatial-Analysis-of-Public-Health-Data.pdf?rlkey=ajc3pfm3j01htkflidgd6jx28&dl=1."
  },
  {
    "objectID": "final-project.html",
    "href": "final-project.html",
    "title": "Final Project Details",
    "section": "",
    "text": "First things first, to jump right into an example of what the final project can end up looking like, click the following link to see an example final project in the required Quarto Manuscript format:\n\nExample Project: ‚ÄúCoup-Proofing via Capital Relocation‚Äù",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "final-project.html#example-final-project-submission",
    "href": "final-project.html#example-final-project-submission",
    "title": "Final Project Details",
    "section": "",
    "text": "First things first, to jump right into an example of what the final project can end up looking like, click the following link to see an example final project in the required Quarto Manuscript format:\n\nExample Project: ‚ÄúCoup-Proofing via Capital Relocation‚Äù",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "final-project.html#project-overview",
    "href": "final-project.html#project-overview",
    "title": "Final Project Details",
    "section": "Project Overview",
    "text": "Project Overview\nYour job, for the final project, will be to\n\nChoose an application area that you are interested in (this can be drawn from the list in the ‚ÄúApplication Areas‚Äù section below, but doesn‚Äôt have to be! You are very welcome to choose any area that is of interest to you!)\nDevelop a hypothesis about some spatial phenomena within that application area, which can be addressed using the GIS/Spatial Data Science tools we‚Äôve learned in the course. You will need to be specific about whether your hypothesis relates to a first-order property of the observations in your dataset, a second-order property of these observations, or both.\nPresent some initial evidence regarding your hypothesis, whether in the form of visualizations or na√Øve clustering measures such as the global or local versions of Moran‚Äôs \\(I\\).\nAssess the veracity of the hypothesis using formal hypothesis-evaluation approaches. The general ‚Äútemplate‚Äù for this formal hypothesis-evaluation would be to:\n\nCompute and visualize the intensity function and/or Pairwise Correlation Function for your observed data,\nRun 999 Monte Carlo simulations of the spatial patterns that would result from your null hypothesis, then\nCompare the the intensity functions or Pairwise Correlation Functions for these 999 simulations with those of your observed spatial pattern from step (a).\n\nDraw an initial conclusion regarding your hypothesis from Step 2, on the basis of the analysis carried out in Step 4.\nConclude with a ‚Äúroadmap‚Äù of the next steps that you would need to take to further explore and/or refine your initial conclusion from Step 5.\n\nFor example, if your dataset had missing values for important regions/time periods, here you can discuss how you might go about collecting observations to form a better dataset that would allow you to evaluate your hypothesis with greater confidence!",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "final-project.html#application-areas",
    "href": "final-project.html#application-areas",
    "title": "Final Project Details",
    "section": "Application Areas",
    "text": "Application Areas\n\nUrban Planning\nI put this here first only as, the application area where I have the most experience, so can probably be most helpful in terms of project guidance!\nThough it is a broad topic, one way to narrow your scope to make it feasible in the time we have left is to choose between a comparative approach and a case study approach:\nComparative Approach:\nHere the idea is to understand a spatial phenomenon by analyzing how it is implemented across different urban areas. For example, you could choose a measure of transportation efficiency (on-time rate, proportion of urban population living within walking distance of a subway/bus stop, etc.), then see how it is distributed across different urban areas, whether within a specific country or internationally. Then, the project could be rooted in a hypothesis regarding why some urban areas have high efficiency and others have low efficiency.\nCase Study Approach:\nHere, rather than comparing across different urban areas, the idea would be more focused on telling a story about a particular city or urban area. The reason this approach is mentioned after the Comparative Approach is because, in reality, what you‚Äôre doing here is still comparative! It‚Äôs just that, in this case, the comparisons are being made between e.g.¬†subregions of the urban area, or between the urban area observed at different time periods.\nFor example, a famous instance of the use of GIS to study a particular urban area is the Massachusetts state government‚Äôs Logan Airport Health Study, which found significantly higher rates of asthma among children living closer to Logan Airport. Here the point is that the rates were higher for these children relative to children living in other parts of the same urban area. That is, it‚Äôs still a ‚Äúcomparative‚Äù approach, just comparing areas-near-Logan with areas-not-near-Logan!\n\n\n\n\n\n\nFigure¬†1: Pollution expsure areas, as estimated in (Massachusetts Bureau of Environmental Health 2014, 46)\n\n\n\n\n\nClimate Change / Renewable Energy\n\n\nPublic Policy Evaluation\nHere, I specify policy evaluation rather than just public policy studies in general, since I think that some of the tools we‚Äôve learned in class can be particularly helpful for spatially-based comparison of the effectiveness of a given policy choice.\nThat‚Äôs a fairly vague statement so, as a concrete example,\n\n\nInternational Relations\n\n\nPublic Health / Global Health\n\n\nDiffusion Processes",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "final-project.html#google-cloud-platform-credits",
    "href": "final-project.html#google-cloud-platform-credits",
    "title": "Final Project Details",
    "section": "Google Cloud Platform Credits",
    "text": "Google Cloud Platform Credits\nYou should have received the Google Cloud Platform credits at your @georgetown.edu email address if you‚Äôre enrolled in this course. The code in the email should add a new billing account to your Google Cloud Console, with $50 for:\n\nCreating a full-on Virtual Machine for the project, if you think that you‚Äôll need a bunch of storage or computing power or GPU usage, and/or\nFor use with Google Maps Engine, if you think that one of their Maps Engine datasets/tools may be useful!\n\nAs mentioned in the email: A reasonable choice, which ensures that you‚Äôll stay within-budget even if you run the VM instance from now until the semester, is to create an instance (you can name it ‚Äúgis-project‚Äù, for example) with all of the default options except:\n\nChoose ec2-small for the Machine Type (ec2-medium is the default, but based on the estimated cost for this type, it would run out of $ before the semester ends)\nClick the ‚ÄúChange‚Äù button under ‚ÄúBoot Disk‚Äù and then set the size to 25 GB (this is what I meant by ‚Äútrying a few different options‚Äù: with the $ saved moving from ec2-medium to ec2-small, you can increase from the default 10 GB disk to a 25 GB disk without the expected cost going over $50 for the semester).",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "final-project.html#gis-datasetsproject-ideas-collection",
    "href": "final-project.html#gis-datasetsproject-ideas-collection",
    "title": "Final Project Details",
    "section": "GIS Datasets/Project Ideas Collection",
    "text": "GIS Datasets/Project Ideas Collection\nOnce we get to the Spatial Data Science unit, I‚Äôm hoping that you will have lots of inspiration in terms of the different methods that can be used for drawing inferences about spatial phenomena! Until then, me and TA Billy will add links to the following Raindrop.io collection, which you can browse to potentially draw inspiration for your own final project topic:",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "w01/index.html",
    "href": "w01/index.html",
    "title": "Week 1: Introduction to GIS",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#your-final-project",
    "href": "w01/index.html#your-final-project",
    "title": "Week 1: Introduction to GIS",
    "section": "Your Final Project",
    "text": "Your Final Project",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#unit-1-maps",
    "href": "w01/index.html#unit-1-maps",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 1: Maps",
    "text": "Unit 1: Maps\n\n\nsource(\"../dsan-globals/_globals.r\")\n\n\n\nYour least favorite part of the course (per survey üòú)\nMy favorite part of the course (because I love overthinking things)\nMy goal given survey results: Let‚Äôs think of this unit like learning languages for expressing spatial information:\n\n\nlibrary(sf)\nlibrary(svglite)\nsvglite(\"images/st_polygon.svg\", width = 6, height = 4.5)\npoly_blob &lt;- st_polygon(\n  list(\n    rbind(c(2,1), c(3,1), c(5,2), c(6,3), c(5,3), c(4,4), c(3,4), c(1,3), c(2,1)),\n    rbind(c(2,2), c(3,3), c(4,3), c(4,2), c(2,2))\n  )\n)\nplot(poly_blob,\n  border = 'black', col = '#ff8888', lwd = 4\n)\ndev.off()\n\n\n\n\n\n\n\n\nTemporal Information\nSpatial Information\n\n\n\n\n\n\n\n\n\\(\\Rightarrow\\) 22.5 seconds\n\\(\\Rightarrow\\) POLYGON ((2 1, 3 1, 5 2, 6 3, 5 3, 4 4, 3 4, 1 3, 2 1),(2 2, 3 3, 4 3, 4 2, 2 2))\n\n\n\n\nI think you‚Äôll be surprised at how, complexity of geospatial/spatio-temporal data \\(\\implies\\) need for programming-language-independent representations",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#unit-2-using-code-to-make-maps",
    "href": "w01/index.html#unit-2-using-code-to-make-maps",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 2: Using Code to Make Maps",
    "text": "Unit 2: Using Code to Make Maps\n\n(More on this in Prereqs section below!)\nGiven representations from Part 1, the task of coding becomes task of finding ‚Äúbest‚Äù library for loading/manipulating/plotting them\n\nWhere ‚Äúbest‚Äù = best for you!\n\nIn R: sf and friends (tidyverse)\nIn Python: geopandas",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#unit-3-spatial-data-science",
    "href": "w01/index.html#unit-3-spatial-data-science",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 3: Spatial Data Science",
    "text": "Unit 3: Spatial Data Science\n\nDrawing inferences about spatial phenomena\nThe meat of the course\nHow can we write code (Unit 2) to analyze a map (Unit 1) so as to‚Ä¶\n\nDiscover patterns (EDA: Exploratory Data Analysis) or\nTest hypotheses (CDA: Confirmatory Data Analysis)",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#unit-4-applications-final-project",
    "href": "w01/index.html#unit-4-applications-final-project",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 4: Applications / Final Project",
    "text": "Unit 4: Applications / Final Project\n\nTake everything you‚Äôve learned in Units 1-3 and Kamehameha them onto something you care about in the world!\nPublic Policy: Which counties are most in need of more transportation infrastructure?\nUrban Planning: Which neighborhoods are most in need of a new bus stop?\nEpidemiology: What properties of a region make it more/less susceptible to infectious diseases? Where should we intervene to ‚Äúcut the chain‚Äù of a disease vector?",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#who-am-i-why-am-i-teaching-you",
    "href": "w01/index.html#who-am-i-why-am-i-teaching-you",
    "title": "Week 1: Introduction to GIS",
    "section": "Who Am I? Why Am I Teaching You?",
    "text": "Who Am I? Why Am I Teaching You?\n\nStarted out as PhD student in Computer Science\n\nUCLA: Algorithmic Game Theory\nStanford (MS): Economic Network Analysis\n\nEnded up with PhD in Political Economy\n\nColumbia: ‚ÄúComputational Political Theory‚Äù",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#my-gis-adventures",
    "href": "w01/index.html#my-gis-adventures",
    "title": "Week 1: Introduction to GIS",
    "section": "My GIS Adventures",
    "text": "My GIS Adventures\n\nHigh school project: mine defusal in Indochina\nAs a Telecommunications Engineer for Huawei (HKUST)\nAs an Urban Economist at UC Berkeley\n\nUsed, e.g., Google Maps API to evaluate effects of Suburbanization of Poverty",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#my-gis-moment",
    "href": "w01/index.html#my-gis-moment",
    "title": "Week 1: Introduction to GIS",
    "section": "My GIS ü§Ø Moment",
    "text": "My GIS ü§Ø Moment\n\n\n\nHorrors of ‚ÄúVietnam War‚Äù did not end in 1975‚Ä¶\nCasualties from unexploded ordnance (cluster bombs) continue to devastate the region, over 220,000 victims:\n\n&gt;105K in Vietnam\n&gt;50K in Laos\n&gt;65K in Cambodia\n\n\n\n\n\n\nFrom Robert (2016)",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#huawei-optimizing-cell-tower-placement",
    "href": "w01/index.html#huawei-optimizing-cell-tower-placement",
    "title": "Week 1: Introduction to GIS",
    "section": "Huawei: Optimizing Cell Tower Placement",
    "text": "Huawei: Optimizing Cell Tower Placement\n\n\n\nFrom LTE 4G/5G Self-Organizing Networks",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#the-suburbanization-of-poverty",
    "href": "w01/index.html#the-suburbanization-of-poverty",
    "title": "Week 1: Introduction to GIS",
    "section": "The Suburbanization of Poverty",
    "text": "The Suburbanization of Poverty\n\nSince 2008, a person living in poverty in the US is more likely to be in a suburb than an ‚Äúinner city‚Äù\nWhat does this mean for‚Ä¶\n\nAccess to Food / Public Services?\nFinding a job \\(\\leadsto\\) Commuting?\n\nMy job: computing ‚Äúsuburban accessibility indices‚Äù\nDoes commuting = straight line distance?",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#distance-vs.-distance",
    "href": "w01/index.html#distance-vs.-distance",
    "title": "Week 1: Introduction to GIS",
    "section": "‚ÄúDistance‚Äù vs.¬†Distance!",
    "text": "‚ÄúDistance‚Äù vs.¬†Distance!\nYou‚Äôve just been hired as a fine art curator at The Whitney‚Ä¶ Congratulations!\n\n\n\n\n\n\n\nCommuting 1 mile to the Whitney\n\n\n\nAlso commuting 1 mile to the Whitney",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#as-humans",
    "href": "w01/index.html#as-humans",
    "title": "Week 1: Introduction to GIS",
    "section": "As Humans",
    "text": "As Humans\n\nTo understand the world around you!\n\n\n\n\nCharles Dupin, Carte figurative de l‚Äôinstruction populaire de la France (1826)\n\n\n\n\\(\\implies\\) Crucial landmark in the genesis of social science",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#as-data-scientists",
    "href": "w01/index.html#as-data-scientists",
    "title": "Week 1: Introduction to GIS",
    "section": "As Data Scientists",
    "text": "As Data Scientists\n\nAll data scientists are expected to know how to analyze ‚Äústandard‚Äù types of data: tabular, numeric data (think spreadsheets)\nHowever, you can differentiate yourself in the scary scary job market by developing a particular focus on some ‚Äúnon-standard‚Äù type:\n\n\nHello Mrs.¬†Google Meta OpenAI, yes, indeed, I have a wealth of experience working with [text data / temporal data / signal processing / geospatial data]. This job will be no problem for me.",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#as-public-policy-experts",
    "href": "w01/index.html#as-public-policy-experts",
    "title": "Week 1: Introduction to GIS",
    "section": "As Public Policy Experts",
    "text": "As Public Policy Experts\n\nOftentimes, all it takes is one map to see why a policy has failed üò±\n\n\n\n\nWho can guess what this map represents? (Source)\n\n\n\nhttp://www.radicalcartography.net/index.html?chicagodots, then adapted to DC: ‚Äú[Eric Fisher] was astounded by Bill Rankin‚Äôs map of Chicago‚Äôs racial and ethnic divides and wanted to see what other cities looked like mapped the same way. To match his map, Red is White, Blue is Black, Green is Asian, Orange is Hispanic, Gray is Other, and each dot is 25 people. Data from Census 2000. Base map ¬© OpenStreetMap, CC-BY-SA‚Äù https://commons.wikimedia.org/wiki/File:Race_and_ethnicity_map_of_Washington,_D.C..png",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#gis-as-an-umbrella-term",
    "href": "w01/index.html#gis-as-an-umbrella-term",
    "title": "Week 1: Introduction to GIS",
    "section": "GIS as an ‚ÄúUmbrella Term‚Äù",
    "text": "GIS as an ‚ÄúUmbrella Term‚Äù\n\nLibraries and tools we‚Äôll use: specific systems/methods for geospatial analysis\nGIS is an ‚Äúumbrella term‚Äù, which just vaguely refers to this entire universe of libraries/tools/techniques/approaches\n\n\n\n\n\n\n\n\n\nUmbrella Term\nConcepts\nSpecific Skills\n\n\n\n\nCoding\n\nVariables\nControl Flow\nAlgorithms\n\n\nPython\nR\nJavaScript\n\n\n\nGIS\n\nProjections\nVector vs.¬†Raster\nSpatial Data Formats (shapefiles, .geojson)\n\n\nArcGIS\nGeoPandas (Python)\nsf (R)",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#arcgis",
    "href": "w01/index.html#arcgis",
    "title": "Week 1: Introduction to GIS",
    "section": "ArcGIS‚Ä¶",
    "text": "ArcGIS‚Ä¶\n\nFor info on Georgetown‚Äôs provision of ArcGIS (Online, Pro, and Desktop), see the Library Guide\n\n\n\n\nUkraine Level-1 Administrative Regions Map (see CDTO talk)",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#then-why-cant-we-just-use-arcgis",
    "href": "w01/index.html#then-why-cant-we-just-use-arcgis",
    "title": "Week 1: Introduction to GIS",
    "section": "Then‚Ä¶ Why Can‚Äôt We Just Use ArcGIS?",
    "text": "Then‚Ä¶ Why Can‚Äôt We Just Use ArcGIS?\nAnalogy from non-geospatial data science:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nText\nDrawn Map\n‚Üí\nSpeadsheet\nDigital Map\n‚Üí\nEquations\nMaps w/ArcGIS\n‚Üí\nCode\nThis Class\n\n\n\n\n Start writing\n\n\ninfo.txt\n\nI gave Ana $3, then Ana paid me back $2. [...]\n\n Realize there‚Äôs regularity/structure ü§î\n Start entering info in rows\n\n\n\nFr\nTo\nAmt\nBal\n\n\n\n\nMe\nAna\n$3\n-$3\n\n\nAna\nMe\n$2\n-$1\n\n\n\n Realize you‚Äôre manually computing things that could be automated ü§î\n Start using equations\n\n\n\nFr\nTo\nAmt\nBal\n\n\n\n\nMe\nAna\n$3\n=0-C1\n\n\nAna\nMe\n$2\n=D1-C2\n\n\n\n Realize you need fancier equations, and/or need to coordinate with inputs (APIs), outputs (plotting libraries) ü§î\n Write code\n\n\nplot_balance.py\n\nimport pandas as pd\ndf = pd.read_csv(...)\ncalc_weekly_balance()\ndf.plot()\n\n \n Profit üí≤üí∞ü§ëüí∞üí≤",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#the-spatial-data-science-universe",
    "href": "w01/index.html#the-spatial-data-science-universe",
    "title": "Week 1: Introduction to GIS",
    "section": "The Spatial Data Science Universe",
    "text": "The Spatial Data Science Universe\n\n\n\n\n\n\nWe‚Äôll cover key pieces:  GDAL (Geospatial Data Abstraction Library),  PROJ to convert between projections,  GEOS for computational geometry",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#pedagogical-principles",
    "href": "w01/index.html#pedagogical-principles",
    "title": "Week 1: Introduction to GIS",
    "section": "Pedagogical Principles",
    "text": "Pedagogical Principles\n\nThere‚Äôs literally no such thing as ‚Äúintelligence‚Äù\nAnyone is capable of learning anything (neural plasticity)\nGrowth mindset: ‚ÄúI can‚Äôt do this‚Äù \\(\\leadsto\\) ‚ÄúI can‚Äôt do this yet!‚Äù\nThe point of a class is learning: understanding something about the world, either (a) For its own sake (end in itself) or (b) Because it‚Äôs relevant to something you care about (means to an end)\n\n\n\nOur teaching should be governed, not by a desire to make students learn things, but by the endeavor to keep burning within them that light which is called curiosity. (Montessori 1916)",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#chatgpt-and-whatnot",
    "href": "w01/index.html#chatgpt-and-whatnot",
    "title": "Week 1: Introduction to GIS",
    "section": "ChatGPT and Whatnot",
    "text": "ChatGPT and Whatnot\n\nIf you feel like ChatGPT will help you learn something in the course, then use it!\nIf you feel like you‚Äôre using it as a ‚Äúcrutch‚Äù, try to hold yourself accountable for not using it!\n\n\n\n\n\n\n\n\nTake the time/energy you're using to worry about...\nUse it instead to worry about...\n\n\n\n\n\nChatGPT\nCollaboration Policies\nPlagiarism\n\nLearning GIS",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#on-not-worrying-about-prereqs",
    "href": "w01/index.html#on-not-worrying-about-prereqs",
    "title": "Week 1: Introduction to GIS",
    "section": "On Not Worrying About Prereqs",
    "text": "On Not Worrying About Prereqs\n\nI genuinely believe that I can make the course accessible to you, meeting you wherever you‚Äôre at, no matter what!\nEveryone learns at their own pace (who says 14 weeks is ‚Äúcorrect‚Äù amount of time to learn GIS?), and I structure my courses as best as I possibly can to adapt to your pace\n\\(\\Rightarrow\\) Assessments (HW, Midterm) valuable in two ways:\n[Valuable for you] As an accountability mechanism to make sure you‚Äôre learn the material (how do we know when we‚Äôve learned something? When we can answer questions about it / use it to accomplish things!)\n[Valuable for me] For assessing and updating pace",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#r-andor-python-andor-js",
    "href": "w01/index.html#r-andor-python-andor-js",
    "title": "Week 1: Introduction to GIS",
    "section": "R and/or Python and/or JS",
    "text": "R and/or Python and/or JS\n\nMy Geometry vs.¬†Algebra Rant‚Ä¶ Euclid‚Äôs Elements, Book VI, Proposition 28.\nThe problem: Divide a given straight line so that the rectangle contained by its segments may be equal to a given area, not exceeding the square of half the line.\n\n\n\nGeometers solved w/geometry (300 BC)‚Ä¶\n\n\n\n\n\n\n‚Ä¶Algebraists solved w/algebra (2000 BC)‚Ä¶\n\\[\n\\begin{align*}\n&ax^2 + bx + c = 0 \\\\\n\\Rightarrow \\; & x_+ = \\frac{-b + \\sqrt{b^2 - 4ac}}{2a}\n\\end{align*}\n\\]\n‚Ä¶From 1637 onwards, whichever is easier! ü§Øü§Øü§Ø (Isomorphism)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFig¬†1: Circle with radius 1? Or \\((x,y)\\) satisfying \\(x^2 + y^2 = 1\\)?",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#learning-how-to-learn",
    "href": "w01/index.html#learning-how-to-learn",
    "title": "Week 1: Introduction to GIS",
    "section": "Learning How To Learn",
    "text": "Learning How To Learn\n\n\n\n\n\n\nFig¬†2: From The Carter (Documentary)",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#hes-literally-extremely-correct",
    "href": "w01/index.html#hes-literally-extremely-correct",
    "title": "Week 1: Introduction to GIS",
    "section": "He‚Äôs Literally Extremely Correct!",
    "text": "He‚Äôs Literally Extremely Correct!\n\n\n\nFrom Elsevier Osmosis: Spaced Repetition",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#our-first-map-polygons",
    "href": "w01/index.html#our-first-map-polygons",
    "title": "Week 1: Introduction to GIS",
    "section": "Our First Map: Polygons!",
    "text": "Our First Map: Polygons!\n(Quick demo adapted from Sherry Xie‚Äôs R Consortium Workshop: Analyzing Geospatial Data in R, using DC rather than Philadelphia open data.)\n\n\nCode\nlibrary(sf)\n# Load DC tracts data\ndc_sf_fpath &lt;- \"data/DC_Census_2020/Census_Tracts_in_2020.shp\"\ndc_sf &lt;- st_read(dc_sf_fpath);\n\n\nReading layer `Census_Tracts_in_2020' from data source \n  `/Users/jpj/gtown-local/ppol6805/w01/data/DC_Census_2020/Census_Tracts_in_2020.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 206 features and 315 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8584933 ymin: 4691871 xmax: -8561515 ymax: 4721078\nProjected CRS: WGS 84 / Pseudo-Mercator\n\n\nCode\ncols_to_keep &lt;- c(\"OBJECTID\", \"TRACT\", \"GEOID\", \"ALAND\", \"AWATER\", \"STUSAB\", \"SUMLEV\", \"GEOCODE\", \"STATE\", \"NAME\", \"POP100\", \"HU100\", \"geometry\")\ndc_sf &lt;- dc_sf |&gt; select(cols_to_keep)\n\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\n‚Ñπ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(cols_to_keep)\n\n  # Now:\n  data %&gt;% select(all_of(cols_to_keep))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#sf-objects",
    "href": "w01/index.html#sf-objects",
    "title": "Week 1: Introduction to GIS",
    "section": "sf Objects",
    "text": "sf Objects\ndc_sf is an object of type sf (short for ‚Äúsimple feature‚Äù), which extends data.frame, and contains features which have type POLYGON\n\nclass(dc_sf)\n\n[1] \"sf\"         \"data.frame\"\n\nhead(dc_sf)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nTRACT\nGEOID\nALAND\nAWATER\nSTUSAB\nSUMLEV\nGEOCODE\nSTATE\nNAME\nPOP100\nHU100\ngeometry\n\n\n\n\n1\n002002\n11001002002\n849376\n0\nDC\n140\n11001002002\n11\nCensus Tract 20.02\n4072\n1532\nPOLYGON ((-8575655 4714476,‚Ä¶\n\n\n2\n002101\n11001002101\n600992\n0\nDC\n140\n11001002101\n11\nCensus Tract 21.01\n5687\n2335\nPOLYGON ((-8574745 4715676,‚Ä¶\n\n\n3\n002102\n11001002102\n725975\n0\nDC\n140\n11001002102\n11\nCensus Tract 21.02\n5099\n2221\nPOLYGON ((-8573824 4715684,‚Ä¶\n\n\n4\n002201\n11001002201\n415173\n0\nDC\n140\n11001002201\n11\nCensus Tract 22.01\n3485\n1229\nPOLYGON ((-8574654 4714781,‚Ä¶\n\n\n5\n002202\n11001002202\n698895\n566\nDC\n140\n11001002202\n11\nCensus Tract 22.02\n3339\n1454\nPOLYGON ((-8573792 4714811,‚Ä¶\n\n\n6\n000101\n11001000101\n199776\n5261\nDC\n140\n11001000101\n11\nCensus Tract 1.01\n1406\n999\nPOLYGON ((-8577962 4708867,‚Ä¶",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#working-with-sf-objects",
    "href": "w01/index.html#working-with-sf-objects",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\nWith some rare but important exceptions (which we‚Äôll learn!), can be used just like a data.frame / tibble:\n\n\nCode\nstr(dc_sf)   # view structure\n\n\nClasses 'sf' and 'data.frame':  206 obs. of  13 variables:\n $ OBJECTID: int  1 2 3 4 5 6 7 8 9 10 ...\n $ TRACT   : chr  \"002002\" \"002101\" \"002102\" \"002201\" ...\n $ GEOID   : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ ALAND   : int  849376 600992 725975 415173 698895 199776 1706484 505004 776435 1042157 ...\n $ AWATER  : int  0 0 0 0 566 5261 516665 0 439661 2305 ...\n $ STUSAB  : chr  \"DC\" \"DC\" \"DC\" \"DC\" ...\n $ SUMLEV  : int  140 140 140 140 140 140 140 140 140 140 ...\n $ GEOCODE : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ STATE   : int  11 11 11 11 11 11 11 11 11 11 ...\n $ NAME    : chr  \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\" \"Census Tract 22.01\" ...\n $ POP100  : int  4072 5687 5099 3485 3339 1406 3417 4108 4672 6161 ...\n $ HU100   : int  1532 2335 2221 1229 1454 999 2053 11 2169 2845 ...\n $ geometry:sfc_POLYGON of length 206; first list element: List of 1\n  ..$ : num [1:155, 1:2] -8575655 -8575655 -8575655 -8575655 -8575655 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:12] \"OBJECTID\" \"TRACT\" \"GEOID\" \"ALAND\" ...",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#working-with-sf-objects-1",
    "href": "w01/index.html#working-with-sf-objects-1",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf)  # view first several rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nTRACT\nGEOID\nALAND\nAWATER\nSTUSAB\nSUMLEV\nGEOCODE\nSTATE\nNAME\nPOP100\nHU100\ngeometry\n\n\n\n\n1\n002002\n11001002002\n849376\n0\nDC\n140\n11001002002\n11\nCensus Tract 20.02\n4072\n1532\nPOLYGON ((-8575655 4714476,‚Ä¶\n\n\n2\n002101\n11001002101\n600992\n0\nDC\n140\n11001002101\n11\nCensus Tract 21.01\n5687\n2335\nPOLYGON ((-8574745 4715676,‚Ä¶\n\n\n3\n002102\n11001002102\n725975\n0\nDC\n140\n11001002102\n11\nCensus Tract 21.02\n5099\n2221\nPOLYGON ((-8573824 4715684,‚Ä¶\n\n\n4\n002201\n11001002201\n415173\n0\nDC\n140\n11001002201\n11\nCensus Tract 22.01\n3485\n1229\nPOLYGON ((-8574654 4714781,‚Ä¶\n\n\n5\n002202\n11001002202\n698895\n566\nDC\n140\n11001002202\n11\nCensus Tract 22.02\n3339\n1454\nPOLYGON ((-8573792 4714811,‚Ä¶\n\n\n6\n000101\n11001000101\n199776\n5261\nDC\n140\n11001000101\n11\nCensus Tract 1.01\n1406\n999\nPOLYGON ((-8577962 4708867,‚Ä¶",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#working-with-sf-objects-2",
    "href": "w01/index.html#working-with-sf-objects-2",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\ndim(dc_sf)   # view dimensions\n\n\n[1] 206  13\n\n\nCode\ndc_sf[1,]    # select first row\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nTRACT\nGEOID\nALAND\nAWATER\nSTUSAB\nSUMLEV\nGEOCODE\nSTATE\nNAME\nPOP100\nHU100\ngeometry\n\n\n\n\n1\n002002\n11001002002\n849376\n0\nDC\n140\n11001002002\n11\nCensus Tract 20.02\n4072\n1532\nPOLYGON ((-8575655 4714476,‚Ä¶",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#working-with-sf-objects-3",
    "href": "w01/index.html#working-with-sf-objects-3",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf$NAME)  # select column by name  \n\n\n[1] \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\"\n[4] \"Census Tract 22.01\" \"Census Tract 22.02\" \"Census Tract 1.01\" \n\n\nCode\nhead(dc_sf[,4])         # select column by number\n\n\n\n\n\n\nALAND\ngeometry\n\n\n\n\n849376\nPOLYGON ((-8575655 4714476,‚Ä¶\n\n\n600992\nPOLYGON ((-8574745 4715676,‚Ä¶\n\n\n725975\nPOLYGON ((-8573824 4715684,‚Ä¶\n\n\n415173\nPOLYGON ((-8574654 4714781,‚Ä¶\n\n\n698895\nPOLYGON ((-8573792 4714811,‚Ä¶\n\n\n199776\nPOLYGON ((-8577962 4708867,‚Ä¶",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#and-actually-displaying-the-map",
    "href": "w01/index.html#and-actually-displaying-the-map",
    "title": "Week 1: Introduction to GIS",
    "section": "And‚Ä¶ Actually Displaying the Map!",
    "text": "And‚Ä¶ Actually Displaying the Map!\n\n\nCode\n# We can extract the geometry with the st_geometry function\ndc_geo &lt;- st_geometry(dc_sf)\n#pt_geo\n\n# Plot the geometry with base R's plot() function\nplot(dc_geo)",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#key-notation-definition",
    "href": "w01/index.html#key-notation-definition",
    "title": "Week 1: Introduction to GIS",
    "section": "Key Notation / Definition",
    "text": "Key Notation / Definition\n\n\n\\(d\\)-Dimensional ‚ÄúSpatial Process‚Äù (Schabenberger and Gotway 2004, 6)\n\n\\[\n\\text{Data} = \\left\\{Z(\\mathbf{s}) \\mid \\mathbf{s} \\in D \\subset \\mathbb{R}^d\\right\\}\n\\]\n\n\\(d &gt; 1\\): Data forms a Random Field (this class: \\(d = 2\\)!)\n\n\n\n\n\n\n\n\n\n\n\n\nGeostatistical Data\nLattice/Region Data\nPoint Pattern\n\n\n\n\nCriteria\nFixed \\(D\\), Continuous\nFixed \\(D\\), Discrete\nRandom subset \\(D^* \\subseteq D\\)\n\n\nInterest\nInfer non-observed parts of \\(D\\)\nAutocorrelation, clustering\nPoint-generating process\n\n\nExample\n\n\\(N\\) trees \\(\\mathbf{s}_1, \\mathbf{s}_2, \\ldots, \\mathbf{s}_N\\), observed within a sample window \\(D \\subset \\mathbb{R}^2\\), (\\(D\\) some finite plot of land)\n\\(Z(\\mathbf{s}_i)\\): Attribute(s) at site \\(\\mathbf{s}_i\\)\nExample: Height. \\(Z(\\mathbf{s}_1) = 500\\text{m}\\), \\(Z(\\mathbf{s}_2) = 850\\text{m}\\), \\(\\ldots\\)\n\n\n\\(Z(\\mathbf{s})\\) observed over \\(N \\times N\\) grid of plots\n\\(\\Rightarrow\\) Contiguity, Neighbors (next section of slides!)\n\\(\\Rightarrow\\) Autocorrelation: Are points around \\(\\mathbf{s}_i\\) likely to have values similar to \\(Z(\\mathbf{s}_i)\\)?\n\n\nUnknown number of lightning strikes \\(\\mathbf{s}_1, \\mathbf{s}_2, \\ldots\\)\nContrast with geostatistical: all of \\(D\\) is observed, but what determines the subset \\(D^*\\) where events occur?\n‚ÄúUnmarked‚Äù: Just locations\n‚ÄúMarked‚Äù: Locations+info (e.g., intensity of strike)",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#spatial-randomness",
    "href": "w01/index.html#spatial-randomness",
    "title": "Week 1: Introduction to GIS",
    "section": "Spatial Randomness",
    "text": "Spatial Randomness\n\n\nCode\nlibrary(tidyverse)\nlibrary(spatstat)\nset.seed(6805)\nN &lt;- 60\nr_core &lt;- 0.05\nobs_window &lt;- square(1)\n# Regularity via Inhibition\n#reg_sims &lt;- rMaternI(N, r=r_core, win=obs_window)\ncond_reg_sims &lt;- rSSI(r=r_core, N)\n# CSR data\n#csr_sims &lt;- rpoispp(N, win=obs_window)\ncond_sr_sims &lt;- rpoint(N, win=obs_window)\n### Clustered data\n#clust_sims &lt;- rMatClust(kappa=6, r=2.5*r_core, mu=10, win=obs_window)\n#clust_sims &lt;- rMatClust(mu=5, kappa=1, scale=0.1, win=obs_window, n.cond=N, w.cond=obs_window)\n#clust_sims &lt;- rclusterBKBC(clusters=\"MatClust\", kappa=10, mu=10, scale=0.05, verbose=FALSE)\n# Each cluster consist of 10 points in a disc of radius 0.2\nnclust &lt;- function(x0, y0, radius, n) {\n    #print(n)\n    return(runifdisc(10, radius, centre=c(x0, y0)))\n}\ncond_clust_sims &lt;- rNeymanScott(kappa=5, expand=0.0, rclust=nclust, radius=2*r_core, n=10)\n# And PLOT\nplot_w &lt;- 400\nplot_h &lt;- 400\nplot_scale &lt;- 2.25\ncond_reg_plot &lt;- cond_reg_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme()\nggsave(\"images/cond_reg.png\", cond_reg_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\ncond_sr_plot &lt;- cond_sr_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme()\nggsave(\"images/cond_sr.png\", cond_sr_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\ncond_clust_plot &lt;- cond_clust_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  dsan_theme()\nggsave(\"images/cond_clust.png\", cond_clust_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\n\n\n\n\n\n\n\n\n\n\n\n\n\nAutocorrelation\n\\(I = -1\\)\n‚Üê\n\\(I = 0\\)\n‚Üí\n\\(I = 1\\)\n\n\n\n\nDescription\nNegative Autocorr\n\nNo Autocorr\n\nPositive Autocorr\n\n\nEvent at \\(\\mathbf{s} = (x,y)\\) Implies\nLess likely to find another point nearby\n\nNo information about nearby points\n\nMore likely to find another point nearby\n\n\nResulting Pattern\nRegularity\n\nReg/Clustered Mix\n\nClustering\n\n\nProcess(es) Which Could Produce Pattern\n1st Order: Random within even-spaced grid2nd Order: Competition\n\n1st Order: i.i.d. points2nd Order: i.i.d. distances\n\n1st Order: Tasty food at clust centers2nd Order: Cooperation\n\n\nFixed \\(N\\)\n60\n\n60\n\n60",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#complete-spatial-randomness-csr",
    "href": "w01/index.html#complete-spatial-randomness-csr",
    "title": "Week 1: Introduction to GIS",
    "section": "Complete Spatial Randomness (CSR)",
    "text": "Complete Spatial Randomness (CSR)\n\n\nCode\nlibrary(tidyverse)\nlibrary(spatstat)\nset.seed(6807)\nlambda &lt;- 60\nr_core &lt;- 0.05\nobs_window &lt;- square(1)\n# Regularity via Inhibition\n# Regularity via Inhibition\nreg_sims &lt;- rMaternI(lambda, r=r_core, win=obs_window)\n# CSR data\ncsr_sims &lt;- rpoispp(N, win=obs_window)\n### Clustered data\nclust_mu &lt;- 10\nclust_sims &lt;- rMatClust(kappa=lambda / clust_mu, scale=2*r_core, mu=10, win=obs_window)\n# And PLOT\nplot_w &lt;- 400\nplot_h &lt;- 400\nplot_scale &lt;- 2.25\nreg_plot &lt;- reg_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  labs(title=paste0(\"N = \",reg_sims$n)) +\n  dsan_theme()\nggsave(\"images/reg.png\", reg_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\ncsr_plot &lt;- csr_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  labs(title=paste0(\"N = \",csr_sims$n)) +\n  dsan_theme()\nggsave(\"images/csr.png\", csr_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\nclust_plot &lt;- clust_sims |&gt; sf::st_as_sf() |&gt;\n  ggplot() +\n  geom_sf() +\n  labs(title=paste0(\"N = \",clust_sims$n)) +\n  dsan_theme()\nggsave(\"images/clust.png\", clust_plot, width=plot_w, height=plot_h, units=\"px\", scale=plot_scale)\n\n\n\n\n\n\n\n\n\n\n\n\n\nAutocorrelation\n\\(I = -1\\)\n‚Üê\n\\(I = 0\\)\n‚Üí\n\\(I = 1\\)\n\n\n\n\nDescription\nNegative Autocorr\n\nNo Autocorr\n\nPositive Autocorr\n\n\nEvent at \\(\\mathbf{s} = (x,y)\\) Implies\nLess likely to find another point nearby\n\nNo information about nearby points\n\nMore likely to find another point nearby\n\n\nResulting Pattern\nRegularity\n\nReg/Clustered Mix\n\nClustering\n\n\nProcess(es) Which Could Produce Pattern\n1st Order: Random within even-spaced grid2nd Order: Competition\n\n1st Order: i.i.d. points2nd Order: i.i.d. distances\n\n1st Order: Tasty food at clust centers2nd Order: Cooperation\n\n\nFixed Intensity \\(\\lambda\\)\n60\n\n60\n\n60\n\n\nRandom \\(N\\)",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/index.html#references",
    "href": "w01/index.html#references",
    "title": "Week 1: Introduction to GIS",
    "section": "References",
    "text": "References\n\n\nMontessori, Maria. 1916. Spontaneous Activity in Education: A Basic Guide to the Montessori Methods of Learning in the Classroom. Lulu Press.\n\n\nRobert, Am√©lie. 2016. ‚ÄúAt the Heart of the Vietnam War: Herbicides, Napalm and Bulldozers Against the A L∆∞·ªõi Mountains.‚Äù Journal of Alpine Research  Revue de g√©ographie Alpine, no. 104-1 (April). https://doi.org/10.4000/rga.3266.\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2004. Statistical Methods for Spatial Data Analysis. CRC Press.",
    "crumbs": [
      "Week 1: Aug 27"
    ]
  },
  {
    "objectID": "w01/slides.html#your-final-project",
    "href": "w01/slides.html#your-final-project",
    "title": "Week 1: Introduction to GIS",
    "section": "Your Final Project",
    "text": "Your Final Project"
  },
  {
    "objectID": "w01/slides.html#unit-1-maps",
    "href": "w01/slides.html#unit-1-maps",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 1: Maps",
    "text": "Unit 1: Maps\n\n\n\n\nYour least favorite part of the course (per survey üòú)\nMy favorite part of the course (because I love overthinking things)\nMy goal given survey results: Let‚Äôs think of this unit like learning languages for expressing spatial information:\n\n\n\n\n\n\n\n\nTemporal Information\nSpatial Information\n\n\n\n\n\n\n\n\n\\(\\Rightarrow\\) 22.5 seconds\n\\(\\Rightarrow\\) POLYGON ((2 1, 3 1, 5 2, 6 3, 5 3, 4 4, 3 4, 1 3, 2 1),(2 2, 3 3, 4 3, 4 2, 2 2))\n\n\n\n\nI think you‚Äôll be surprised at how, complexity of geospatial/spatio-temporal data \\(\\implies\\) need for programming-language-independent representations"
  },
  {
    "objectID": "w01/slides.html#unit-2-using-code-to-make-maps",
    "href": "w01/slides.html#unit-2-using-code-to-make-maps",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 2: Using Code to Make Maps",
    "text": "Unit 2: Using Code to Make Maps\n\n(More on this in Prereqs section below!)\nGiven representations from Part 1, the task of coding becomes task of finding ‚Äúbest‚Äù library for loading/manipulating/plotting them\n\nWhere ‚Äúbest‚Äù = best for you!\n\nIn R: sf and friends (tidyverse)\nIn Python: geopandas"
  },
  {
    "objectID": "w01/slides.html#unit-3-spatial-data-science",
    "href": "w01/slides.html#unit-3-spatial-data-science",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 3: Spatial Data Science",
    "text": "Unit 3: Spatial Data Science\n\nDrawing inferences about spatial phenomena\nThe meat of the course\nHow can we write code (Unit 2) to analyze a map (Unit 1) so as to‚Ä¶\n\nDiscover patterns (EDA: Exploratory Data Analysis) or\nTest hypotheses (CDA: Confirmatory Data Analysis)"
  },
  {
    "objectID": "w01/slides.html#unit-4-applications-final-project",
    "href": "w01/slides.html#unit-4-applications-final-project",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 4: Applications / Final Project",
    "text": "Unit 4: Applications / Final Project\n\nTake everything you‚Äôve learned in Units 1-3 and Kamehameha them onto something you care about in the world!\nPublic Policy: Which counties are most in need of more transportation infrastructure?\nUrban Planning: Which neighborhoods are most in need of a new bus stop?\nEpidemiology: What properties of a region make it more/less susceptible to infectious diseases? Where should we intervene to ‚Äúcut the chain‚Äù of a disease vector?"
  },
  {
    "objectID": "w01/slides.html#who-am-i-why-am-i-teaching-you",
    "href": "w01/slides.html#who-am-i-why-am-i-teaching-you",
    "title": "Week 1: Introduction to GIS",
    "section": "Who Am I? Why Am I Teaching You?",
    "text": "Who Am I? Why Am I Teaching You?\n\nStarted out as PhD student in Computer Science\n\nUCLA: Algorithmic Game Theory\nStanford (MS): Economic Network Analysis\n\nEnded up with PhD in Political Economy\n\nColumbia: ‚ÄúComputational Political Theory‚Äù"
  },
  {
    "objectID": "w01/slides.html#my-gis-adventures",
    "href": "w01/slides.html#my-gis-adventures",
    "title": "Week 1: Introduction to GIS",
    "section": "My GIS Adventures",
    "text": "My GIS Adventures\n\nHigh school project: mine defusal in Indochina\nAs a Telecommunications Engineer for Huawei (HKUST)\nAs an Urban Economist at UC Berkeley\n\nUsed, e.g., Google Maps API to evaluate effects of Suburbanization of Poverty"
  },
  {
    "objectID": "w01/slides.html#my-gis-moment",
    "href": "w01/slides.html#my-gis-moment",
    "title": "Week 1: Introduction to GIS",
    "section": "My GIS ü§Ø Moment",
    "text": "My GIS ü§Ø Moment\n\n\n\nHorrors of ‚ÄúVietnam War‚Äù did not end in 1975‚Ä¶\nCasualties from unexploded ordnance (cluster bombs) continue to devastate the region, over 220,000 victims:\n\n&gt;105K in Vietnam\n&gt;50K in Laos\n&gt;65K in Cambodia\n\n\n\n\n\n\nFrom Robert (2016)"
  },
  {
    "objectID": "w01/slides.html#huawei-optimizing-cell-tower-placement",
    "href": "w01/slides.html#huawei-optimizing-cell-tower-placement",
    "title": "Week 1: Introduction to GIS",
    "section": "Huawei: Optimizing Cell Tower Placement",
    "text": "Huawei: Optimizing Cell Tower Placement\n\nFrom LTE 4G/5G Self-Organizing Networks"
  },
  {
    "objectID": "w01/slides.html#the-suburbanization-of-poverty",
    "href": "w01/slides.html#the-suburbanization-of-poverty",
    "title": "Week 1: Introduction to GIS",
    "section": "The Suburbanization of Poverty",
    "text": "The Suburbanization of Poverty\n\nSince 2008, a person living in poverty in the US is more likely to be in a suburb than an ‚Äúinner city‚Äù\nWhat does this mean for‚Ä¶\n\nAccess to Food / Public Services?\nFinding a job \\(\\leadsto\\) Commuting?\n\nMy job: computing ‚Äúsuburban accessibility indices‚Äù\nDoes commuting = straight line distance?"
  },
  {
    "objectID": "w01/slides.html#distance-vs.-distance",
    "href": "w01/slides.html#distance-vs.-distance",
    "title": "Week 1: Introduction to GIS",
    "section": "‚ÄúDistance‚Äù vs.¬†Distance!",
    "text": "‚ÄúDistance‚Äù vs.¬†Distance!\nYou‚Äôve just been hired as a fine art curator at The Whitney‚Ä¶ Congratulations!\n\n\n\n\n\n\n\nCommuting 1 mile to the Whitney\n\n\n\nAlso commuting 1 mile to the Whitney"
  },
  {
    "objectID": "w01/slides.html#as-humans",
    "href": "w01/slides.html#as-humans",
    "title": "Week 1: Introduction to GIS",
    "section": "As Humans",
    "text": "As Humans\n\nTo understand the world around you!\n\n\nCharles Dupin, Carte figurative de l‚Äôinstruction populaire de la France (1826)\n\\(\\implies\\) Crucial landmark in the genesis of social science"
  },
  {
    "objectID": "w01/slides.html#as-data-scientists",
    "href": "w01/slides.html#as-data-scientists",
    "title": "Week 1: Introduction to GIS",
    "section": "As Data Scientists",
    "text": "As Data Scientists\n\nAll data scientists are expected to know how to analyze ‚Äústandard‚Äù types of data: tabular, numeric data (think spreadsheets)\nHowever, you can differentiate yourself in the scary scary job market by developing a particular focus on some ‚Äúnon-standard‚Äù type:\n\n\nHello Mrs.¬†Google Meta OpenAI, yes, indeed, I have a wealth of experience working with [text data / temporal data / signal processing / geospatial data]. This job will be no problem for me."
  },
  {
    "objectID": "w01/slides.html#as-public-policy-experts",
    "href": "w01/slides.html#as-public-policy-experts",
    "title": "Week 1: Introduction to GIS",
    "section": "As Public Policy Experts",
    "text": "As Public Policy Experts\n\nOftentimes, all it takes is one map to see why a policy has failed üò±\n\n\nWho can guess what this map represents? (Source)\nhttp://www.radicalcartography.net/index.html?chicagodots, then adapted to DC: ‚Äú[Eric Fisher] was astounded by Bill Rankin‚Äôs map of Chicago‚Äôs racial and ethnic divides and wanted to see what other cities looked like mapped the same way. To match his map, Red is White, Blue is Black, Green is Asian, Orange is Hispanic, Gray is Other, and each dot is 25 people. Data from Census 2000. Base map ¬© OpenStreetMap, CC-BY-SA‚Äù https://commons.wikimedia.org/wiki/File:Race_and_ethnicity_map_of_Washington,_D.C..png"
  },
  {
    "objectID": "w01/slides.html#gis-as-an-umbrella-term",
    "href": "w01/slides.html#gis-as-an-umbrella-term",
    "title": "Week 1: Introduction to GIS",
    "section": "GIS as an ‚ÄúUmbrella Term‚Äù",
    "text": "GIS as an ‚ÄúUmbrella Term‚Äù\n\nLibraries and tools we‚Äôll use: specific systems/methods for geospatial analysis\nGIS is an ‚Äúumbrella term‚Äù, which just vaguely refers to this entire universe of libraries/tools/techniques/approaches\n\n\n\n\n\n\n\n\n\nUmbrella Term\nConcepts\nSpecific Skills\n\n\n\n\nCoding\n\nVariables\nControl Flow\nAlgorithms\n\n\nPython\nR\nJavaScript\n\n\n\nGIS\n\nProjections\nVector vs.¬†Raster\nSpatial Data Formats (shapefiles, .geojson)\n\n\nArcGIS\nGeoPandas (Python)\nsf (R)"
  },
  {
    "objectID": "w01/slides.html#arcgis",
    "href": "w01/slides.html#arcgis",
    "title": "Week 1: Introduction to GIS",
    "section": "ArcGIS‚Ä¶",
    "text": "ArcGIS‚Ä¶\n\nFor info on Georgetown‚Äôs provision of ArcGIS (Online, Pro, and Desktop), see the Library Guide\n\n\nUkraine Level-1 Administrative Regions Map (see CDTO talk)"
  },
  {
    "objectID": "w01/slides.html#then-why-cant-we-just-use-arcgis",
    "href": "w01/slides.html#then-why-cant-we-just-use-arcgis",
    "title": "Week 1: Introduction to GIS",
    "section": "Then‚Ä¶ Why Can‚Äôt We Just Use ArcGIS?",
    "text": "Then‚Ä¶ Why Can‚Äôt We Just Use ArcGIS?\nAnalogy from non-geospatial data science:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nText\nDrawn Map\n‚Üí\nSpeadsheet\nDigital Map\n‚Üí\nEquations\nMaps w/ArcGIS\n‚Üí\nCode\nThis Class\n\n\n\n\n Start writing\n\n\ninfo.txt\n\nI gave Ana $3, then Ana paid me back $2. [...]\n\n Realize there‚Äôs regularity/structure ü§î\n Start entering info in rows\n\n\n\nFr\nTo\nAmt\nBal\n\n\n\n\nMe\nAna\n$3\n-$3\n\n\nAna\nMe\n$2\n-$1\n\n\n\n Realize you‚Äôre manually computing things that could be automated ü§î\n Start using equations\n\n\n\nFr\nTo\nAmt\nBal\n\n\n\n\nMe\nAna\n$3\n=0-C1\n\n\nAna\nMe\n$2\n=D1-C2\n\n\n\n Realize you need fancier equations, and/or need to coordinate with inputs (APIs), outputs (plotting libraries) ü§î\n Write code\n\n\nplot_balance.py\n\nimport pandas as pd\ndf = pd.read_csv(...)\ncalc_weekly_balance()\ndf.plot()\n\n \n Profit üí≤üí∞ü§ëüí∞üí≤"
  },
  {
    "objectID": "w01/slides.html#the-spatial-data-science-universe",
    "href": "w01/slides.html#the-spatial-data-science-universe",
    "title": "Week 1: Introduction to GIS",
    "section": "The Spatial Data Science Universe",
    "text": "The Spatial Data Science Universe\n\n\nWe‚Äôll cover key pieces:  GDAL (Geospatial Data Abstraction Library),  PROJ to convert between projections,  GEOS for computational geometry"
  },
  {
    "objectID": "w01/slides.html#pedagogical-principles",
    "href": "w01/slides.html#pedagogical-principles",
    "title": "Week 1: Introduction to GIS",
    "section": "Pedagogical Principles",
    "text": "Pedagogical Principles\n\nThere‚Äôs literally no such thing as ‚Äúintelligence‚Äù\nAnyone is capable of learning anything (neural plasticity)\nGrowth mindset: ‚ÄúI can‚Äôt do this‚Äù \\(\\leadsto\\) ‚ÄúI can‚Äôt do this yet!‚Äù\nThe point of a class is learning: understanding something about the world, either (a) For its own sake (end in itself) or (b) Because it‚Äôs relevant to something you care about (means to an end)\n\n\n\nOur teaching should be governed, not by a desire to make students learn things, but by the endeavor to keep burning within them that light which is called curiosity. (Montessori 1916)"
  },
  {
    "objectID": "w01/slides.html#chatgpt-and-whatnot",
    "href": "w01/slides.html#chatgpt-and-whatnot",
    "title": "Week 1: Introduction to GIS",
    "section": "ChatGPT and Whatnot",
    "text": "ChatGPT and Whatnot\n\nIf you feel like ChatGPT will help you learn something in the course, then use it!\nIf you feel like you‚Äôre using it as a ‚Äúcrutch‚Äù, try to hold yourself accountable for not using it!\n\n\n\n\n\n\n\n\nTake the time/energy you're using to worry about...\nUse it instead to worry about...\n\n\n\n\n\nChatGPT\nCollaboration Policies\nPlagiarism\n\nLearning GIS"
  },
  {
    "objectID": "w01/slides.html#on-not-worrying-about-prereqs",
    "href": "w01/slides.html#on-not-worrying-about-prereqs",
    "title": "Week 1: Introduction to GIS",
    "section": "On Not Worrying About Prereqs",
    "text": "On Not Worrying About Prereqs\n\nI genuinely believe that I can make the course accessible to you, meeting you wherever you‚Äôre at, no matter what!\nEveryone learns at their own pace (who says 14 weeks is ‚Äúcorrect‚Äù amount of time to learn GIS?), and I structure my courses as best as I possibly can to adapt to your pace\n\\(\\Rightarrow\\) Assessments (HW, Midterm) valuable in two ways:\n[Valuable for you] As an accountability mechanism to make sure you‚Äôre learn the material (how do we know when we‚Äôve learned something? When we can answer questions about it / use it to accomplish things!)\n[Valuable for me] For assessing and updating pace"
  },
  {
    "objectID": "w01/slides.html#r-andor-python-andor-js",
    "href": "w01/slides.html#r-andor-python-andor-js",
    "title": "Week 1: Introduction to GIS",
    "section": "R and/or Python and/or JS",
    "text": "R and/or Python and/or JS\n\nMy Geometry vs.¬†Algebra Rant‚Ä¶ Euclid‚Äôs Elements, Book VI, Proposition 28.\nThe problem: Divide a given straight line so that the rectangle contained by its segments may be equal to a given area, not exceeding the square of half the line.\n\n\n\nGeometers solved w/geometry (300 BC)‚Ä¶\n\n\n\n\n\n\n‚Ä¶Algebraists solved w/algebra (2000 BC)‚Ä¶\n\\[\n\\begin{align*}\n&ax^2 + bx + c = 0 \\\\\n\\Rightarrow \\; & x_+ = \\frac{-b + \\sqrt{b^2 - 4ac}}{2a}\n\\end{align*}\n\\]\n‚Ä¶From 1637 onwards, whichever is easier! ü§Øü§Øü§Ø (Isomorphism)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFig¬†1: Circle with radius 1? Or \\((x,y)\\) satisfying \\(x^2 + y^2 = 1\\)?"
  },
  {
    "objectID": "w01/slides.html#learning-how-to-learn",
    "href": "w01/slides.html#learning-how-to-learn",
    "title": "Week 1: Introduction to GIS",
    "section": "Learning How To Learn",
    "text": "Learning How To Learn\n\n\n\n\n\n\nFig¬†2: From The Carter (Documentary)"
  },
  {
    "objectID": "w01/slides.html#hes-literally-extremely-correct",
    "href": "w01/slides.html#hes-literally-extremely-correct",
    "title": "Week 1: Introduction to GIS",
    "section": "He‚Äôs Literally Extremely Correct!",
    "text": "He‚Äôs Literally Extremely Correct!\n\nFrom Elsevier Osmosis: Spaced Repetition"
  },
  {
    "objectID": "w01/slides.html#our-first-map-polygons",
    "href": "w01/slides.html#our-first-map-polygons",
    "title": "Week 1: Introduction to GIS",
    "section": "Our First Map: Polygons!",
    "text": "Our First Map: Polygons!\n(Quick demo adapted from Sherry Xie‚Äôs R Consortium Workshop: Analyzing Geospatial Data in R, using DC rather than Philadelphia open data.)\n\n\nCode\nlibrary(sf)\n# Load DC tracts data\ndc_sf_fpath &lt;- \"data/DC_Census_2020/Census_Tracts_in_2020.shp\"\ndc_sf &lt;- st_read(dc_sf_fpath);\n\n\nReading layer `Census_Tracts_in_2020' from data source \n  `/Users/jpj/gtown-local/ppol6805/w01/data/DC_Census_2020/Census_Tracts_in_2020.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 206 features and 315 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8584933 ymin: 4691871 xmax: -8561515 ymax: 4721078\nProjected CRS: WGS 84 / Pseudo-Mercator\n\n\nCode\ncols_to_keep &lt;- c(\"OBJECTID\", \"TRACT\", \"GEOID\", \"ALAND\", \"AWATER\", \"STUSAB\", \"SUMLEV\", \"GEOCODE\", \"STATE\", \"NAME\", \"POP100\", \"HU100\", \"geometry\")\ndc_sf &lt;- dc_sf |&gt; select(cols_to_keep)"
  },
  {
    "objectID": "w01/slides.html#sf-objects",
    "href": "w01/slides.html#sf-objects",
    "title": "Week 1: Introduction to GIS",
    "section": "sf Objects",
    "text": "sf Objects\ndc_sf is an object of type sf (short for ‚Äúsimple feature‚Äù), which extends data.frame, and contains features which have type POLYGON\n\n\n[1] \"sf\"         \"data.frame\"\n\n\nSimple feature collection with 6 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n2        2 002101 11001002101 600992      0     DC    140 11001002101    11\n3        3 002102 11001002102 725975      0     DC    140 11001002102    11\n4        4 002201 11001002201 415173      0     DC    140 11001002201    11\n5        5 002202 11001002202 698895    566     DC    140 11001002202    11\n6        6 000101 11001000101 199776   5261     DC    140 11001000101    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,...\n2 Census Tract 21.01   5687  2335 POLYGON ((-8574745 4715676,...\n3 Census Tract 21.02   5099  2221 POLYGON ((-8573824 4715684,...\n4 Census Tract 22.01   3485  1229 POLYGON ((-8574654 4714781,...\n5 Census Tract 22.02   3339  1454 POLYGON ((-8573792 4714811,...\n6  Census Tract 1.01   1406   999 POLYGON ((-8577962 4708867,..."
  },
  {
    "objectID": "w01/slides.html#working-with-sf-objects",
    "href": "w01/slides.html#working-with-sf-objects",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\nWith some rare but important exceptions (which we‚Äôll learn!), can be used just like a data.frame / tibble:\n\n\nCode\nstr(dc_sf)   # view structure\n\n\nClasses 'sf' and 'data.frame':  206 obs. of  13 variables:\n $ OBJECTID: int  1 2 3 4 5 6 7 8 9 10 ...\n $ TRACT   : chr  \"002002\" \"002101\" \"002102\" \"002201\" ...\n $ GEOID   : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ ALAND   : int  849376 600992 725975 415173 698895 199776 1706484 505004 776435 1042157 ...\n $ AWATER  : int  0 0 0 0 566 5261 516665 0 439661 2305 ...\n $ STUSAB  : chr  \"DC\" \"DC\" \"DC\" \"DC\" ...\n $ SUMLEV  : int  140 140 140 140 140 140 140 140 140 140 ...\n $ GEOCODE : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ STATE   : int  11 11 11 11 11 11 11 11 11 11 ...\n $ NAME    : chr  \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\" \"Census Tract 22.01\" ...\n $ POP100  : int  4072 5687 5099 3485 3339 1406 3417 4108 4672 6161 ...\n $ HU100   : int  1532 2335 2221 1229 1454 999 2053 11 2169 2845 ...\n $ geometry:sfc_POLYGON of length 206; first list element: List of 1\n  ..$ : num [1:155, 1:2] -8575655 -8575655 -8575655 -8575655 -8575655 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:12] \"OBJECTID\" \"TRACT\" \"GEOID\" \"ALAND\" ..."
  },
  {
    "objectID": "w01/slides.html#working-with-sf-objects-1",
    "href": "w01/slides.html#working-with-sf-objects-1",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf)  # view first several rows\n\n\nSimple feature collection with 6 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n2        2 002101 11001002101 600992      0     DC    140 11001002101    11\n3        3 002102 11001002102 725975      0     DC    140 11001002102    11\n4        4 002201 11001002201 415173      0     DC    140 11001002201    11\n5        5 002202 11001002202 698895    566     DC    140 11001002202    11\n6        6 000101 11001000101 199776   5261     DC    140 11001000101    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,...\n2 Census Tract 21.01   5687  2335 POLYGON ((-8574745 4715676,...\n3 Census Tract 21.02   5099  2221 POLYGON ((-8573824 4715684,...\n4 Census Tract 22.01   3485  1229 POLYGON ((-8574654 4714781,...\n5 Census Tract 22.02   3339  1454 POLYGON ((-8573792 4714811,...\n6  Census Tract 1.01   1406   999 POLYGON ((-8577962 4708867,..."
  },
  {
    "objectID": "w01/slides.html#working-with-sf-objects-2",
    "href": "w01/slides.html#working-with-sf-objects-2",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\ndim(dc_sf)   # view dimensions\n\n\n[1] 206  13\n\n\nCode\ndc_sf[1,]    # select first row\n\n\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8575656 ymin: 4713958 xmax: -8574562 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,..."
  },
  {
    "objectID": "w01/slides.html#working-with-sf-objects-3",
    "href": "w01/slides.html#working-with-sf-objects-3",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf$NAME)  # select column by name  \n\n\n[1] \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\"\n[4] \"Census Tract 22.01\" \"Census Tract 22.02\" \"Census Tract 1.01\" \n\n\nCode\nhead(dc_sf[,4])         # select column by number\n\n\nSimple feature collection with 6 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n   ALAND                       geometry\n1 849376 POLYGON ((-8575655 4714476,...\n2 600992 POLYGON ((-8574745 4715676,...\n3 725975 POLYGON ((-8573824 4715684,...\n4 415173 POLYGON ((-8574654 4714781,...\n5 698895 POLYGON ((-8573792 4714811,...\n6 199776 POLYGON ((-8577962 4708867,..."
  },
  {
    "objectID": "w01/slides.html#and-actually-displaying-the-map",
    "href": "w01/slides.html#and-actually-displaying-the-map",
    "title": "Week 1: Introduction to GIS",
    "section": "And‚Ä¶ Actually Displaying the Map!",
    "text": "And‚Ä¶ Actually Displaying the Map!\n\n\nCode\n# We can extract the geometry with the st_geometry function\ndc_geo &lt;- st_geometry(dc_sf)\n#pt_geo\n\n# Plot the geometry with base R's plot() function\nplot(dc_geo)"
  },
  {
    "objectID": "w01/slides.html#key-notation-definition",
    "href": "w01/slides.html#key-notation-definition",
    "title": "Week 1: Introduction to GIS",
    "section": "Key Notation / Definition",
    "text": "Key Notation / Definition\n\n\n\\(d\\)-Dimensional ‚ÄúSpatial Process‚Äù (Schabenberger and Gotway 2004, 6)\n\n\\[\n\\text{Data} = \\left\\{Z(\\mathbf{s}) \\mid \\mathbf{s} \\in D \\subset \\mathbb{R}^d\\right\\}\n\\]\n\n\\(d &gt; 1\\): Data forms a Random Field (this class: \\(d = 2\\)!)\n\n\n\n\n\n\n\n\n\n\n\n\nGeostatistical Data\nLattice/Region Data\nPoint Pattern\n\n\n\n\nCriteria\nFixed \\(D\\), Continuous\nFixed \\(D\\), Discrete\nRandom subset \\(D^* \\subseteq D\\)\n\n\nInterest\nInfer non-observed parts of \\(D\\)\nAutocorrelation, clustering\nPoint-generating process\n\n\nExample\n\n\\(N\\) trees \\(\\mathbf{s}_1, \\mathbf{s}_2, \\ldots, \\mathbf{s}_N\\), observed within a sample window \\(D \\subset \\mathbb{R}^2\\), (\\(D\\) some finite plot of land)\n\\(Z(\\mathbf{s}_i)\\): Attribute(s) at site \\(\\mathbf{s}_i\\)\nExample: Height. \\(Z(\\mathbf{s}_1) = 500\\text{m}\\), \\(Z(\\mathbf{s}_2) = 850\\text{m}\\), \\(\\ldots\\)\n\n\n\\(Z(\\mathbf{s})\\) observed over \\(N \\times N\\) grid of plots\n\\(\\Rightarrow\\) Contiguity, Neighbors (next section of slides!)\n\\(\\Rightarrow\\) Autocorrelation: Are points around \\(\\mathbf{s}_i\\) likely to have values similar to \\(Z(\\mathbf{s}_i)\\)?\n\n\nUnknown number of lightning strikes \\(\\mathbf{s}_1, \\mathbf{s}_2, \\ldots\\)\nContrast with geostatistical: all of \\(D\\) is observed, but what determines the subset \\(D^*\\) where events occur?\n‚ÄúUnmarked‚Äù: Just locations\n‚ÄúMarked‚Äù: Locations+info (e.g., intensity of strike)"
  },
  {
    "objectID": "w01/slides.html#spatial-randomness",
    "href": "w01/slides.html#spatial-randomness",
    "title": "Week 1: Introduction to GIS",
    "section": "Spatial Randomness",
    "text": "Spatial Randomness\n\n\n\n\n\n\n\n\n\n\n\nAutocorrelation\n\\(I = -1\\)\n‚Üê\n\\(I = 0\\)\n‚Üí\n\\(I = 1\\)\n\n\n\n\nDescription\nNegative Autocorr\n\nNo Autocorr\n\nPositive Autocorr\n\n\nEvent at \\(\\mathbf{s} = (x,y)\\) Implies\nLess likely to find another point nearby\n\nNo information about nearby points\n\nMore likely to find another point nearby\n\n\nResulting Pattern\nRegularity\n\nReg/Clustered Mix\n\nClustering\n\n\nProcess(es) Which Could Produce Pattern\n1st Order: Random within even-spaced grid2nd Order: Competition\n\n1st Order: i.i.d. points2nd Order: i.i.d. distances\n\n1st Order: Tasty food at clust centers2nd Order: Cooperation\n\n\nFixed \\(N\\)\n60\n\n60\n\n60"
  },
  {
    "objectID": "w01/slides.html#complete-spatial-randomness-csr",
    "href": "w01/slides.html#complete-spatial-randomness-csr",
    "title": "Week 1: Introduction to GIS",
    "section": "Complete Spatial Randomness (CSR)",
    "text": "Complete Spatial Randomness (CSR)\n\n\n\n\n\n\n\n\n\n\n\nAutocorrelation\n\\(I = -1\\)\n‚Üê\n\\(I = 0\\)\n‚Üí\n\\(I = 1\\)\n\n\n\n\nDescription\nNegative Autocorr\n\nNo Autocorr\n\nPositive Autocorr\n\n\nEvent at \\(\\mathbf{s} = (x,y)\\) Implies\nLess likely to find another point nearby\n\nNo information about nearby points\n\nMore likely to find another point nearby\n\n\nResulting Pattern\nRegularity\n\nReg/Clustered Mix\n\nClustering\n\n\nProcess(es) Which Could Produce Pattern\n1st Order: Random within even-spaced grid2nd Order: Competition\n\n1st Order: i.i.d. points2nd Order: i.i.d. distances\n\n1st Order: Tasty food at clust centers2nd Order: Cooperation\n\n\nFixed Intensity \\(\\lambda\\)\n60\n\n60\n\n60\n\n\nRandom \\(N\\)"
  },
  {
    "objectID": "w01/slides.html#references",
    "href": "w01/slides.html#references",
    "title": "Week 1: Introduction to GIS",
    "section": "References",
    "text": "References\n\n\nMontessori, Maria. 1916. Spontaneous Activity in Education: A Basic Guide to the Montessori Methods of Learning in the Classroom. Lulu Press.\n\n\nRobert, Am√©lie. 2016. ‚ÄúAt the Heart of the Vietnam War: Herbicides, Napalm and Bulldozers Against the A L∆∞·ªõi Mountains.‚Äù Journal of Alpine Research  Revue de g√©ographie Alpine, no. 104-1 (April). https://doi.org/10.4000/rga.3266.\n\n\nSchabenberger, Oliver, and Carol A. Gotway. 2004. Statistical Methods for Spatial Data Analysis. CRC Press."
  },
  {
    "objectID": "git_submodules.html",
    "href": "git_submodules.html",
    "title": "Git Submodules - Basic Explanation",
    "section": "",
    "text": "Git Submodules - Basic Explanation\n\nWhy submodules?\nIn Git you can add a submodule to a repository. This is basically a repository embedded in your main repository. This can be very useful. A couple of usecases of submodules:\n\nSeparate big codebases into multiple repositories.\nUseful if you have a big project that contains multiple subprojects. You can make every subproject a submodule. This way you‚Äôll have a cleaner Git log, because the commits are specific to a certain submodule.\nRe-use the submodule in multiple parent repositories.\nUseful if you have multiple repositories that share a common component. With this approach you can easily update that shared component in all the repositories that added them as a submodule. This is a lot more convienient than copy-pasting the code into the repositories.\n\n\n\nBasics\nWhen you add a submodule in Git, you don‚Äôt add the code of the submodule to the main repository, you only add information about the submodule that is added to the main repository. This information describes which commit the submodule is pointing at. This way, the submodule‚Äôs code won‚Äôt automatically be updated if the submodule‚Äôs repository is updated. This is good, because your main repository might not work with the latest commit of the submodule; it prevents unexpected behaviour.\n\n\nAdding a submodule\nYou can add a submodule to a repository like this:\ngit submodule add git@github.com:path_to/submodule.git path-to-submodule\ngit submodule add jpowerj@github.com:dsan-globals.git dsan-globals\nWith default configuration, this will check out the code of the submodule.git repository to the path-to-submodule directory, and will add information to the main repository about this submodule, which contains the commit the submodule points to, which will be the current commit of the default branch (usually the master branch) at the time this command is executed.\nAfter this operation, if you do a git status you‚Äôll see two files in the Changes to be committed list: the .gitmodules file and the path to the submodule. When you commit and push these files, you‚Äôll commit/push the submodule to the origin.\n\n\nGetting the submodule‚Äôs code\nIf a new submodule is created by one person, the other people in the team need to initiate this submodule. First you have to get the information about the submodule, this is retrieved by a normal git pull. If there are new submodules you‚Äôll see it in the output of git pull. Then you‚Äôll have to initiate them with:\ngit submodule init\nThis will pull all the code from the submodule and place it in the directory that it‚Äôs configured to.\nIf you‚Äôve cloned a repository that makes use of submodules, you should also run this command to get the submodule‚Äôs code. This is not automatically done by git clone. However, if you add the --recurse-submodules flag, it will.\n\n\nPushing updates in the submodule\nThe submodule is just a separate repository. If you want to make changes to it, you should make the changes in its repository and push them like in a regular Git repository: Just execute the git commands in the submodule‚Äôs directory. However, you should also let the main repository know that you‚Äôve updated the submodule‚Äôs repository, and make it use the new commit of the repository of the submodule. Because if you make new commits inside a submodule, the main repository will still point to the old commit.\nIf there are changes in the submodule‚Äôs repository, and you do a git status in the main repository, then the submodule will be in the Changes not staged for commit list, and will have the text (modified content) behind it. This means that the code of the submodule is checked out on a different commit than the main repository is pointing to. To make the main repository point to this new commit, you should create another commit in the main repository.\nThe next sections describe different scenarios on doing this.\n\nMake changes inside a submodule\n\ncd inside the submodule directory.\nMake the desired changes.\ngit commit the new changes.\ngit push the new commit.\ncd back to the main repository.\nIn git status you‚Äôll see that the submodule directory is modified.\nIn git diff you‚Äôll see the old and new commit pointers.\nWhen you git commit in the main repository, it will update the pointer.\n\n\n\nUpdate the submodule pointer to a different commit\n\ncd inside the submodule directory.\ngit checkout the branch/commit you want to point to.\ncd back to the main repository.\nIn git status you‚Äôll see that the submodule directory is modified.\nIn git diff you‚Äôll see the old and new commit pointers.\nWhen you git commit in the main repository, it will update the pointer.\n\n\n\nIf someone else updated the submodule pointer\nIf someone updated a submodule, the other team-members should update the code of their submodules. This is not automatically done by git pull, because with git pull it only retrieves the information that the submodule is pointing to another commit, but doesn‚Äôt update the submodule‚Äôs code.\nTo see the current commits that are checked out for all your submodules:\ngit submodule status\nTo update the code of your submodules:\ngit submodule update\nIf a submodule is not initiated yet, add the --init flag. If any submodule has submodules itself, you can add the --recursive flag to recursively init and update submodules.\n\nWhat happens if you don‚Äôt run this command?\nIf you don‚Äôt run this command, the code of your submodule is checked out to an old commit. When you do git status in the main repository, you will see the submodule in the Changes not staged for commit list with the text (modified content) behind it. If you would do a git status inside the submodule, it would say HEAD detached at &lt;commit-hash&gt;. This is not because you changed the submodule‚Äôs code, but because its code is checked out to a different commit than the commit used in the main repository. So in the main repo, Git sees this as a change, but actually you just didn‚Äôt update the submodule. So if you‚Äôre working with submodules, don‚Äôt forget to keep your submodules up-to-date.\n\n\n\n\nMaking it easier for everyone\nIt is sometimes annoying if you forget to initiate and update your submodules. Fortunately, there are some tricks to make it easier:\ngit clone --recurse-submodules\nThis will clone a repository and also init / update any possible submodules the repository has.\ngit pull --recurse-submodules\nThis will pull the main repository and also it‚Äôs submodules.\nAnd you can make it easier with aliases:\ngit config --global alias.clone-all 'clone --recurse-submodules'\ngit config --global alias.pull-all 'pull --recurse-submodules'"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Additional Resources",
    "section": "",
    "text": "I‚Äôm going to try to dump everything I used to develop the course materials here‚Äîsome of it I drew on explicitly (using images from books, for example), and the rest of it seeped into my mind implicitly over the course of preparing the materials. Explore them to see if their different approaches ‚Äúclick‚Äù in your mind more than my approach does!",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "resources.html#the-core-textbooks",
    "href": "resources.html#the-core-textbooks",
    "title": "Additional Resources",
    "section": "The ‚ÄúCore‚Äù Textbooks",
    "text": "The ‚ÄúCore‚Äù Textbooks\n\n\n\n\n\n\n\n The Maps Book: Monmonier (2018)\n\n\n\nMark Monmonier, How To Lie With Maps [pdf, epub]\n\n\n\n\n\n\nThis is the perfect book for anyone worried about the‚Ä¶ maps-specific part of the course. For example, if you‚Äôre already comfortable coding in R, but perhaps you haven‚Äôt taken a course on principles of data visualization (like, say, DSAN 5200), this is a great book to focus on in the early weeks of the course!\n\n\n\n\n\n\n\n\n\n\n\n The Point Patterns Book: Baddeley, Rubak, and Turner (2015)\n\n\n\nBaddeley, Rubak, and Turner, Spatial Point Patterns: Methodology and Applications with R [pdf]\n\n\n\n\n\n\nI first started reading this book only because it was the ‚Äúcompanion‚Äù book for the spatstat library‚Ä¶ But, it ended up being hands-down my favorite GIS book of all time! It ends up having at least 50% of the course material in it, and definitely contains everything you would ever want to know about modeling point processes specifically (for the other 50% of the course, on areal and geospatial data, see Waller and Gotway (2004) below)\n\n\n\n\n\n\n\n\n\n\n\n The Spatial Stats Book: Waller and Gotway (2004)\n\n\n\nWaller and Gotway, Applied Spatial Statistics for Public Health Data [pdf]\n\n\n\n\n\n\nDon‚Äôt let the name fool you, this book contains a full-on tour through all major spatial-statistical methods! Each method is illustrated, in this case, with an example drawn from public health, but imo it‚Äôs immensely valuable regardless of what field you‚Äôre interested in (as you go through it, you can think about how the public health data they use may or may not be ‚Äúanalagous‚Äù to data you may find yourself using in that field!)",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "resources.html#learning-base-r",
    "href": "resources.html#learning-base-r",
    "title": "Additional Resources",
    "section": "Learning Base R",
    "text": "Learning Base R\nRecall from Week 2 that ‚Äúbase‚Äù R here just means, the pieces of R that are built-in, accessible to anyone with R on their computer. This is the ‚Äúskeleton‚Äù which the GIS-specific libraries we use in this class, such as sf, build upon!\n\nLessons 1 through 9 of Norm Matloff‚Äôs ‚ÄúFasteR‚Äù R tutorial will walk you gently through the basic syntax, data structures, and functions in ‚Äúbase‚Äù R that we‚Äôll build upon as the course progresses!\n\n\nGIS with R\nThe course‚Äôs R material is drawn mainly from the following books, where I‚Äôve tried to put them in order from most-used to least-used (in terms of the slides and assignments!):\n\nMoraga (2024): Spatial Statistics for Data Science: Theory and Practice with R\n\nThis book, along with the video tutorial from Sherrie Xie linked below, will get you up-to-speed on the main topics in this course!\n\nPebesma and Bivand (2023): Spatial Data Science with Applications in R\n\nThis book gets pretty in-depth after the first few chapters, and goes into a level of detail that is probably overkill for this course, but if there is a particular topic you want to pursue for your final project, this is where you can get a detailed account (from the creator of the sf library!)\n\nLovelace, Nowosad, and Muenchow (2024): Geocomputation with R\n\nThis book is almost my first choice, except that the figures and tables and etc. are generated in a kind of opaque way: if you have patience, and you want to reproduce a figure or table from the book as part of your own work, you can go to the book‚Äôs GitHub repository to find the .R scripts, but personally I wasn‚Äôt able to get a lot of them to run due to outdated/deprecated functions and libraries.\n\nComber and Brunsdon (2020): Geographical Data Science and Spatial Data Analysis: An Introduction in R [epub]\n\nI wanted to include this book as well because, if you‚Äôre like me and you read ebooks on a device that requires .epub files‚Ä¶ this is the only GIS book I was able to find that was well-formatted and easy-to-read in EPUB format!\n\n\n\n\nGIS with Python\n\nTenkanen, Heikinheimo, and Whipp (2024): Introduction to Python for Geographic Data Analysis\n\nI found this book even more straightforward and organized as an overview, the only issue is that the portion on Spatial Data Science is not yet finished (as of early September 2024), so for that portion of the course Rey, Arribas-Bel, and Wolf (2023) will be more helpful!\n\nRey, Arribas-Bel, and Wolf (2023): Geographic Data Science with Python\n\nThis book is especially nice if you‚Äôre interested in applying GIS to public policy or the social sciences!\n\nGraser et al. (2025): Geocomputation with Python\n\nThis is the Python companion book to Lovelace, Nowosad, and Muenchow (2024), and is not yet completed, but I wanted to include it here in case you‚Äôre looking for a pair of books where the Python and R content is aligned by chapter\n\n\n\n\nSpatial Statistics / Spatial Data Science\nWhereas the GIS with Python and R resources above are the key texts for this class, these books/resources dive deeper into the mathematical and statistical details of the models we look at towards the second half of the course. Here they‚Äôre ordered from most to least-approachable (for someone just getting started with GIS), based on my subjective experience going through them over the summer!\n\nSchabenberger and Gotway (2004): Statistical Methods for Spatial Data Analysis [pdf]\n\nDespite being among the oldest on this list, this is the book that really ‚Äúclicked‚Äù with me the most! If you‚Äôre like me and the intensive math right at the beginning of Gaetan and Guyon (2009) was a bit scary, for example, this one has much more gentle and slower-paced chapters at the beginning.\n\nGaetan and Guyon (2009): Spatial Statistics and Modeling [pdf]\n\nThis one has a pretty steep learning curve, as it starts right off the bat on the first page with some fairly intensive math introducing concepts like random fields. But, if you were a math major or you‚Äôd really like to know the mathematical underpinnings of the GIS methods we‚Äôll use towards the end of the course, this one may be for you!\n\nBivand, Pebesma, and G√≥mez-Rubio (2013): Applied Spatial Data Analysis with R [pdf]: This one has been superceded by Pebesma and Bivand (2023), discussed in the Using R section above, but I wanted to include it here since it was the textbook I used when first learning GIS with R back in the day‚Ä¶ It is actually double-outdated since, not only is there a newer book but also a newer library, since this book uses the sp library rather than the newer sf library we‚Äôve been using throughout the first few weeks of class!\n\n\n\nCartography and Geodesy\n\nWood and Fels (1992): The Power of Maps [pdf]\n\nI found Chapter 2, Maps Are Embedded in a History They Help Construct, especially helpful!",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "resources.html#videos",
    "href": "resources.html#videos",
    "title": "Additional Resources",
    "section": "Videos",
    "text": "Videos\n\nFor the quickest and most accessible intro to GIS using R I‚Äôve ever found, you can watch Sherrie Xie‚Äôs R Consortium workshop talk, Analyzing Geospatial Data in R\nFor a high-level overview, that will prepare you well for this course, see Coursera: Introduction to GIS, which is an online version of UC Davis‚Äô Introduction to GIS course.",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "resources.html#libraries",
    "href": "resources.html#libraries",
    "title": "Additional Resources",
    "section": "Libraries",
    "text": "Libraries",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "resources.html#other-courses",
    "href": "resources.html#other-courses",
    "title": "Additional Resources",
    "section": "Other Courses",
    "text": "Other Courses\n\nIf you‚Äôre looking to dive headfirst into more intensive statistical modeling of geospatial data, definitely check out Data Over Space and Time, a course taught by Cosma Shalizi, a very cool professor of Statistics at Carnegie Mellon University.",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "w13/index.html",
    "href": "w13/index.html",
    "title": "Week 13: In-Class Office Hours",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 13: Nov 19"
    ]
  },
  {
    "objectID": "w13/index.html#choose-your-own-adventure",
    "href": "w13/index.html#choose-your-own-adventure",
    "title": "Week 13: In-Class Office Hours",
    "section": "Choose Your Own Adventure",
    "text": "Choose Your Own Adventure\n\nBonus HW5A: Re-doing Midterm Q4-Q5 (with new dataset)\n\nYou‚Äôve incurred ‚Äúfixed cost‚Äù of understanding Q1-Q3‚Ä¶\n\\(\\implies\\) Build on this fixed cost and complete ~Q4 + ~Q5 without time limit!\n\nBonus HW5B: Spatial Regression\n\nYour final project uses areal rather than point data‚Ä¶\n\\(\\implies\\) To prepare, do HW5B to learn/practice spatial regression and earn bonus points for doing so!",
    "crumbs": [
      "Week 13: Nov 19"
    ]
  },
  {
    "objectID": "w13/index.html#visualizing-spatial-data",
    "href": "w13/index.html#visualizing-spatial-data",
    "title": "Week 13: In-Class Office Hours",
    "section": "Visualizing Spatial Data",
    "text": "Visualizing Spatial Data\n\nMy recommendation for final presentations: Leaflet",
    "crumbs": [
      "Week 13: Nov 19"
    ]
  },
  {
    "objectID": "w13/index.html#remote-sensed-raster-data",
    "href": "w13/index.html#remote-sensed-raster-data",
    "title": "Week 13: In-Class Office Hours",
    "section": "Remote-Sensed / Raster Data",
    "text": "Remote-Sensed / Raster Data\n\nYou‚Äôve seen (to some extent) terra\nstars: Same group behind sf\nGoogle solar panel data\n.tif files: Dynamically loaded",
    "crumbs": [
      "Week 13: Nov 19"
    ]
  },
  {
    "objectID": "w13/index.html#anonymization-synthetic-datasets",
    "href": "w13/index.html#anonymization-synthetic-datasets",
    "title": "Week 13: In-Class Office Hours",
    "section": "Anonymization / Synthetic Datasets",
    "text": "Anonymization / Synthetic Datasets\n\nDifferential privacy\nUsed by the US Census(!) Since 2020",
    "crumbs": [
      "Week 13: Nov 19"
    ]
  },
  {
    "objectID": "w13/index.html#references",
    "href": "w13/index.html#references",
    "title": "Week 13: In-Class Office Hours",
    "section": "References",
    "text": "References",
    "crumbs": [
      "Week 13: Nov 19"
    ]
  },
  {
    "objectID": "w13/slides.html#choose-your-own-adventure",
    "href": "w13/slides.html#choose-your-own-adventure",
    "title": "Week 13: In-Class Office Hours",
    "section": "Choose Your Own Adventure",
    "text": "Choose Your Own Adventure\n\nBonus HW5A: Re-doing Midterm Q4-Q5 (with new dataset)\n\nYou‚Äôve incurred ‚Äúfixed cost‚Äù of understanding Q1-Q3‚Ä¶\n\\(\\implies\\) Build on this fixed cost and complete ~Q4 + ~Q5 without time limit!\n\nBonus HW5B: Spatial Regression\n\nYour final project uses areal rather than point data‚Ä¶\n\\(\\implies\\) To prepare, do HW5B to learn/practice spatial regression and earn bonus points for doing so!"
  },
  {
    "objectID": "w13/slides.html#visualizing-spatial-data",
    "href": "w13/slides.html#visualizing-spatial-data",
    "title": "Week 13: In-Class Office Hours",
    "section": "Visualizing Spatial Data",
    "text": "Visualizing Spatial Data\n\nMy recommendation for final presentations: Leaflet"
  },
  {
    "objectID": "w13/slides.html#remote-sensed-raster-data",
    "href": "w13/slides.html#remote-sensed-raster-data",
    "title": "Week 13: In-Class Office Hours",
    "section": "Remote-Sensed / Raster Data",
    "text": "Remote-Sensed / Raster Data\n\nYou‚Äôve seen (to some extent) terra\nstars: Same group behind sf\nGoogle solar panel data\n.tif files: Dynamically loaded"
  },
  {
    "objectID": "w13/slides.html#anonymization-synthetic-datasets",
    "href": "w13/slides.html#anonymization-synthetic-datasets",
    "title": "Week 13: In-Class Office Hours",
    "section": "Anonymization / Synthetic Datasets",
    "text": "Anonymization / Synthetic Datasets\n\nDifferential privacy\nUsed by the US Census(!) Since 2020"
  },
  {
    "objectID": "w13/slides.html#references",
    "href": "w13/slides.html#references",
    "title": "Week 13: In-Class Office Hours",
    "section": "References",
    "text": "References"
  }
]