[
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Additional Resources",
    "section": "",
    "text": "I‚Äôm going to try to dump everything I used to develop the course materials here‚Äîsome of it I drew on explicitly (using images from books, for example), and the rest of it seeped into my mind implicitly over the course of preparing the materials. Explore them to see if their different approaches ‚Äúclick‚Äù in your mind more than my approach does!",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "resources.html#legally-free-textbooks",
    "href": "resources.html#legally-free-textbooks",
    "title": "Additional Resources",
    "section": "Legally-Free Textbooks",
    "text": "Legally-Free Textbooks\nAll of the following textbooks have been chosen specifically because they are available for free, legally, online. In fact, the online versions are especially nice since you can interact with the maps, copy-and-paste the code into your own notebooks to run and modify it, and so on.\n\nUsing R\nThe course‚Äôs R material is drawn mainly from the following books, where I‚Äôve tried to put them in order from most-used to least-used (in terms of the slides and assignments!):\n\nMoraga (2024): Spatial Statistics for Data Science: Theory and Practice with R\n\nThis book, along with the video tutorial from Sherrie Xie linked below, will get you up-to-speed on the main topics in this course!\n\nNowosad, Lovelace, and Muenchow (2024): Geocomputation with R\nPebesma and Bivand (2023): Spatial Data Science with Applications in R\n\nThis book is significantly more in-depth and goes into a level of detail that is probably overkill for this course, but if there is a particular topic you want to pursue for your final project, for example, this is where you can get a detailed account (from the creator of the sf library!)\n\n\n\n\nUsing Python\n\nTenkanen, Heikinheimo, and Whipp (2024): Introduction to Python for Geographic Data Analysis\n\nI found this book even more straightforward and organized as an overview, the only issue is that the portion on Spatial Data Science is not yet finished (as of early September 2024), so for that portion of the course Rey, Arribas-Bel, and Wolf (2023) will be more helpful!\n\nRey, Arribas-Bel, and Wolf (2023): Geographic Data Science with Python\n\nThis book is especially nice if you‚Äôre interested in applying GIS to public policy or the social sciences!",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "resources.html#illegally-free-textbooks",
    "href": "resources.html#illegally-free-textbooks",
    "title": "Additional Resources",
    "section": "Illegally-Free Textbooks",
    "text": "Illegally-Free Textbooks\n\nUsing R\n\nComber and Brunsdon (2020): Geographical Data Science and Spatial Data Analysis: An Introduction in R [epub]\n\nI wanted to include this book as well because, if you‚Äôre like me and you read ebooks on a device that requires .epub files‚Ä¶ this is the only GIS book I was able to find in EPUB format!",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "resources.html#videos",
    "href": "resources.html#videos",
    "title": "Additional Resources",
    "section": "Videos",
    "text": "Videos\n\nFor the quickest and most accessible intro to GIS using R I‚Äôve ever found, you can watch Sherrie Xie‚Äôs R Consortium workshop talk, Analyzing Geospatial Data in R\nFor a high-level overview, that will prepare you well for this course, see Coursera: Introduction to GIS, which is an online version of UC Davis‚Äô Introduction to GIS course.",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "resources.html#other-courses",
    "href": "resources.html#other-courses",
    "title": "Additional Resources",
    "section": "Other Courses",
    "text": "Other Courses\n\nIf you‚Äôre looking to dive headfirst into more intensive statistical modeling of geospatial data, definitely check out Data Over Space and Time, a course taught by Cosma Shalizi, a very cool professor of Statistics at Carnegie Mellon University.",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "resources.html#cartography-in-general",
    "href": "resources.html#cartography-in-general",
    "title": "Additional Resources",
    "section": "Cartography in General",
    "text": "Cartography in General\n\nMonmonier (2018): How to Lie with Maps (3rd Edition). [.epub]\nDenis Wood, The Power of Maps (1992) [.pdf]\n\nI found Chapter 2, Maps Are Embedded in a History They Help Construct, especially helpful!",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "w01/slides.html#your-final-project",
    "href": "w01/slides.html#your-final-project",
    "title": "Week 1: Introduction to GIS",
    "section": "Your Final Project",
    "text": "Your Final Project"
  },
  {
    "objectID": "w01/slides.html#unit-1-maps",
    "href": "w01/slides.html#unit-1-maps",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 1: Maps",
    "text": "Unit 1: Maps\n\nYour least favorite part of the course (per survey üòú)\nMy favorite part of the course (because I love overthinking things)\nMy goal given survey results: Let‚Äôs think of this unit like learning languages for expressing spatial information:\n\n\n\n\n\n\n\n\nTemporal Information\nSpatial Information\n\n\n\n\n\n\n\n\n\\(\\Rightarrow\\) 22.5 seconds\n\\(\\Rightarrow\\) POLYGON ((2 1, 3 1, 5 2, 6 3, 5 3, 4 4, 3 4, 1 3, 2 1),(2 2, 3 3, 4 3, 4 2, 2 2))\n\n\n\n\nI think you‚Äôll be surprised at how, complexity of geospatial/spatio-temporal data \\(\\implies\\) need for programming-language-independent representations"
  },
  {
    "objectID": "w01/slides.html#unit-2-using-code-to-make-maps",
    "href": "w01/slides.html#unit-2-using-code-to-make-maps",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 2: Using Code to Make Maps",
    "text": "Unit 2: Using Code to Make Maps\n\n(More on this in Prereqs section below!)\nGiven representations from Part 1, the task of coding becomes task of finding ‚Äúbest‚Äù library for loading/manipulating/plotting them\n\nWhere ‚Äúbest‚Äù = best for you!\n\nIn R: sf and friends (tidyverse)\nIn Python: geopandas"
  },
  {
    "objectID": "w01/slides.html#unit-3-spatial-data-science",
    "href": "w01/slides.html#unit-3-spatial-data-science",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 3: Spatial Data Science",
    "text": "Unit 3: Spatial Data Science\n\nDrawing inferences about spatial phenomena\nThe meat of the course\nHow can we write code (Unit 2) to analyze a map (Unit 1) so as to‚Ä¶\n\nDiscover patterns (EDA: Exploratory Data Analysis) or\nTest hypotheses (CDA: Confirmatory Data Analysis)"
  },
  {
    "objectID": "w01/slides.html#unit-4-applications-final-project",
    "href": "w01/slides.html#unit-4-applications-final-project",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 4: Applications / Final Project",
    "text": "Unit 4: Applications / Final Project\n\nTake everything you‚Äôve learned in Units 1-3 and Kamehameha them onto something you care about in the world!\nPublic Policy: Which counties are most in need of more transportation infrastructure?\nUrban Planning: Which neighborhoods are most in need of a new bus stop?\nEpidemiology: What properties of a region make it more/less susceptible to infectious diseases? Where should we intervene to ‚Äúcut the chain‚Äù of a disease vector?"
  },
  {
    "objectID": "w01/slides.html#my-gis-adventures",
    "href": "w01/slides.html#my-gis-adventures",
    "title": "Week 1: Introduction to GIS",
    "section": "My GIS Adventures",
    "text": "My GIS Adventures\n\nHigh school project: mine defusal in Indochina\nAs a Telecommunications Engineer for Huawei (HKUST)\nAs an Urban Economist at UC Berkeley\n\nUsed, e.g., Google Maps API to evaluate effects of Suburbanization of Poverty"
  },
  {
    "objectID": "w01/slides.html#my-gis-moment",
    "href": "w01/slides.html#my-gis-moment",
    "title": "Week 1: Introduction to GIS",
    "section": "My GIS ü§Ø Moment",
    "text": "My GIS ü§Ø Moment\n\n\n\nHorrors of ‚ÄúVietnam War‚Äù did not end in 1975‚Ä¶ Casualties from unexploded ordnance (cluster bombs) continue to devastate the region, over 220,000 victims:\n\n&gt;105K in Vietnam\n&gt;50K in Laos\n&gt;65K in Cambodia\n\n\n\n\n\n\nFrom Robert (2016)"
  },
  {
    "objectID": "w01/slides.html#huawei-optimizing-cell-tower-placement",
    "href": "w01/slides.html#huawei-optimizing-cell-tower-placement",
    "title": "Week 1: Introduction to GIS",
    "section": "Huawei: Optimizing Cell Tower Placement",
    "text": "Huawei: Optimizing Cell Tower Placement\n\nFrom LTE 4G/5G Self-Organizing Networks"
  },
  {
    "objectID": "w01/slides.html#the-suburbanization-of-poverty",
    "href": "w01/slides.html#the-suburbanization-of-poverty",
    "title": "Week 1: Introduction to GIS",
    "section": "The Suburbanization of Poverty",
    "text": "The Suburbanization of Poverty\n\nSince 2008, a person living in poverty in the US is more likely to be in a suburb than an ‚Äúinner city‚Äù\nWhat does this mean for‚Ä¶\n\nAccess to Food / Public Services?\nFinding a job \\(\\leadsto\\) Commuting?\n\nMy job: computing ‚Äúsuburban accessibility indices‚Äù\nDoes commuting = straight line distance?"
  },
  {
    "objectID": "w01/slides.html#distance-vs.-distance",
    "href": "w01/slides.html#distance-vs.-distance",
    "title": "Week 1: Introduction to GIS",
    "section": "‚ÄúDistance‚Äù vs.¬†Distance!",
    "text": "‚ÄúDistance‚Äù vs.¬†Distance!\n\nYou‚Äôve just been hired as a fine art curator at The Whitney‚Ä¶ Congratulations!\n\n\n\n\n\n\n\n\nCommuting 1 mile to the Whitney\n\n\n\nAlso commuting 1 mile to the Whitney"
  },
  {
    "objectID": "w01/slides.html#as-humans",
    "href": "w01/slides.html#as-humans",
    "title": "Week 1: Introduction to GIS",
    "section": "As Humans",
    "text": "As Humans\n\nTo understand the world around you!\n\n\nCharles Dupin, Carte figurative de l‚Äôinstruction populaire de la France (1826)\n\\(\\implies\\) Crucial landmark in the genesis of social science"
  },
  {
    "objectID": "w01/slides.html#as-data-scientists",
    "href": "w01/slides.html#as-data-scientists",
    "title": "Week 1: Introduction to GIS",
    "section": "As Data Scientists",
    "text": "As Data Scientists\n\nAll data scientists are expected to know how to analyze ‚Äústandard‚Äù types of data: tabular, numeric data (think spreadsheets)\nHowever, you can differentiate yourself in the scary scary job market by developing a particular focus on some ‚Äúnon-standard‚Äù type:\n\n\nHello Mr.¬†Google Musk, yes, indeed, I have a wealth of experience working with [text data / temporal data / signal processing / geospatial data]. This job will be no problem for me."
  },
  {
    "objectID": "w01/slides.html#as-public-policy-experts",
    "href": "w01/slides.html#as-public-policy-experts",
    "title": "Week 1: Introduction to GIS",
    "section": "As Public Policy Experts",
    "text": "As Public Policy Experts\n\nOftentimes, all it takes is one map to see why a policy has failed üò±\n\n\nWho can guess what this map represents? (Source)\nhttp://www.radicalcartography.net/index.html?chicagodots, then adapted to DC: ‚Äú[Eric Fisher] was astounded by Bill Rankin‚Äôs map of Chicago‚Äôs racial and ethnic divides and wanted to see what other cities looked like mapped the same way. To match his map, Red is White, Blue is Black, Green is Asian, Orange is Hispanic, Gray is Other, and each dot is 25 people. Data from Census 2000. Base map ¬© OpenStreetMap, CC-BY-SA‚Äù https://commons.wikimedia.org/wiki/File:Race_and_ethnicity_map_of_Washington,_D.C..png"
  },
  {
    "objectID": "w01/slides.html#its-completely-made-up",
    "href": "w01/slides.html#its-completely-made-up",
    "title": "Week 1: Introduction to GIS",
    "section": "It‚Äôs Completely Made Up",
    "text": "It‚Äôs Completely Made Up\nLike, even more made up than other made-up technical terms‚Ä¶ üòµ‚Äçüí´"
  },
  {
    "objectID": "w01/slides.html#what-i-mean-by-made-up",
    "href": "w01/slides.html#what-i-mean-by-made-up",
    "title": "Week 1: Introduction to GIS",
    "section": "What I Mean By ‚ÄúMade Up‚Äù",
    "text": "What I Mean By ‚ÄúMade Up‚Äù\n\nThe libraries and tools we‚Äôll use are specific systems/methods for analyzing geospatial data\nGIS is an ‚Äúumbrella term‚Äù, which just vaguely refers to this entire universe of libraries/tools/techniques/approaches\n\n\n\n\n\n\n\n\n\nUmbrella Term\nConcepts\nSpecific Skills\n\n\n\n\nCoding\n\nVariables\nControl Flow\nAlgorithms\n\n\nPython\nR\nJavaScript\n\n\n\nGIS\n\nProjections\nVector vs.¬†Raster\nSpatial Data Formats (shapefiles, .geojson)\n\n\nArcGIS\nGeoPandas (Python)\nsf (R)"
  },
  {
    "objectID": "w01/slides.html#arcgis",
    "href": "w01/slides.html#arcgis",
    "title": "Week 1: Introduction to GIS",
    "section": "ArcGIS",
    "text": "ArcGIS\n\nFor info on Georgetown‚Äôs provision of ArcGIS (Online, Pro, and Desktop), see the Library Guide\n\n\nUkraine Level-1 Administrative Regions Map (see CDTO talk)"
  },
  {
    "objectID": "w01/slides.html#then-why-cant-we-just-use-arcgis",
    "href": "w01/slides.html#then-why-cant-we-just-use-arcgis",
    "title": "Week 1: Introduction to GIS",
    "section": "Then‚Ä¶ Why Can‚Äôt We Just Use ArcGIS?",
    "text": "Then‚Ä¶ Why Can‚Äôt We Just Use ArcGIS?\nAnalogy from non-geospatial data science:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nText\nDrawn Map\n‚Üí\nSpeadsheet\nDigital Map\n‚Üí\nEquations\nMaps w/ArcGIS\n‚Üí\nCode\nThis Class\n\n\n\n\n Start writing\n\n\ninfo.txt\n\nI gave Ana $3, then Ana paid me back $2. [...]\n\n Realize there‚Äôs regularity/structure ü§î\n Start entering info in rows\n\n\n\nFr\nTo\nAmt\nBal\n\n\n\n\nMe\nAna\n$3\n-$3\n\n\nAna\nMe\n$2\n-$1\n\n\n\n Realize you‚Äôre manually computing things that could be automated ü§î\n Start using equations\n\n\n\nFr\nTo\nAmt\nBal\n\n\n\n\nMe\nAna\n$3\n=0-C1\n\n\nAna\nMe\n$2\n=D1-C2\n\n\n\n Realize you need fancier equations, and/or need to coordinate with inputs (APIs), outputs (plotting libraries) ü§î\n Write code\n\n\nplot_balance.py\n\nimport pandas as pd\ndf = pd.read_csv(...)\ncalc_weekly_balance()\ndf.plot()\n\n \n Profit üí≤üí∞ü§ëüí∞üí≤"
  },
  {
    "objectID": "w01/slides.html#the-spatial-data-science-universe",
    "href": "w01/slides.html#the-spatial-data-science-universe",
    "title": "Week 1: Introduction to GIS",
    "section": "The Spatial Data Science Universe",
    "text": "The Spatial Data Science Universe\n\n\nWe‚Äôll cover key ‚Äúpieces‚Äù:  GDAL (Geospatial Data Abstraction Library),  PROJ for converting between projections,  GEOS for computational geometry"
  },
  {
    "objectID": "w01/slides.html#pedagogical-principles",
    "href": "w01/slides.html#pedagogical-principles",
    "title": "Week 1: Introduction to GIS",
    "section": "Pedagogical Principles",
    "text": "Pedagogical Principles\n\nThere‚Äôs literally no such thing as ‚Äúintelligence‚Äù\nAnyone is capable of learning anything (neural plasticity)\nGrowth mindset: ‚ÄúI can‚Äôt do this‚Äù \\(\\leadsto\\) ‚ÄúI can‚Äôt do this yet!‚Äù\nThe point of a class is learning: understanding something about the world, either (a) For its own sake (end in itself) or (b) Because it‚Äôs relevant to something you care about (means to an end)\n\n\n\nOur teaching should be governed, not by a desire to make students learn things, but by the endeavor to keep burning within them that light which is called curiosity. (Montessori 1916)"
  },
  {
    "objectID": "w01/slides.html#chatgpt-and-whatnot",
    "href": "w01/slides.html#chatgpt-and-whatnot",
    "title": "Week 1: Introduction to GIS",
    "section": "ChatGPT and Whatnot",
    "text": "ChatGPT and Whatnot\n\nIf you feel like ChatGPT will help you learn something in the course, then use it!\nIf you feel like you‚Äôre using it as a ‚Äúcrutch‚Äù, try to hold yourself accountable for not using it!\n\n\n\n\n\n\n\n\nTake the time/energy you're using to worry about...\nUse it instead to worry about...\n\n\n\n\n\nChatGPT\nCollaboration Policies\nPlagiarism\n\nLearning GIS"
  },
  {
    "objectID": "w01/slides.html#i-am-the-opposite-of-a-prereq-stickler",
    "href": "w01/slides.html#i-am-the-opposite-of-a-prereq-stickler",
    "title": "Week 1: Introduction to GIS",
    "section": "I Am The Opposite of a Prereq-Stickler",
    "text": "I Am The Opposite of a Prereq-Stickler\n\nI genuinely believe that I can make the course accessible to you, meeting you wherever you‚Äôre at, no matter what!\nEveryone learns at their own pace (who says 14 weeks is ‚Äúcorrect‚Äù amount of time to learn GIS?), and I structure my courses as best as I possibly can to adapt to your pace\n\\(\\Rightarrow\\) Assessments (HW, Midterm) valuable in two ways:\n[Valuable for you] As an accountability mechanism to make sure you‚Äôre learn the material (how do we know when we‚Äôve learned something? When we can answer questions about it / use it to accomplish things!)\n[Valuable for me] For assessing and updating pace"
  },
  {
    "objectID": "w01/slides.html#r-andor-python-andor-js",
    "href": "w01/slides.html#r-andor-python-andor-js",
    "title": "Week 1: Introduction to GIS",
    "section": "R and/or Python and/or JS",
    "text": "R and/or Python and/or JS\n\nMy Geometry vs.¬†Algebra Rant‚Ä¶ Euclid‚Äôs Elements, Book VI, Proposition 28.\nThe problem: Divide a given straight line so that the rectangle contained by its segments may be equal to a given area, not exceeding the square of half the line.\n\n\n\nGeometers solved w/geometry (300 BC)‚Ä¶\n\n\n\n\n\n\n‚Ä¶Algebraists solved w/algebra (2000 BC)‚Ä¶\n\\[\n\\begin{align*}\n&ax^2 + bx + c = 0 \\\\\n\\Rightarrow \\; & x_+ = \\frac{-b + \\sqrt{b^2 - 4ac}}{2a}\n\\end{align*}\n\\]\n‚Ä¶From 1637 onwards, whichever is easier! ü§Øü§Øü§Ø (Isomorphism)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFig¬†1: Circle with radius 1? Or \\((x,y)\\) satisfying \\(x^2 + y^2 = 1\\)?"
  },
  {
    "objectID": "w01/slides.html#learning-how-to-learn",
    "href": "w01/slides.html#learning-how-to-learn",
    "title": "Week 1: Introduction to GIS",
    "section": "Learning How To Learn",
    "text": "Learning How To Learn\n\n\n\n\n\n\nFig¬†2: From The Carter (Documentary)"
  },
  {
    "objectID": "w01/slides.html#hes-literally-extremely-correct",
    "href": "w01/slides.html#hes-literally-extremely-correct",
    "title": "Week 1: Introduction to GIS",
    "section": "He‚Äôs Literally Extremely Correct!",
    "text": "He‚Äôs Literally Extremely Correct!\n\nFrom Elsevier Osmosis: Spaced Repetition"
  },
  {
    "objectID": "w01/slides.html#our-first-map-polygons",
    "href": "w01/slides.html#our-first-map-polygons",
    "title": "Week 1: Introduction to GIS",
    "section": "Our First Map: Polygons!",
    "text": "Our First Map: Polygons!\n(Quick demo adapted from Sherry Xie‚Äôs R Consortium Workshop: Analyzing Geospatial Data in R, using DC rather than Philadelphia open data.)\n\n\nCode\nlibrary(sf)\n# Load DC tracts data\ndc_sf_fpath &lt;- \"data/DC_Census_2020/Census_Tracts_in_2020.shp\"\ndc_sf &lt;- st_read(dc_sf_fpath);\n\n\nReading layer `Census_Tracts_in_2020' from data source \n  `/Users/jpj/gtown-local/ppol6805/w01/data/DC_Census_2020/Census_Tracts_in_2020.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 206 features and 315 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8584933 ymin: 4691871 xmax: -8561515 ymax: 4721078\nProjected CRS: WGS 84 / Pseudo-Mercator\n\n\nCode\ncols_to_keep &lt;- c(\"OBJECTID\", \"TRACT\", \"GEOID\", \"ALAND\", \"AWATER\", \"STUSAB\", \"SUMLEV\", \"GEOCODE\", \"STATE\", \"NAME\", \"POP100\", \"HU100\", \"geometry\")\ndc_sf &lt;- dc_sf |&gt; select(cols_to_keep)"
  },
  {
    "objectID": "w01/slides.html#what-is-an-sf-object",
    "href": "w01/slides.html#what-is-an-sf-object",
    "title": "Week 1: Introduction to GIS",
    "section": "What is an sf Object?",
    "text": "What is an sf Object?\n\ndc_sf is an object of type sf (short for ‚Äúsimple feature‚Äù), which extends data.frame, and contains features which have type POLYGON\n\n\n\n[1] \"sf\"         \"data.frame\"\n\n\nSimple feature collection with 6 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n2        2 002101 11001002101 600992      0     DC    140 11001002101    11\n3        3 002102 11001002102 725975      0     DC    140 11001002102    11\n4        4 002201 11001002201 415173      0     DC    140 11001002201    11\n5        5 002202 11001002202 698895    566     DC    140 11001002202    11\n6        6 000101 11001000101 199776   5261     DC    140 11001000101    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,...\n2 Census Tract 21.01   5687  2335 POLYGON ((-8574745 4715676,...\n3 Census Tract 21.02   5099  2221 POLYGON ((-8573824 4715684,...\n4 Census Tract 22.01   3485  1229 POLYGON ((-8574654 4714781,...\n5 Census Tract 22.02   3339  1454 POLYGON ((-8573792 4714811,...\n6  Census Tract 1.01   1406   999 POLYGON ((-8577962 4708867,..."
  },
  {
    "objectID": "w01/slides.html#working-with-sf-objects",
    "href": "w01/slides.html#working-with-sf-objects",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\nWith some rare but important exceptions (which we‚Äôll learn!), can be used just like a data.frame / tibble:\n\n\n\nCode\nstr(dc_sf)   # view structure\n\n\nClasses 'sf' and 'data.frame':  206 obs. of  13 variables:\n $ OBJECTID: int  1 2 3 4 5 6 7 8 9 10 ...\n $ TRACT   : chr  \"002002\" \"002101\" \"002102\" \"002201\" ...\n $ GEOID   : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ ALAND   : int  849376 600992 725975 415173 698895 199776 1706484 505004 776435 1042157 ...\n $ AWATER  : int  0 0 0 0 566 5261 516665 0 439661 2305 ...\n $ STUSAB  : chr  \"DC\" \"DC\" \"DC\" \"DC\" ...\n $ SUMLEV  : int  140 140 140 140 140 140 140 140 140 140 ...\n $ GEOCODE : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ STATE   : int  11 11 11 11 11 11 11 11 11 11 ...\n $ NAME    : chr  \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\" \"Census Tract 22.01\" ...\n $ POP100  : int  4072 5687 5099 3485 3339 1406 3417 4108 4672 6161 ...\n $ HU100   : int  1532 2335 2221 1229 1454 999 2053 11 2169 2845 ...\n $ geometry:sfc_POLYGON of length 206; first list element: List of 1\n  ..$ : num [1:155, 1:2] -8575655 -8575655 -8575655 -8575655 -8575655 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:12] \"OBJECTID\" \"TRACT\" \"GEOID\" \"ALAND\" ..."
  },
  {
    "objectID": "w01/slides.html#working-with-sf-objects-1",
    "href": "w01/slides.html#working-with-sf-objects-1",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf)  # view first several rows\n\n\nSimple feature collection with 6 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n2        2 002101 11001002101 600992      0     DC    140 11001002101    11\n3        3 002102 11001002102 725975      0     DC    140 11001002102    11\n4        4 002201 11001002201 415173      0     DC    140 11001002201    11\n5        5 002202 11001002202 698895    566     DC    140 11001002202    11\n6        6 000101 11001000101 199776   5261     DC    140 11001000101    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,...\n2 Census Tract 21.01   5687  2335 POLYGON ((-8574745 4715676,...\n3 Census Tract 21.02   5099  2221 POLYGON ((-8573824 4715684,...\n4 Census Tract 22.01   3485  1229 POLYGON ((-8574654 4714781,...\n5 Census Tract 22.02   3339  1454 POLYGON ((-8573792 4714811,...\n6  Census Tract 1.01   1406   999 POLYGON ((-8577962 4708867,..."
  },
  {
    "objectID": "w01/slides.html#working-with-sf-objects-2",
    "href": "w01/slides.html#working-with-sf-objects-2",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\ndim(dc_sf)   # view dimensions\n\n\n[1] 206  13\n\n\nCode\ndc_sf[1,]    # select first row\n\n\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8575656 ymin: 4713958 xmax: -8574562 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,..."
  },
  {
    "objectID": "w01/slides.html#working-with-sf-objects-3",
    "href": "w01/slides.html#working-with-sf-objects-3",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf$NAME)  # select column by name  \n\n\n[1] \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\"\n[4] \"Census Tract 22.01\" \"Census Tract 22.02\" \"Census Tract 1.01\" \n\n\nCode\nhead(dc_sf[,4])         # select column by number\n\n\nSimple feature collection with 6 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n   ALAND                       geometry\n1 849376 POLYGON ((-8575655 4714476,...\n2 600992 POLYGON ((-8574745 4715676,...\n3 725975 POLYGON ((-8573824 4715684,...\n4 415173 POLYGON ((-8574654 4714781,...\n5 698895 POLYGON ((-8573792 4714811,...\n6 199776 POLYGON ((-8577962 4708867,..."
  },
  {
    "objectID": "w01/slides.html#and-actually-displaying-the-map",
    "href": "w01/slides.html#and-actually-displaying-the-map",
    "title": "Week 1: Introduction to GIS",
    "section": "And‚Ä¶ Actually Displaying the Map!",
    "text": "And‚Ä¶ Actually Displaying the Map!\n\n\nCode\n# We can extract the geometry with the st_geometry function\ndc_geo &lt;- st_geometry(dc_sf)\n#pt_geo\n\n# Plot the geometry with base R's plot() function\nplot(dc_geo)"
  },
  {
    "objectID": "w01/slides.html#references",
    "href": "w01/slides.html#references",
    "title": "Week 1: Introduction to GIS",
    "section": "References",
    "text": "References\n\n\nMontessori, Maria. 1916. Spontaneous Activity in Education: A Basic Guide to the Montessori Methods of Learning in the Classroom. Lulu Press.\n\n\nRobert, Am√©lie. 2016. ‚ÄúAt the Heart of the Vietnam War: Herbicides, Napalm and Bulldozers Against the A L∆∞·ªõi Mountains.‚Äù Journal of Alpine Research  Revue de g√©ographie Alpine, no. 104-1 (April). https://doi.org/10.4000/rga.3266.\n\n\n\n\n\nPPOL 6805 Week 1: GIS Overview"
  },
  {
    "objectID": "w01/index.html",
    "href": "w01/index.html",
    "title": "Week 1: Introduction to GIS",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#your-final-project",
    "href": "w01/index.html#your-final-project",
    "title": "Week 1: Introduction to GIS",
    "section": "Your Final Project",
    "text": "Your Final Project",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#unit-1-maps",
    "href": "w01/index.html#unit-1-maps",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 1: Maps",
    "text": "Unit 1: Maps\n\nYour least favorite part of the course (per survey üòú)\nMy favorite part of the course (because I love overthinking things)\nMy goal given survey results: Let‚Äôs think of this unit like learning languages for expressing spatial information:\n\n\nlibrary(sf)\nlibrary(svglite)\nsvglite(\"images/st_polygon.svg\", width = 6, height = 4.5)\npoly_blob &lt;- st_polygon(\n  list(\n    rbind(c(2,1), c(3,1), c(5,2), c(6,3), c(5,3), c(4,4), c(3,4), c(1,3), c(2,1)),\n    rbind(c(2,2), c(3,3), c(4,3), c(4,2), c(2,2))\n  )\n)\nplot(poly_blob,\n  border = 'black', col = '#ff8888', lwd = 4\n)\ndev.off()\n\n\n\n\n\n\n\n\nTemporal Information\nSpatial Information\n\n\n\n\n\n\n\n\n\\(\\Rightarrow\\) 22.5 seconds\n\\(\\Rightarrow\\) POLYGON ((2 1, 3 1, 5 2, 6 3, 5 3, 4 4, 3 4, 1 3, 2 1),(2 2, 3 3, 4 3, 4 2, 2 2))\n\n\n\n\nI think you‚Äôll be surprised at how, complexity of geospatial/spatio-temporal data \\(\\implies\\) need for programming-language-independent representations",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#unit-2-using-code-to-make-maps",
    "href": "w01/index.html#unit-2-using-code-to-make-maps",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 2: Using Code to Make Maps",
    "text": "Unit 2: Using Code to Make Maps\n\n(More on this in Prereqs section below!)\nGiven representations from Part 1, the task of coding becomes task of finding ‚Äúbest‚Äù library for loading/manipulating/plotting them\n\nWhere ‚Äúbest‚Äù = best for you!\n\nIn R: sf and friends (tidyverse)\nIn Python: geopandas",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#unit-3-spatial-data-science",
    "href": "w01/index.html#unit-3-spatial-data-science",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 3: Spatial Data Science",
    "text": "Unit 3: Spatial Data Science\n\nDrawing inferences about spatial phenomena\nThe meat of the course\nHow can we write code (Unit 2) to analyze a map (Unit 1) so as to‚Ä¶\n\nDiscover patterns (EDA: Exploratory Data Analysis) or\nTest hypotheses (CDA: Confirmatory Data Analysis)",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#unit-4-applications-final-project",
    "href": "w01/index.html#unit-4-applications-final-project",
    "title": "Week 1: Introduction to GIS",
    "section": "Unit 4: Applications / Final Project",
    "text": "Unit 4: Applications / Final Project\n\nTake everything you‚Äôve learned in Units 1-3 and Kamehameha them onto something you care about in the world!\nPublic Policy: Which counties are most in need of more transportation infrastructure?\nUrban Planning: Which neighborhoods are most in need of a new bus stop?\nEpidemiology: What properties of a region make it more/less susceptible to infectious diseases? Where should we intervene to ‚Äúcut the chain‚Äù of a disease vector?",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#my-gis-adventures",
    "href": "w01/index.html#my-gis-adventures",
    "title": "Week 1: Introduction to GIS",
    "section": "My GIS Adventures",
    "text": "My GIS Adventures\n\nHigh school project: mine defusal in Indochina\nAs a Telecommunications Engineer for Huawei (HKUST)\nAs an Urban Economist at UC Berkeley\n\nUsed, e.g., Google Maps API to evaluate effects of Suburbanization of Poverty",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#my-gis-moment",
    "href": "w01/index.html#my-gis-moment",
    "title": "Week 1: Introduction to GIS",
    "section": "My GIS ü§Ø Moment",
    "text": "My GIS ü§Ø Moment\n\n\n\nHorrors of ‚ÄúVietnam War‚Äù did not end in 1975‚Ä¶ Casualties from unexploded ordnance (cluster bombs) continue to devastate the region, over 220,000 victims:\n\n&gt;105K in Vietnam\n&gt;50K in Laos\n&gt;65K in Cambodia\n\n\n\n\n\n\nFrom Robert (2016)",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#huawei-optimizing-cell-tower-placement",
    "href": "w01/index.html#huawei-optimizing-cell-tower-placement",
    "title": "Week 1: Introduction to GIS",
    "section": "Huawei: Optimizing Cell Tower Placement",
    "text": "Huawei: Optimizing Cell Tower Placement\n\n\n\nFrom LTE 4G/5G Self-Organizing Networks",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#the-suburbanization-of-poverty",
    "href": "w01/index.html#the-suburbanization-of-poverty",
    "title": "Week 1: Introduction to GIS",
    "section": "The Suburbanization of Poverty",
    "text": "The Suburbanization of Poverty\n\nSince 2008, a person living in poverty in the US is more likely to be in a suburb than an ‚Äúinner city‚Äù\nWhat does this mean for‚Ä¶\n\nAccess to Food / Public Services?\nFinding a job \\(\\leadsto\\) Commuting?\n\nMy job: computing ‚Äúsuburban accessibility indices‚Äù\nDoes commuting = straight line distance?",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#distance-vs.-distance",
    "href": "w01/index.html#distance-vs.-distance",
    "title": "Week 1: Introduction to GIS",
    "section": "‚ÄúDistance‚Äù vs.¬†Distance!",
    "text": "‚ÄúDistance‚Äù vs.¬†Distance!\n\nYou‚Äôve just been hired as a fine art curator at The Whitney‚Ä¶ Congratulations!\n\n\n\n\n\n\n\n\nCommuting 1 mile to the Whitney\n\n\n\nAlso commuting 1 mile to the Whitney",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#as-humans",
    "href": "w01/index.html#as-humans",
    "title": "Week 1: Introduction to GIS",
    "section": "As Humans",
    "text": "As Humans\n\nTo understand the world around you!\n\n\n\n\nCharles Dupin, Carte figurative de l‚Äôinstruction populaire de la France (1826)\n\n\n\n\\(\\implies\\) Crucial landmark in the genesis of social science",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#as-data-scientists",
    "href": "w01/index.html#as-data-scientists",
    "title": "Week 1: Introduction to GIS",
    "section": "As Data Scientists",
    "text": "As Data Scientists\n\nAll data scientists are expected to know how to analyze ‚Äústandard‚Äù types of data: tabular, numeric data (think spreadsheets)\nHowever, you can differentiate yourself in the scary scary job market by developing a particular focus on some ‚Äúnon-standard‚Äù type:\n\n\nHello Mr.¬†Google Musk, yes, indeed, I have a wealth of experience working with [text data / temporal data / signal processing / geospatial data]. This job will be no problem for me.",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#as-public-policy-experts",
    "href": "w01/index.html#as-public-policy-experts",
    "title": "Week 1: Introduction to GIS",
    "section": "As Public Policy Experts",
    "text": "As Public Policy Experts\n\nOftentimes, all it takes is one map to see why a policy has failed üò±\n\n\n\n\nWho can guess what this map represents? (Source)\n\n\n\nhttp://www.radicalcartography.net/index.html?chicagodots, then adapted to DC: ‚Äú[Eric Fisher] was astounded by Bill Rankin‚Äôs map of Chicago‚Äôs racial and ethnic divides and wanted to see what other cities looked like mapped the same way. To match his map, Red is White, Blue is Black, Green is Asian, Orange is Hispanic, Gray is Other, and each dot is 25 people. Data from Census 2000. Base map ¬© OpenStreetMap, CC-BY-SA‚Äù https://commons.wikimedia.org/wiki/File:Race_and_ethnicity_map_of_Washington,_D.C..png",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#its-completely-made-up",
    "href": "w01/index.html#its-completely-made-up",
    "title": "Week 1: Introduction to GIS",
    "section": "It‚Äôs Completely Made Up",
    "text": "It‚Äôs Completely Made Up\nLike, even more made up than other made-up technical terms‚Ä¶ üòµ‚Äçüí´",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#what-i-mean-by-made-up",
    "href": "w01/index.html#what-i-mean-by-made-up",
    "title": "Week 1: Introduction to GIS",
    "section": "What I Mean By ‚ÄúMade Up‚Äù",
    "text": "What I Mean By ‚ÄúMade Up‚Äù\n\nThe libraries and tools we‚Äôll use are specific systems/methods for analyzing geospatial data\nGIS is an ‚Äúumbrella term‚Äù, which just vaguely refers to this entire universe of libraries/tools/techniques/approaches\n\n\n\n\n\n\n\n\n\nUmbrella Term\nConcepts\nSpecific Skills\n\n\n\n\nCoding\n\nVariables\nControl Flow\nAlgorithms\n\n\nPython\nR\nJavaScript\n\n\n\nGIS\n\nProjections\nVector vs.¬†Raster\nSpatial Data Formats (shapefiles, .geojson)\n\n\nArcGIS\nGeoPandas (Python)\nsf (R)",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#arcgis",
    "href": "w01/index.html#arcgis",
    "title": "Week 1: Introduction to GIS",
    "section": "ArcGIS",
    "text": "ArcGIS\n\nFor info on Georgetown‚Äôs provision of ArcGIS (Online, Pro, and Desktop), see the Library Guide\n\n\n\n\nUkraine Level-1 Administrative Regions Map (see CDTO talk)",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#then-why-cant-we-just-use-arcgis",
    "href": "w01/index.html#then-why-cant-we-just-use-arcgis",
    "title": "Week 1: Introduction to GIS",
    "section": "Then‚Ä¶ Why Can‚Äôt We Just Use ArcGIS?",
    "text": "Then‚Ä¶ Why Can‚Äôt We Just Use ArcGIS?\nAnalogy from non-geospatial data science:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nText\nDrawn Map\n‚Üí\nSpeadsheet\nDigital Map\n‚Üí\nEquations\nMaps w/ArcGIS\n‚Üí\nCode\nThis Class\n\n\n\n\n Start writing\n\n\ninfo.txt\n\nI gave Ana $3, then Ana paid me back $2. [...]\n\n Realize there‚Äôs regularity/structure ü§î\n Start entering info in rows\n\n\n\nFr\nTo\nAmt\nBal\n\n\n\n\nMe\nAna\n$3\n-$3\n\n\nAna\nMe\n$2\n-$1\n\n\n\n Realize you‚Äôre manually computing things that could be automated ü§î\n Start using equations\n\n\n\nFr\nTo\nAmt\nBal\n\n\n\n\nMe\nAna\n$3\n=0-C1\n\n\nAna\nMe\n$2\n=D1-C2\n\n\n\n Realize you need fancier equations, and/or need to coordinate with inputs (APIs), outputs (plotting libraries) ü§î\n Write code\n\n\nplot_balance.py\n\nimport pandas as pd\ndf = pd.read_csv(...)\ncalc_weekly_balance()\ndf.plot()\n\n \n Profit üí≤üí∞ü§ëüí∞üí≤",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#the-spatial-data-science-universe",
    "href": "w01/index.html#the-spatial-data-science-universe",
    "title": "Week 1: Introduction to GIS",
    "section": "The Spatial Data Science Universe",
    "text": "The Spatial Data Science Universe\n\n\n\n\n\n\nWe‚Äôll cover key ‚Äúpieces‚Äù:  GDAL (Geospatial Data Abstraction Library),  PROJ for converting between projections,  GEOS for computational geometry",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#pedagogical-principles",
    "href": "w01/index.html#pedagogical-principles",
    "title": "Week 1: Introduction to GIS",
    "section": "Pedagogical Principles",
    "text": "Pedagogical Principles\n\nThere‚Äôs literally no such thing as ‚Äúintelligence‚Äù\nAnyone is capable of learning anything (neural plasticity)\nGrowth mindset: ‚ÄúI can‚Äôt do this‚Äù \\(\\leadsto\\) ‚ÄúI can‚Äôt do this yet!‚Äù\nThe point of a class is learning: understanding something about the world, either (a) For its own sake (end in itself) or (b) Because it‚Äôs relevant to something you care about (means to an end)\n\n\n\nOur teaching should be governed, not by a desire to make students learn things, but by the endeavor to keep burning within them that light which is called curiosity. (Montessori 1916)",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#chatgpt-and-whatnot",
    "href": "w01/index.html#chatgpt-and-whatnot",
    "title": "Week 1: Introduction to GIS",
    "section": "ChatGPT and Whatnot",
    "text": "ChatGPT and Whatnot\n\nIf you feel like ChatGPT will help you learn something in the course, then use it!\nIf you feel like you‚Äôre using it as a ‚Äúcrutch‚Äù, try to hold yourself accountable for not using it!\n\n\n\n\n\n\n\n\nTake the time/energy you're using to worry about...\nUse it instead to worry about...\n\n\n\n\n\nChatGPT\nCollaboration Policies\nPlagiarism\n\nLearning GIS",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#i-am-the-opposite-of-a-prereq-stickler",
    "href": "w01/index.html#i-am-the-opposite-of-a-prereq-stickler",
    "title": "Week 1: Introduction to GIS",
    "section": "I Am The Opposite of a Prereq-Stickler",
    "text": "I Am The Opposite of a Prereq-Stickler\n\nI genuinely believe that I can make the course accessible to you, meeting you wherever you‚Äôre at, no matter what!\nEveryone learns at their own pace (who says 14 weeks is ‚Äúcorrect‚Äù amount of time to learn GIS?), and I structure my courses as best as I possibly can to adapt to your pace\n\\(\\Rightarrow\\) Assessments (HW, Midterm) valuable in two ways:\n[Valuable for you] As an accountability mechanism to make sure you‚Äôre learn the material (how do we know when we‚Äôve learned something? When we can answer questions about it / use it to accomplish things!)\n[Valuable for me] For assessing and updating pace",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#r-andor-python-andor-js",
    "href": "w01/index.html#r-andor-python-andor-js",
    "title": "Week 1: Introduction to GIS",
    "section": "R and/or Python and/or JS",
    "text": "R and/or Python and/or JS\n\nMy Geometry vs.¬†Algebra Rant‚Ä¶ Euclid‚Äôs Elements, Book VI, Proposition 28.\nThe problem: Divide a given straight line so that the rectangle contained by its segments may be equal to a given area, not exceeding the square of half the line.\n\n\n\nGeometers solved w/geometry (300 BC)‚Ä¶\n\n\n\n\n\n\n‚Ä¶Algebraists solved w/algebra (2000 BC)‚Ä¶\n\\[\n\\begin{align*}\n&ax^2 + bx + c = 0 \\\\\n\\Rightarrow \\; & x_+ = \\frac{-b + \\sqrt{b^2 - 4ac}}{2a}\n\\end{align*}\n\\]\n‚Ä¶From 1637 onwards, whichever is easier! ü§Øü§Øü§Ø (Isomorphism)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFig¬†1: Circle with radius 1? Or \\((x,y)\\) satisfying \\(x^2 + y^2 = 1\\)?",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#learning-how-to-learn",
    "href": "w01/index.html#learning-how-to-learn",
    "title": "Week 1: Introduction to GIS",
    "section": "Learning How To Learn",
    "text": "Learning How To Learn\n\n\n\n\n\n\nFig¬†2: From The Carter (Documentary)",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#hes-literally-extremely-correct",
    "href": "w01/index.html#hes-literally-extremely-correct",
    "title": "Week 1: Introduction to GIS",
    "section": "He‚Äôs Literally Extremely Correct!",
    "text": "He‚Äôs Literally Extremely Correct!\n\n\n\nFrom Elsevier Osmosis: Spaced Repetition",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#our-first-map-polygons",
    "href": "w01/index.html#our-first-map-polygons",
    "title": "Week 1: Introduction to GIS",
    "section": "Our First Map: Polygons!",
    "text": "Our First Map: Polygons!\n(Quick demo adapted from Sherry Xie‚Äôs R Consortium Workshop: Analyzing Geospatial Data in R, using DC rather than Philadelphia open data.)\n\n\nCode\nlibrary(sf)\n# Load DC tracts data\ndc_sf_fpath &lt;- \"data/DC_Census_2020/Census_Tracts_in_2020.shp\"\ndc_sf &lt;- st_read(dc_sf_fpath);\n\n\nReading layer `Census_Tracts_in_2020' from data source \n  `/Users/jpj/gtown-local/ppol6805/w01/data/DC_Census_2020/Census_Tracts_in_2020.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 206 features and 315 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8584933 ymin: 4691871 xmax: -8561515 ymax: 4721078\nProjected CRS: WGS 84 / Pseudo-Mercator\n\n\nCode\ncols_to_keep &lt;- c(\"OBJECTID\", \"TRACT\", \"GEOID\", \"ALAND\", \"AWATER\", \"STUSAB\", \"SUMLEV\", \"GEOCODE\", \"STATE\", \"NAME\", \"POP100\", \"HU100\", \"geometry\")\ndc_sf &lt;- dc_sf |&gt; select(cols_to_keep)\n\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\n‚Ñπ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(cols_to_keep)\n\n  # Now:\n  data %&gt;% select(all_of(cols_to_keep))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#what-is-an-sf-object",
    "href": "w01/index.html#what-is-an-sf-object",
    "title": "Week 1: Introduction to GIS",
    "section": "What is an sf Object?",
    "text": "What is an sf Object?\n\ndc_sf is an object of type sf (short for ‚Äúsimple feature‚Äù), which extends data.frame, and contains features which have type POLYGON\n\n\nclass(dc_sf)\n\n[1] \"sf\"         \"data.frame\"\n\nhead(dc_sf)\n\nSimple feature collection with 6 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n2        2 002101 11001002101 600992      0     DC    140 11001002101    11\n3        3 002102 11001002102 725975      0     DC    140 11001002102    11\n4        4 002201 11001002201 415173      0     DC    140 11001002201    11\n5        5 002202 11001002202 698895    566     DC    140 11001002202    11\n6        6 000101 11001000101 199776   5261     DC    140 11001000101    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,...\n2 Census Tract 21.01   5687  2335 POLYGON ((-8574745 4715676,...\n3 Census Tract 21.02   5099  2221 POLYGON ((-8573824 4715684,...\n4 Census Tract 22.01   3485  1229 POLYGON ((-8574654 4714781,...\n5 Census Tract 22.02   3339  1454 POLYGON ((-8573792 4714811,...\n6  Census Tract 1.01   1406   999 POLYGON ((-8577962 4708867,...",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#working-with-sf-objects",
    "href": "w01/index.html#working-with-sf-objects",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\nWith some rare but important exceptions (which we‚Äôll learn!), can be used just like a data.frame / tibble:\n\n\n\nCode\nstr(dc_sf)   # view structure\n\n\nClasses 'sf' and 'data.frame':  206 obs. of  13 variables:\n $ OBJECTID: int  1 2 3 4 5 6 7 8 9 10 ...\n $ TRACT   : chr  \"002002\" \"002101\" \"002102\" \"002201\" ...\n $ GEOID   : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ ALAND   : int  849376 600992 725975 415173 698895 199776 1706484 505004 776435 1042157 ...\n $ AWATER  : int  0 0 0 0 566 5261 516665 0 439661 2305 ...\n $ STUSAB  : chr  \"DC\" \"DC\" \"DC\" \"DC\" ...\n $ SUMLEV  : int  140 140 140 140 140 140 140 140 140 140 ...\n $ GEOCODE : chr  \"11001002002\" \"11001002101\" \"11001002102\" \"11001002201\" ...\n $ STATE   : int  11 11 11 11 11 11 11 11 11 11 ...\n $ NAME    : chr  \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\" \"Census Tract 22.01\" ...\n $ POP100  : int  4072 5687 5099 3485 3339 1406 3417 4108 4672 6161 ...\n $ HU100   : int  1532 2335 2221 1229 1454 999 2053 11 2169 2845 ...\n $ geometry:sfc_POLYGON of length 206; first list element: List of 1\n  ..$ : num [1:155, 1:2] -8575655 -8575655 -8575655 -8575655 -8575655 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:12] \"OBJECTID\" \"TRACT\" \"GEOID\" \"ALAND\" ...",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#working-with-sf-objects-1",
    "href": "w01/index.html#working-with-sf-objects-1",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf)  # view first several rows\n\n\nSimple feature collection with 6 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n2        2 002101 11001002101 600992      0     DC    140 11001002101    11\n3        3 002102 11001002102 725975      0     DC    140 11001002102    11\n4        4 002201 11001002201 415173      0     DC    140 11001002201    11\n5        5 002202 11001002202 698895    566     DC    140 11001002202    11\n6        6 000101 11001000101 199776   5261     DC    140 11001000101    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,...\n2 Census Tract 21.01   5687  2335 POLYGON ((-8574745 4715676,...\n3 Census Tract 21.02   5099  2221 POLYGON ((-8573824 4715684,...\n4 Census Tract 22.01   3485  1229 POLYGON ((-8574654 4714781,...\n5 Census Tract 22.02   3339  1454 POLYGON ((-8573792 4714811,...\n6  Census Tract 1.01   1406   999 POLYGON ((-8577962 4708867,...",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#working-with-sf-objects-2",
    "href": "w01/index.html#working-with-sf-objects-2",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\ndim(dc_sf)   # view dimensions\n\n\n[1] 206  13\n\n\nCode\ndc_sf[1,]    # select first row\n\n\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8575656 ymin: 4713958 xmax: -8574562 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n  OBJECTID  TRACT       GEOID  ALAND AWATER STUSAB SUMLEV     GEOCODE STATE\n1        1 002002 11001002002 849376      0     DC    140 11001002002    11\n                NAME POP100 HU100                       geometry\n1 Census Tract 20.02   4072  1532 POLYGON ((-8575655 4714476,...",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#working-with-sf-objects-3",
    "href": "w01/index.html#working-with-sf-objects-3",
    "title": "Week 1: Introduction to GIS",
    "section": "Working With sf Objects",
    "text": "Working With sf Objects\n\n\nCode\nhead(dc_sf$NAME)  # select column by name  \n\n\n[1] \"Census Tract 20.02\" \"Census Tract 21.01\" \"Census Tract 21.02\"\n[4] \"Census Tract 22.01\" \"Census Tract 22.02\" \"Census Tract 1.01\" \n\n\nCode\nhead(dc_sf[,4])         # select column by number\n\n\nSimple feature collection with 6 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -8577962 ymin: 4708107 xmax: -8572564 ymax: 4716136\nProjected CRS: WGS 84 / Pseudo-Mercator\n   ALAND                       geometry\n1 849376 POLYGON ((-8575655 4714476,...\n2 600992 POLYGON ((-8574745 4715676,...\n3 725975 POLYGON ((-8573824 4715684,...\n4 415173 POLYGON ((-8574654 4714781,...\n5 698895 POLYGON ((-8573792 4714811,...\n6 199776 POLYGON ((-8577962 4708867,...",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#and-actually-displaying-the-map",
    "href": "w01/index.html#and-actually-displaying-the-map",
    "title": "Week 1: Introduction to GIS",
    "section": "And‚Ä¶ Actually Displaying the Map!",
    "text": "And‚Ä¶ Actually Displaying the Map!\n\n\nCode\n# We can extract the geometry with the st_geometry function\ndc_geo &lt;- st_geometry(dc_sf)\n#pt_geo\n\n# Plot the geometry with base R's plot() function\nplot(dc_geo)",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w01/index.html#references",
    "href": "w01/index.html#references",
    "title": "Week 1: Introduction to GIS",
    "section": "References",
    "text": "References\n\n\nMontessori, Maria. 1916. Spontaneous Activity in Education: A Basic Guide to the Montessori Methods of Learning in the Classroom. Lulu Press.\n\n\nRobert, Am√©lie. 2016. ‚ÄúAt the Heart of the Vietnam War: Herbicides, Napalm and Bulldozers Against the A L∆∞·ªõi Mountains.‚Äù Journal of Alpine Research  Revue de g√©ographie Alpine, no. 104-1 (April). https://doi.org/10.4000/rga.3266.",
    "crumbs": [
      "Week 1: Aug 28"
    ]
  },
  {
    "objectID": "w02/slides.html#end-of-last-week-vector-data",
    "href": "w02/slides.html#end-of-last-week-vector-data",
    "title": "Week 2: How Do Maps Work?",
    "section": "End of Last Week: Vector Data",
    "text": "End of Last Week: Vector Data\n\n\nCode\nlibrary(sf)\nlibrary(tidyverse)\n# Load DC tracts data\ndc_sf_fpath &lt;- \"data/DC_Census_2020/Census_Tracts_in_2020.shp\"\ndc_sf &lt;- st_read(dc_sf_fpath, quiet = TRUE)\ncols_to_keep &lt;- c(\"OBJECTID\", \"TRACT\", \"GEOID\", \"ALAND\", \"AWATER\", \"STUSAB\", \"SUMLEV\", \"GEOCODE\", \"STATE\", \"NAME\", \"POP100\", \"HU100\", \"geometry\")\ndc_sf &lt;- dc_sf |&gt; select(cols_to_keep)\n# We can extract the geometry with the st_geometry function\ndc_geo &lt;- st_geometry(dc_sf)\n# And plot the geometry with base R's plot() function\nplot(dc_geo, mar = c(0,0,0,0))"
  },
  {
    "objectID": "w02/slides.html#now-with-ggplot",
    "href": "w02/slides.html#now-with-ggplot",
    "title": "Week 2: How Do Maps Work?",
    "section": "Now with ggplot!",
    "text": "Now with ggplot!\n\n\nCode\nggplot2::theme_set(ggplot2::theme_classic())\ndc_sf |&gt;\n  ggplot() +\n  geom_sf()"
  },
  {
    "objectID": "w02/slides.html#raster-data",
    "href": "w02/slides.html#raster-data",
    "title": "Week 2: How Do Maps Work?",
    "section": "Raster Data",
    "text": "Raster Data\n\nEach DC Census Tract has its own (odd) shape, which can be described by discrete coordinates forming a POLYGON\nFor geospatial analysis, however, we often need to compute over evenly-spaced grids rather than this odd collection of shapes\nPOLYGONs may make sense for demographers, but how about someone studying air pollution in DC? (Smog, for example, does not confine itself to census tracts!)"
  },
  {
    "objectID": "w02/slides.html#step-1-union-of-all-tracts",
    "href": "w02/slides.html#step-1-union-of-all-tracts",
    "title": "Week 2: How Do Maps Work?",
    "section": "Step 1: Union of All Tracts",
    "text": "Step 1: Union of All Tracts\n\n\nCode\ndc_union_sf &lt;- sf::st_union(dc_sf)\ndc_union_sf |&gt;\n  ggplot() +\n  geom_sf()"
  },
  {
    "objectID": "w02/slides.html#step-2-rasterize-terra",
    "href": "w02/slides.html#step-2-rasterize-terra",
    "title": "Week 2: How Do Maps Work?",
    "section": "Step 2: Rasterize (terra)",
    "text": "Step 2: Rasterize (terra)\n\n\nCode\nlibrary(terra)\ndc_SpatVector &lt;- terra::vect(dc_union_sf)\nrast_template &lt;- rast(ext(dc_SpatVector), resolution = 1000, crs = crs(dc_SpatVector))\ndc_SpatRaster &lt;- terra::rasterize(dc_SpatVector, rast_template)\ndim(dc_SpatRaster)\n\n\n[1] 29 23  1\n\n\nCode\nplot(dc_SpatRaster)"
  },
  {
    "objectID": "w02/slides.html#and-with-tidyterra",
    "href": "w02/slides.html#and-with-tidyterra",
    "title": "Week 2: How Do Maps Work?",
    "section": "And with tidyterra",
    "text": "And with tidyterra\n\n\nCode\nlibrary(tidyterra)\nggplot(data=dc_SpatRaster, aes(fill=layer)) +\n  geom_spatraster(data=dc_SpatRaster)"
  },
  {
    "objectID": "w02/slides.html#rasters-from-scratch",
    "href": "w02/slides.html#rasters-from-scratch",
    "title": "Week 2: How Do Maps Work?",
    "section": "Rasters From Scratch",
    "text": "Rasters From Scratch\nWelcome to Gridtown!\n\n\n\nCode\nset.seed(6805)\nlibrary(terra)\ngridtown &lt;- terra::rast(\n  nrows = 4, ncols = 4,\n  xmin = 0, xmax = 4, ymin = 0, ymax = 4,\n  vals = sample(1:16)\n)\nplot(gridtown)\ntext(\n  gridtown,\n  labels=1:16,\n  halo=TRUE, hc=\"black\", col=\"white\", hw=0.2\n)\n\n\n\n\n\n\n\n\n\nFigure¬†1: Gridtown Indices\n\n\n\n\n\n\nRaster indices vs.¬†values: The above plot displays indices for each cell: since a raster is a regular grid, can achieve memory-efficient representation with a single index (rather than, e.g., \\((x, y)\\) coords). But what we really care about are‚Ä¶"
  },
  {
    "objectID": "w02/slides.html#raster-layer-values",
    "href": "w02/slides.html#raster-layer-values",
    "title": "Week 2: How Do Maps Work?",
    "section": "Raster Layer Values",
    "text": "Raster Layer Values\n\n\nCode\nplot(gridtown)\ntext(gridtown, halo=TRUE, hc=\"black\", col=\"white\", hw=0.2)\n\n\n\n\nFigure¬†2: Gridtown Values"
  },
  {
    "objectID": "w02/slides.html#latitude-and-longitude-are-angles",
    "href": "w02/slides.html#latitude-and-longitude-are-angles",
    "title": "Week 2: How Do Maps Work?",
    "section": "Latitude and Longitude are Angles!",
    "text": "Latitude and Longitude are Angles!\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "w02/slides.html#angular-distance-vs.-travel-distance",
    "href": "w02/slides.html#angular-distance-vs.-travel-distance",
    "title": "Week 2: How Do Maps Work?",
    "section": "Angular Distance vs.¬†Travel Distance",
    "text": "Angular Distance vs.¬†Travel Distance\nThe Earth‚Äôs ‚Äúwidth‚Äù is slightly greater than its ‚Äúlength‚Äù üò∞\n\nFrom Wikimedia Commons"
  },
  {
    "objectID": "w02/slides.html#smooshing-3d-into-2d",
    "href": "w02/slides.html#smooshing-3d-into-2d",
    "title": "Week 2: How Do Maps Work?",
    "section": "Smooshing 3D into 2D",
    "text": "Smooshing 3D into 2D\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w02/slides.html#avoid-getting-lost-in-the-sauce",
    "href": "w02/slides.html#avoid-getting-lost-in-the-sauce",
    "title": "Week 2: How Do Maps Work?",
    "section": "Avoid Getting Lost in the Sauce",
    "text": "Avoid Getting Lost in the Sauce"
  },
  {
    "objectID": "w02/slides.html#how-to-avoid-getting-lost-in-the-sauce",
    "href": "w02/slides.html#how-to-avoid-getting-lost-in-the-sauce",
    "title": "Week 2: How Do Maps Work?",
    "section": "How To Avoid Getting Lost in the Sauce",
    "text": "How To Avoid Getting Lost in the Sauce\n\n\n\n\n\nTissot Circles: Imagine infinitely small ellipses placed at regular intervals on the curved surface of the earth. Imagine these ellipses being projected along with the earth‚Äôs surface. When scaled up, changes in the ellipses show the location and quality of distortions on the projected map."
  },
  {
    "objectID": "w02/slides.html#scales-wrules-of-thumb",
    "href": "w02/slides.html#scales-wrules-of-thumb",
    "title": "Week 2: How Do Maps Work?",
    "section": "Scales (w/Rules of Thumb)",
    "text": "Scales (w/Rules of Thumb)\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "w02/slides.html#the-three-key-elements",
    "href": "w02/slides.html#the-three-key-elements",
    "title": "Week 2: How Do Maps Work?",
    "section": "The Three Key Elements",
    "text": "The Three Key Elements\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w02/slides.html#what-can-happen-to-points",
    "href": "w02/slides.html#what-can-happen-to-points",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Can Happen to Points?",
    "text": "What Can Happen to Points?\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w02/slides.html#what-can-happen-to-lines",
    "href": "w02/slides.html#what-can-happen-to-lines",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Can Happen to Lines?",
    "text": "What Can Happen to Lines?\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w02/slides.html#what-can-happen-to-lines-1",
    "href": "w02/slides.html#what-can-happen-to-lines-1",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Can Happen to Lines?",
    "text": "What Can Happen to Lines?\n\n\nSelection\n\n\n\nIn any map, most features from the human or natural environment are eliminated! (Krygier and Wood 2016)\n\n\n\nSimplification\n\n\n\nWithin the features that do remain, eliminate details that are unnecessary with respect to audience/context (Krygier and Wood 2016)"
  },
  {
    "objectID": "w02/slides.html#what-can-happen-to-areas",
    "href": "w02/slides.html#what-can-happen-to-areas",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Can Happen to Areas?",
    "text": "What Can Happen to Areas?\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w02/slides.html#areal-dimension-change",
    "href": "w02/slides.html#areal-dimension-change",
    "title": "Week 2: How Do Maps Work?",
    "section": "Areal Dimension Change",
    "text": "Areal Dimension Change\n\nFrom Krygier and Wood (2016)"
  },
  {
    "objectID": "w02/slides.html#what-is-gained",
    "href": "w02/slides.html#what-is-gained",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Is Gained?",
    "text": "What Is Gained?\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w02/slides.html#what-is-lost",
    "href": "w02/slides.html#what-is-lost",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Is Lost?",
    "text": "What Is Lost?\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w02/slides.html#who-is-affected",
    "href": "w02/slides.html#who-is-affected",
    "title": "Week 2: How Do Maps Work?",
    "section": "Who Is Affected?",
    "text": "Who Is Affected?\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w02/slides.html#having-domain-knowledge-of-a-region",
    "href": "w02/slides.html#having-domain-knowledge-of-a-region",
    "title": "Week 2: How Do Maps Work?",
    "section": "Having Domain Knowledge of a Region",
    "text": "Having Domain Knowledge of a Region\n\nFrom XKCD"
  },
  {
    "objectID": "w02/slides.html#crime-in-mongolia",
    "href": "w02/slides.html#crime-in-mongolia",
    "title": "Week 2: How Do Maps Work?",
    "section": "Crime in Mongolia",
    "text": "Crime in Mongolia\n\nFrom Reddit"
  },
  {
    "objectID": "w02/slides.html#population-of-mongolia",
    "href": "w02/slides.html#population-of-mongolia",
    "title": "Week 2: How Do Maps Work?",
    "section": "Population of Mongolia",
    "text": "Population of Mongolia\n\nFrom Wikimedia Commons"
  },
  {
    "objectID": "w02/slides.html#exhibit-a",
    "href": "w02/slides.html#exhibit-a",
    "title": "Week 2: How Do Maps Work?",
    "section": "Exhibit A",
    "text": "Exhibit A\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w02/slides.html#exhibit-b",
    "href": "w02/slides.html#exhibit-b",
    "title": "Week 2: How Do Maps Work?",
    "section": "Exhibit B",
    "text": "Exhibit B\n\nFrom Monmonier (2018)"
  },
  {
    "objectID": "w02/slides.html#country-boundaries",
    "href": "w02/slides.html#country-boundaries",
    "title": "Week 2: How Do Maps Work?",
    "section": "Country Boundaries",
    "text": "Country Boundaries\nKey package: rnaturalearth\n\n\nCode\nlibrary(rnaturalearth)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(viridis)\nlibrary(patchwork)\nmap1 &lt;- ne_countries(type = \"countries\", country = \"Germany\", scale = \"medium\", returnclass = \"sf\")\nmap2 &lt;- rnaturalearth::ne_states(\"Germany\", returnclass = \"sf\")\n(ggplot(map1) + geom_sf()) + (ggplot(map2) + geom_sf())"
  },
  {
    "objectID": "w02/slides.html#climate-data",
    "href": "w02/slides.html#climate-data",
    "title": "Week 2: How Do Maps Work?",
    "section": "Climate Data",
    "text": "Climate Data\nKey package: geodata\n\n\nCode\nlibrary(geodata)\nd &lt;- worldclim_country(country = \"Jamaica\", var = \"tmin\",\n                       path = tempdir())\nterra::plot(mean(d), plg = list(title = \"Min. temperature (C)\"))"
  },
  {
    "objectID": "w02/slides.html#elevation",
    "href": "w02/slides.html#elevation",
    "title": "Week 2: How Do Maps Work?",
    "section": "Elevation",
    "text": "Elevation\nKey packages: rnaturalearth + elevatr\n\n\nCode\nlibrary(rnaturalearth)\nlibrary(elevatr)\nlibrary(terra)\nmap &lt;- ne_countries(type = \"countries\", country = \"Switzerland\",\n                    scale = \"medium\", returnclass = \"sf\")\nd &lt;- get_elev_raster(locations = map, z = 9, clip = \"locations\")\nterra::plot(rast(d), plg = list(title = \"Elevation (m)\"))"
  },
  {
    "objectID": "w02/slides.html#street-maps",
    "href": "w02/slides.html#street-maps",
    "title": "Week 2: How Do Maps Work?",
    "section": "Street Maps",
    "text": "Street Maps\n\n\nCode\nlibrary(osmdata)\nplacebb &lt;- getbb(\"Barcelona\")\nhospitals &lt;- placebb %&gt;% opq() %&gt;%\n  add_osm_feature(key = \"amenity\", value = \"hospital\") %&gt;%\n  osmdata_sf()\nmotorways &lt;- placebb %&gt;% opq() %&gt;%\n  add_osm_feature(key = \"highway\", value = \"motorway\") %&gt;%\n  osmdata_sf()\nlibrary(leaflet)\nleaflet() |&gt;  addTiles() |&gt;\n  addPolylines(data = motorways$osm_lines, color = \"black\") |&gt;\n  addPolygons(data = hospitals$osm_polygons,\n              label = hospitals$osm_polygons$name)"
  },
  {
    "objectID": "w02/slides.html#world-bank-dataverse",
    "href": "w02/slides.html#world-bank-dataverse",
    "title": "Week 2: How Do Maps Work?",
    "section": "World Bank Dataverse",
    "text": "World Bank Dataverse\nKey package: wbstats\n\n\nCode\nlibrary(wbstats)\nd &lt;- wb_data(indicator = \"MO.INDEX.HDEV.XQ\",\n             start_date = 2011, end_date = 2011)\nlibrary(rnaturalearth)\nlibrary(mapview)\nmap &lt;- ne_countries(continent = \"Africa\", returnclass = \"sf\")\nmap &lt;- dplyr::left_join(map, d, by = c(\"iso_a3\" = \"iso3c\"))\nmapview(map, zcol = \"MO.INDEX.HDEV.XQ\")"
  },
  {
    "objectID": "w02/slides.html#references",
    "href": "w02/slides.html#references",
    "title": "Week 2: How Do Maps Work?",
    "section": "References",
    "text": "References\n\n\nKrygier, John, and Denis Wood. 2016. Making Maps, Third Edition: A Visual Guide to Map Design for GIS. Guilford Publications.\n\n\nMonmonier, Mark. 2018. How to Lie with Maps. University of Chicago Press.\n\n\n\n\n\nPPOL 6805 Week 2: How Do Maps Work?"
  },
  {
    "objectID": "w02/index.html",
    "href": "w02/index.html",
    "title": "Week 2: How Do Maps Work?",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#end-of-last-week-vector-data",
    "href": "w02/index.html#end-of-last-week-vector-data",
    "title": "Week 2: How Do Maps Work?",
    "section": "End of Last Week: Vector Data",
    "text": "End of Last Week: Vector Data\n\n\nCode\nlibrary(sf)\nlibrary(tidyverse)\n# Load DC tracts data\ndc_sf_fpath &lt;- \"data/DC_Census_2020/Census_Tracts_in_2020.shp\"\ndc_sf &lt;- st_read(dc_sf_fpath, quiet = TRUE)\ncols_to_keep &lt;- c(\"OBJECTID\", \"TRACT\", \"GEOID\", \"ALAND\", \"AWATER\", \"STUSAB\", \"SUMLEV\", \"GEOCODE\", \"STATE\", \"NAME\", \"POP100\", \"HU100\", \"geometry\")\ndc_sf &lt;- dc_sf |&gt; select(cols_to_keep)\n# We can extract the geometry with the st_geometry function\ndc_geo &lt;- st_geometry(dc_sf)\n# And plot the geometry with base R's plot() function\nplot(dc_geo, mar = c(0,0,0,0))",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#now-with-ggplot",
    "href": "w02/index.html#now-with-ggplot",
    "title": "Week 2: How Do Maps Work?",
    "section": "Now with ggplot!",
    "text": "Now with ggplot!\n\n\nCode\nggplot2::theme_set(ggplot2::theme_classic())\ndc_sf |&gt;\n  ggplot() +\n  geom_sf()",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#raster-data",
    "href": "w02/index.html#raster-data",
    "title": "Week 2: How Do Maps Work?",
    "section": "Raster Data",
    "text": "Raster Data\n\nEach DC Census Tract has its own (odd) shape, which can be described by discrete coordinates forming a POLYGON\nFor geospatial analysis, however, we often need to compute over evenly-spaced grids rather than this odd collection of shapes\nPOLYGONs may make sense for demographers, but how about someone studying air pollution in DC? (Smog, for example, does not confine itself to census tracts!)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#step-1-union-of-all-tracts",
    "href": "w02/index.html#step-1-union-of-all-tracts",
    "title": "Week 2: How Do Maps Work?",
    "section": "Step 1: Union of All Tracts",
    "text": "Step 1: Union of All Tracts\n\n\nCode\ndc_union_sf &lt;- sf::st_union(dc_sf)\ndc_union_sf |&gt;\n  ggplot() +\n  geom_sf()",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#step-2-rasterize-terra",
    "href": "w02/index.html#step-2-rasterize-terra",
    "title": "Week 2: How Do Maps Work?",
    "section": "Step 2: Rasterize (terra)",
    "text": "Step 2: Rasterize (terra)\n\n\nCode\nlibrary(terra)\n\n\nterra 1.7.78\n\n\n\nAttaching package: 'terra'\n\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\n\nCode\ndc_SpatVector &lt;- terra::vect(dc_union_sf)\nrast_template &lt;- rast(ext(dc_SpatVector), resolution = 1000, crs = crs(dc_SpatVector))\ndc_SpatRaster &lt;- terra::rasterize(dc_SpatVector, rast_template)\ndim(dc_SpatRaster)\n\n\n[1] 29 23  1\n\n\nCode\nplot(dc_SpatRaster)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#and-with-tidyterra",
    "href": "w02/index.html#and-with-tidyterra",
    "title": "Week 2: How Do Maps Work?",
    "section": "And with tidyterra",
    "text": "And with tidyterra\n\n\nCode\nlibrary(tidyterra)\n\n\n\nAttaching package: 'tidyterra'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nCode\nggplot(data=dc_SpatRaster, aes(fill=layer)) +\n  geom_spatraster(data=dc_SpatRaster)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#rasters-from-scratch",
    "href": "w02/index.html#rasters-from-scratch",
    "title": "Week 2: How Do Maps Work?",
    "section": "Rasters From Scratch",
    "text": "Rasters From Scratch\nWelcome to Gridtown!\n\n\nCode\nset.seed(6805)\nlibrary(terra)\ngridtown &lt;- terra::rast(\n  nrows = 4, ncols = 4,\n  xmin = 0, xmax = 4, ymin = 0, ymax = 4,\n  vals = sample(1:16)\n)\nplot(gridtown)\ntext(\n  gridtown,\n  labels=1:16,\n  halo=TRUE, hc=\"black\", col=\"white\", hw=0.2\n)\n\n\n\n\n\n\n\n\nFigure¬†1: Gridtown Indices\n\n\n\n\n\n\nRaster indices vs.¬†values: The above plot displays indices for each cell: since a raster is a regular grid, can achieve memory-efficient representation with a single index (rather than, e.g., \\((x, y)\\) coords). But what we really care about are‚Ä¶",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#raster-layer-values",
    "href": "w02/index.html#raster-layer-values",
    "title": "Week 2: How Do Maps Work?",
    "section": "Raster Layer Values",
    "text": "Raster Layer Values\n\n\nCode\nplot(gridtown)\ntext(gridtown, halo=TRUE, hc=\"black\", col=\"white\", hw=0.2)\n\n\n\n\n\n\n\n\nFigure¬†2: Gridtown Values",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#latitude-and-longitude-are-angles",
    "href": "w02/index.html#latitude-and-longitude-are-angles",
    "title": "Week 2: How Do Maps Work?",
    "section": "Latitude and Longitude are Angles!",
    "text": "Latitude and Longitude are Angles!\n\n\n\nFrom Krygier and Wood (2016)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#angular-distance-vs.-travel-distance",
    "href": "w02/index.html#angular-distance-vs.-travel-distance",
    "title": "Week 2: How Do Maps Work?",
    "section": "Angular Distance vs.¬†Travel Distance",
    "text": "Angular Distance vs.¬†Travel Distance\nThe Earth‚Äôs ‚Äúwidth‚Äù is slightly greater than its ‚Äúlength‚Äù üò∞\n\n\n\nFrom Wikimedia Commons",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#smooshing-3d-into-2d",
    "href": "w02/index.html#smooshing-3d-into-2d",
    "title": "Week 2: How Do Maps Work?",
    "section": "Smooshing 3D into 2D",
    "text": "Smooshing 3D into 2D\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#avoid-getting-lost-in-the-sauce",
    "href": "w02/index.html#avoid-getting-lost-in-the-sauce",
    "title": "Week 2: How Do Maps Work?",
    "section": "Avoid Getting Lost in the Sauce",
    "text": "Avoid Getting Lost in the Sauce",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#how-to-avoid-getting-lost-in-the-sauce",
    "href": "w02/index.html#how-to-avoid-getting-lost-in-the-sauce",
    "title": "Week 2: How Do Maps Work?",
    "section": "How To Avoid Getting Lost in the Sauce",
    "text": "How To Avoid Getting Lost in the Sauce\n\n\n\n\n\nTissot Circles: Imagine infinitely small ellipses placed at regular intervals on the curved surface of the earth. Imagine these ellipses being projected along with the earth‚Äôs surface. When scaled up, changes in the ellipses show the location and quality of distortions on the projected map.",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#scales-wrules-of-thumb",
    "href": "w02/index.html#scales-wrules-of-thumb",
    "title": "Week 2: How Do Maps Work?",
    "section": "Scales (w/Rules of Thumb)",
    "text": "Scales (w/Rules of Thumb)\n\n\n\nFrom Krygier and Wood (2016)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#the-three-key-elements",
    "href": "w02/index.html#the-three-key-elements",
    "title": "Week 2: How Do Maps Work?",
    "section": "The Three Key Elements",
    "text": "The Three Key Elements\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#what-can-happen-to-points",
    "href": "w02/index.html#what-can-happen-to-points",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Can Happen to Points?",
    "text": "What Can Happen to Points?\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#what-can-happen-to-lines",
    "href": "w02/index.html#what-can-happen-to-lines",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Can Happen to Lines?",
    "text": "What Can Happen to Lines?\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#what-can-happen-to-lines-1",
    "href": "w02/index.html#what-can-happen-to-lines-1",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Can Happen to Lines?",
    "text": "What Can Happen to Lines?\n\n\nSelection\n\n\n\nIn any map, most features from the human or natural environment are eliminated! (Krygier and Wood 2016)\n\n\n\nSimplification\n\n\n\nWithin the features that do remain, eliminate details that are unnecessary with respect to audience/context (Krygier and Wood 2016)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#what-can-happen-to-areas",
    "href": "w02/index.html#what-can-happen-to-areas",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Can Happen to Areas?",
    "text": "What Can Happen to Areas?\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#areal-dimension-change",
    "href": "w02/index.html#areal-dimension-change",
    "title": "Week 2: How Do Maps Work?",
    "section": "Areal Dimension Change",
    "text": "Areal Dimension Change\n\n\n\nFrom Krygier and Wood (2016)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#what-is-gained",
    "href": "w02/index.html#what-is-gained",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Is Gained?",
    "text": "What Is Gained?\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#what-is-lost",
    "href": "w02/index.html#what-is-lost",
    "title": "Week 2: How Do Maps Work?",
    "section": "What Is Lost?",
    "text": "What Is Lost?\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#who-is-affected",
    "href": "w02/index.html#who-is-affected",
    "title": "Week 2: How Do Maps Work?",
    "section": "Who Is Affected?",
    "text": "Who Is Affected?\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#having-domain-knowledge-of-a-region",
    "href": "w02/index.html#having-domain-knowledge-of-a-region",
    "title": "Week 2: How Do Maps Work?",
    "section": "Having Domain Knowledge of a Region",
    "text": "Having Domain Knowledge of a Region\n\n\n\nFrom XKCD",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#crime-in-mongolia",
    "href": "w02/index.html#crime-in-mongolia",
    "title": "Week 2: How Do Maps Work?",
    "section": "Crime in Mongolia",
    "text": "Crime in Mongolia\n\n\n\nFrom Reddit",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#population-of-mongolia",
    "href": "w02/index.html#population-of-mongolia",
    "title": "Week 2: How Do Maps Work?",
    "section": "Population of Mongolia",
    "text": "Population of Mongolia\n\n\n\nFrom Wikimedia Commons",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#exhibit-a",
    "href": "w02/index.html#exhibit-a",
    "title": "Week 2: How Do Maps Work?",
    "section": "Exhibit A",
    "text": "Exhibit A\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#exhibit-b",
    "href": "w02/index.html#exhibit-b",
    "title": "Week 2: How Do Maps Work?",
    "section": "Exhibit B",
    "text": "Exhibit B\n\n\n\nFrom Monmonier (2018)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#country-boundaries",
    "href": "w02/index.html#country-boundaries",
    "title": "Week 2: How Do Maps Work?",
    "section": "Country Boundaries",
    "text": "Country Boundaries\nKey package: rnaturalearth\n\n\nCode\nlibrary(rnaturalearth)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(viridis)\n\n\nLoading required package: viridisLite\n\n\nCode\nlibrary(patchwork)\n\n\n\nAttaching package: 'patchwork'\n\n\nThe following object is masked from 'package:terra':\n\n    area\n\n\nCode\nmap1 &lt;- ne_countries(type = \"countries\", country = \"Germany\", scale = \"medium\", returnclass = \"sf\")\nmap2 &lt;- rnaturalearth::ne_states(\"Germany\", returnclass = \"sf\")\n(ggplot(map1) + geom_sf()) + (ggplot(map2) + geom_sf())",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#climate-data",
    "href": "w02/index.html#climate-data",
    "title": "Week 2: How Do Maps Work?",
    "section": "Climate Data",
    "text": "Climate Data\nKey package: geodata\n\n\nCode\nlibrary(geodata)\nd &lt;- worldclim_country(country = \"Jamaica\", var = \"tmin\",\n                       path = tempdir())\nterra::plot(mean(d), plg = list(title = \"Min. temperature (C)\"))",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#elevation",
    "href": "w02/index.html#elevation",
    "title": "Week 2: How Do Maps Work?",
    "section": "Elevation",
    "text": "Elevation\nKey packages: rnaturalearth + elevatr\n\n\nCode\nlibrary(rnaturalearth)\nlibrary(elevatr)\n\n\nelevatr v0.99.0 NOTE: Version 0.99.0 of 'elevatr' uses 'sf' and 'terra'.  Use \nof the 'sp', 'raster', and underlying 'rgdal' packages by 'elevatr' is being \ndeprecated; however, get_elev_raster continues to return a RasterLayer.  This \nwill be dropped in future versions, so please plan accordingly.\n\n\nCode\nlibrary(terra)\nmap &lt;- ne_countries(type = \"countries\", country = \"Switzerland\",\n                    scale = \"medium\", returnclass = \"sf\")\nd &lt;- get_elev_raster(locations = map, z = 9, clip = \"locations\")\n\n\nMosaicing & Projecting\n\n\nClipping DEM to locations\n\n\nNote: Elevation units are in meters.\n\n\nCode\nterra::plot(rast(d), plg = list(title = \"Elevation (m)\"))",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#street-maps",
    "href": "w02/index.html#street-maps",
    "title": "Week 2: How Do Maps Work?",
    "section": "Street Maps",
    "text": "Street Maps\n\n\nCode\nlibrary(osmdata)\n\n\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n\n\nCode\nplacebb &lt;- getbb(\"Barcelona\")\nhospitals &lt;- placebb %&gt;% opq() %&gt;%\n  add_osm_feature(key = \"amenity\", value = \"hospital\") %&gt;%\n  osmdata_sf()\nmotorways &lt;- placebb %&gt;% opq() %&gt;%\n  add_osm_feature(key = \"highway\", value = \"motorway\") %&gt;%\n  osmdata_sf()\nlibrary(leaflet)\nleaflet() |&gt;  addTiles() |&gt;\n  addPolylines(data = motorways$osm_lines, color = \"black\") |&gt;\n  addPolygons(data = hospitals$osm_polygons,\n              label = hospitals$osm_polygons$name)",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#world-bank-dataverse",
    "href": "w02/index.html#world-bank-dataverse",
    "title": "Week 2: How Do Maps Work?",
    "section": "World Bank Dataverse",
    "text": "World Bank Dataverse\nKey package: wbstats\n\n\nCode\nlibrary(wbstats)\nd &lt;- wb_data(indicator = \"MO.INDEX.HDEV.XQ\",\n             start_date = 2011, end_date = 2011)\nlibrary(rnaturalearth)\nlibrary(mapview)\nmap &lt;- ne_countries(continent = \"Africa\", returnclass = \"sf\")\nmap &lt;- dplyr::left_join(map, d, by = c(\"iso_a3\" = \"iso3c\"))\nmapview(map, zcol = \"MO.INDEX.HDEV.XQ\")",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w02/index.html#references",
    "href": "w02/index.html#references",
    "title": "Week 2: How Do Maps Work?",
    "section": "References",
    "text": "References\n\n\nKrygier, John, and Denis Wood. 2016. Making Maps, Third Edition: A Visual Guide to Map Design for GIS. Guilford Publications.\n\n\nMonmonier, Mark. 2018. How to Lie with Maps. University of Chicago Press.",
    "crumbs": [
      "Week 2: Sep 4"
    ]
  },
  {
    "objectID": "w03/index.html",
    "href": "w03/index.html",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "",
    "text": "Open slides in new tab ‚Üí",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#hw1-rightarrow-hw2",
    "href": "w03/index.html#hw1-rightarrow-hw2",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "HW1 \\(\\rightarrow\\) HW2",
    "text": "HW1 \\(\\rightarrow\\) HW2\n\nCongrats on finishing HW1! You now know how to create geometries with sf and terra\nSo now, what can you do with them?\nFor example, we‚Äôd like to be able to say things like:\n\n‚ÄúThe new lamppost cannot be placed at \\((x, y)\\), since there is already a building there!‚Äù\n‚ÄúThere are \\(N_1\\) lampposts in County 1, and \\(N_2\\) lampposts in County 2‚Äù\n‚ÄúThe average resident in Neighborhood A lives 2 km away from their nearest bus stop",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#first-things-first-loading-and-saving",
    "href": "w03/index.html#first-things-first-loading-and-saving",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "First Things First: Loading and Saving",
    "text": "First Things First: Loading and Saving\n\nNote how there were no data files in HW1 üò±\nFrom HW2 onwards (and in your GIS life), we‚Äôll:\n\nDownload from e.g.¬†city Open Data Portals: geo data files, but also loading on-the-fly (this week)\nSummarize/aggregate (this week and next week)\nVisualize findings (‚ÄúMapping Libraries‚Äù unit)",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#shapefiles-.shp-et-al.",
    "href": "w03/index.html#shapefiles-.shp-et-al.",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Shapefiles (.shp et al.)",
    "text": "Shapefiles (.shp et al.)\nA shape‚Äúfile‚Äù is actually (at least) three separate files bundled together:\n\n Mandatory .shp: Containing feature geometries\n Mandatory .shx: Positional indices\n Mandatory .dbf: Data attributes\n Optional .prj: Coordinate reference system\n Optional .xml: Metadata",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#shapefiles",
    "href": "w03/index.html#shapefiles",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Shapefiles",
    "text": "Shapefiles\nLet‚Äôs see what‚Äôs inside the shapefile we first saw in Week 1, containing data on DC‚Äôs Census Tracts: Census Tracts in 2020\n\n\n\nDC Census Tracts (with the Georgetown campus tract highlighted!) from OpenData.DC.gov",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#shapefile-anatomy",
    "href": "w03/index.html#shapefile-anatomy",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Shapefile Anatomy",
    "text": "Shapefile Anatomy\n\n\n\nFrom Rodrigue (2016)",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#geojson-topojson-.geojson",
    "href": "w03/index.html#geojson-topojson-.geojson",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "GeoJSON / TopoJSON (.geojson)",
    "text": "GeoJSON / TopoJSON (.geojson)\n\n\n\nJavaScript Object Notation: General cross-platform format\nUseful when data is too complex for e.g.¬†.csv\nTopoJSON = Memory-efficient GeoJSON\nBonus: Inline preview on GitHub!\n\n\n\n\nmy_data.geojson\n\n{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [30, 20], [45, 40],\n            [10, 40], [30, 20]\n          ]\n        ]\n      },\n      \"properties\": {\n        \"color\": \"green\",\n        \"area\": 3565747\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [15, 5], [40, 10],\n            [10, 20], [5, 10], \n            [15, 5]\n          ]\n        ]\n      },\n      \"properties\": {\n        \"color\": \"red\",\n        \"area\": 3272386\n      }\n    }\n  ]\n}",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#geopackage-.gpkg",
    "href": "w03/index.html#geopackage-.gpkg",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "GeoPackage (.gpkg)",
    "text": "GeoPackage (.gpkg)\n\nOpen-source (non-proprietary) data format standard",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#raster-formats",
    "href": "w03/index.html#raster-formats",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Raster Formats",
    "text": "Raster Formats\n\nGeoTIFF (.tif or .tiff)\n\nBased on TIFF format developed at NASA\n\nNetCDF (.nc4)\n\nUsed in earth sciences, as format for data sources measured and distributed multiple times per day over large full-country or full-continent areas.",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#coordinate-reference-systems-crs",
    "href": "w03/index.html#coordinate-reference-systems-crs",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Coordinate Reference Systems (CRS)",
    "text": "Coordinate Reference Systems (CRS)\n\nEPSG (European Petroleum Survey Group) Registry: Most common way to specify a CRS\n\nFor example, 4326 is the EPSG code for the WGS84 coordinate system\n\nPROJ: Rather than opaque numeric code like EPSG, uses plaintext ‚Äúproj-strings‚Äù containing parameter info: datum, ellipsoid, projection, and units (e.g.¬†meters). Example: PROJ4 code EPSG:4326 is represented as\n+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\nWKT: Lengthy but human-readable descriptions",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#getting-the-geometries",
    "href": "w03/index.html#getting-the-geometries",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Getting the Geometries",
    "text": "Getting the Geometries\nUsing rnaturalearth with mapview\n\n\nCode\nset.seed(6805)\nlibrary(tidyverse)\n\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.5.1     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.3     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(sf)\n\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\nCode\nlibrary(rnaturalearth)\nlibrary(mapview)\nsource(\"../dsan-globals/_globals.r\")\nfrance_sf &lt;- ne_countries(country = \"France\", scale = 50)\n(france_map &lt;- mapview(france_sf, label = \"geounit\", legend = FALSE))",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#centroid-of-france",
    "href": "w03/index.html#centroid-of-france",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Centroid of France",
    "text": "Centroid of France\n\n\nCode\nfrance_cent_sf &lt;- sf::st_centroid(france_sf)\n\n\nWarning: st_centroid assumes attributes are constant over geometries\n\n\nCode\nfrance_map + mapview(france_cent_sf, label = \"Centroid\", legend = FALSE)",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#one-we-already-saw-union",
    "href": "w03/index.html#one-we-already-saw-union",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "One We Already Saw: Union",
    "text": "One We Already Saw: Union\nComputing the union of all geometries in the sf via sf::st_union()\n\n\nCode\nlibrary(leaflet.extras2)\n\n\nLoading required package: leaflet\n\n\nCode\nafrica_sf &lt;- ne_countries(continent = \"Africa\", scale = 50)\nafrica_union_sf &lt;- sf::st_union(africa_sf)\nafrica_map &lt;- mapview(africa_sf, label=\"geounit\", legend=FALSE)\nafrica_union_map &lt;- mapview(africa_union_sf, label=\"st_union(africa)\", legend=FALSE)\nafrica_map | africa_union_map",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#helpful-for-rasterizing-bbox",
    "href": "w03/index.html#helpful-for-rasterizing-bbox",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Helpful for Rasterizing: BBox",
    "text": "Helpful for Rasterizing: BBox\n\n\nCode\nafrica_bbox_sf &lt;- sf::st_bbox(africa_sf)\nafrica_bbox_map &lt;- mapview(africa_bbox_sf, label=\"st_bbox(africa)\", legend=FALSE)\nafrica_map | africa_bbox_map",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#convex-hulls-by-country",
    "href": "w03/index.html#convex-hulls-by-country",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Convex Hulls by Country",
    "text": "Convex Hulls by Country\n\n\nCode\nafrica_countries_cvx &lt;- sf::st_convex_hull(africa_sf)\nafrica_countries_cvx_map &lt;- mapview(africa_countries_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_countries_cvx_map",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#convex-hull-of-continent",
    "href": "w03/index.html#convex-hull-of-continent",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Convex Hull of Continent",
    "text": "Convex Hull of Continent\nUse st_union() first:\n\n\nCode\nafrica_cvx &lt;- africa_sf |&gt; st_union() |&gt; st_convex_hull()\nafrica_cvx_map &lt;- mapview(africa_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cvx_map",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#one-we-already-saw-centroids",
    "href": "w03/index.html#one-we-already-saw-centroids",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "One We Already Saw: Centroids",
    "text": "One We Already Saw: Centroids\nComputing the centroid of all geometries in the sf via sf::st_centroid()\n\n\nCode\nafrica_cents_sf &lt;- sf::st_centroid(africa_sf)\n\n\nWarning: st_centroid assumes attributes are constant over geometries\n\n\nCode\nafrica_cents_map &lt;- mapview(africa_cents_sf, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cents_map",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#spatial-joins",
    "href": "w03/index.html#spatial-joins",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Spatial Joins",
    "text": "Spatial Joins\n\n\nCode\nnc &lt;- system.file(\"shape/nc.shp\", package=\"sf\") |&gt;\n  read_sf() |&gt;\n  st_transform('EPSG:2264')\ngr &lt;- st_sf(\n         label = apply(expand.grid(1:10, LETTERS[10:1])[,2:1], 1, paste0, collapse = \"\"),\n         geom = st_make_grid(nc))\ngr$col &lt;- sf.colors(10, categorical = TRUE, alpha = .3)\n# cut, to verify that NA's work out:\ngr &lt;- gr[-(1:30),]\nsuppressWarnings(nc_j &lt;- st_join(nc, gr, largest = TRUE))\npar(mfrow = c(2,1), mar = rep(0,4))\nplot(st_geometry(nc_j), border = 'grey')\nplot(st_geometry(gr), add = TRUE, col = gr$col)\ntext(st_coordinates(st_centroid(st_geometry(gr))), labels = gr$label, cex = .85)\n# the joined dataset:\nplot(st_geometry(nc_j), border = 'grey', col = nc_j$col)\ntext(st_coordinates(st_centroid(st_geometry(nc_j))), labels = nc_j$label, cex = .7)\nplot(st_geometry(gr), border = '#88ff88aa', add = TRUE)",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#spatial-sampling",
    "href": "w03/index.html#spatial-sampling",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Spatial Sampling",
    "text": "Spatial Sampling\n\n\nCode\n# Sample random points\nafrica_points_list &lt;- sf::st_sample(africa_union_sf, 10)\nafrica_points_sf &lt;- sf::st_sf(africa_points_list)\nafrica_points_map &lt;- mapview(africa_points_sf, label=\"Random Point\", col.regions=cbPalette[1], legend=FALSE)\n\n\nWarning in cbind(`Feature ID` = fid, mat): number of rows of result is not a\nmultiple of vector length (arg 1)\n\n\nCode\nafrica_map + africa_points_map",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#the-default-predicate-st_intersects",
    "href": "w03/index.html#the-default-predicate-st_intersects",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "The ‚ÄúDefault‚Äù Predicate: st_intersects",
    "text": "The ‚ÄúDefault‚Äù Predicate: st_intersects\n\n\nCode\ncountries_w_points &lt;- africa_sf[africa_points_sf,]\nmapview(countries_w_points, label=\"geounit\", legend=FALSE) + africa_points_map",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#counting-with-lengths",
    "href": "w03/index.html#counting-with-lengths",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Counting with lengths()",
    "text": "Counting with lengths()\n\n\nCode\ncountry_inter &lt;- sf::st_intersects(africa_sf, africa_points_sf)\n# Computes point counts for each polygon\n(num_intersections &lt;- lengths(country_inter))\n\n\n [1] 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0\n[39] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2\n\n\nCode\nafrica_sf &lt;- africa_sf |&gt; mutate(\n  num_points = num_intersections\n) |&gt; arrange(geounit)\nafrica_sf |&gt; select(geounit, num_points) |&gt; head()\n\n\n\n\n\n\ngeounit\nnum_points\ngeometry\n\n\n\n\nAlgeria\n2\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\nAngola\n2\nMULTIPOLYGON (((13.07275 -4‚Ä¶\n\n\nBenin\n0\nMULTIPOLYGON (((1.622656 6‚Ä¶.\n\n\nBotswana\n0\nMULTIPOLYGON (((25.25879 -1‚Ä¶\n\n\nBurkina Faso\n0\nMULTIPOLYGON (((0.9004883 1‚Ä¶\n\n\nBurundi\n0\nMULTIPOLYGON (((30.55361 -2‚Ä¶",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#plotting-with-mapview",
    "href": "w03/index.html#plotting-with-mapview",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Plotting with mapview",
    "text": "Plotting with mapview\n\n\nCode\nmapview(africa_sf, zcol=\"num_points\")",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#plotting-with-ggplot2",
    "href": "w03/index.html#plotting-with-ggplot2",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Plotting with ggplot2",
    "text": "Plotting with ggplot2\nSince we‚Äôre starting to get into data attributes rather than geometric features, switching to ggplot2 is recommended!\n\n\nCode\nafrica_sf |&gt; ggplot(aes(fill=num_points)) +\n  geom_sf() +\n  theme_classic()",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#getting-fancier",
    "href": "w03/index.html#getting-fancier",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Getting Fancier‚Ä¶",
    "text": "Getting Fancier‚Ä¶\n\nTo do fancier geospatial operations, we‚Äôll need to start overthinking the different possible relationships between two or more geometries!\nTo this end: predicates",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#de-9im-strings",
    "href": "w03/index.html#de-9im-strings",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "DE-9IM Strings",
    "text": "DE-9IM Strings\n\n\nCode\nlibrary(sf)\npolygon &lt;- po &lt;- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))\np0 &lt;- st_polygon(list(rbind(c(-1,-1), c(2,-1), c(2,2), c(-1,2), c(-1,-1))))\nline &lt;- li &lt;- st_linestring(rbind(c(.5, -.5), c(.5, 0.5)))\ns &lt;- st_sfc(po, li)\n\npar(mfrow = c(3,3))\npar(mar = c(1,1,1,1))\n\n# \"1020F1102\"\n# 1: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5,0), c(.5,.495)), col = 'red', lwd = 2)\npoints(0.5, 0.5, pch = 1)\n\n# 2: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"B(line) = 0\")))\npoints(0.5, 0.5, col = 'red', pch = 16)\n\n# 3: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"E(line) = 2\")))\nplot(po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n# 4: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"I(line) = 0\")))\npoints(.5, 0, col = 'red', pch = 16)\n\n# 5: F\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"B(line) = F\")))\n\n# 6: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"E(line) = 1\")))\nplot(po, border = 'red', col = NA, add = TRUE, lwd = 2)\n\n# 7: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5, -.5), c(.5, 0)), col = 'red', lwd = 2)\n\n# 8: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"B(line) = 0\")))\npoints(.5, -.5, col = 'red', pch = 16)\n\n# 9: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"E(line) = 2\")))\nplot(p0 / po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n\n\n\n\n\n\n\n\n\nThe predicate equals corresponds to the DE-9IM string \"T*F**FFF*\". If any two geometries obey this relationship, they are (topologically) equal!",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/index.html#references",
    "href": "w03/index.html#references",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "References",
    "text": "References\n\n\nRodrigue, Jean-Paul. 2016. The Geography of Transport Systems. Taylor & Francis.",
    "crumbs": [
      "Week 3: Sep 11"
    ]
  },
  {
    "objectID": "w03/slides.html#hw1-rightarrow-hw2",
    "href": "w03/slides.html#hw1-rightarrow-hw2",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "HW1 \\(\\rightarrow\\) HW2",
    "text": "HW1 \\(\\rightarrow\\) HW2\n\nCongrats on finishing HW1! You now know how to create geometries with sf and terra\nSo now, what can you do with them?\nFor example, we‚Äôd like to be able to say things like:\n\n‚ÄúThe new lamppost cannot be placed at \\((x, y)\\), since there is already a building there!‚Äù\n‚ÄúThere are \\(N_1\\) lampposts in County 1, and \\(N_2\\) lampposts in County 2‚Äù\n‚ÄúThe average resident in Neighborhood A lives 2 km away from their nearest bus stop"
  },
  {
    "objectID": "w03/slides.html#first-things-first-loading-and-saving",
    "href": "w03/slides.html#first-things-first-loading-and-saving",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "First Things First: Loading and Saving",
    "text": "First Things First: Loading and Saving\n\nNote how there were no data files in HW1 üò±\nFrom HW2 onwards (and in your GIS life), we‚Äôll:\n\nDownload from e.g.¬†city Open Data Portals: geo data files, but also loading on-the-fly (this week)\nSummarize/aggregate (this week and next week)\nVisualize findings (‚ÄúMapping Libraries‚Äù unit)"
  },
  {
    "objectID": "w03/slides.html#shapefiles-.shp-et-al.",
    "href": "w03/slides.html#shapefiles-.shp-et-al.",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Shapefiles (.shp et al.)",
    "text": "Shapefiles (.shp et al.)\nA shape‚Äúfile‚Äù is actually (at least) three separate files bundled together:\n\n Mandatory .shp: Containing feature geometries\n Mandatory .shx: Positional indices\n Mandatory .dbf: Data attributes\n Optional .prj: Coordinate reference system\n Optional .xml: Metadata"
  },
  {
    "objectID": "w03/slides.html#shapefiles",
    "href": "w03/slides.html#shapefiles",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Shapefiles",
    "text": "Shapefiles\nLet‚Äôs see what‚Äôs inside the shapefile we first saw in Week 1, containing data on DC‚Äôs Census Tracts: Census Tracts in 2020\n\nDC Census Tracts (with the Georgetown campus tract highlighted!) from OpenData.DC.gov"
  },
  {
    "objectID": "w03/slides.html#shapefile-anatomy",
    "href": "w03/slides.html#shapefile-anatomy",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Shapefile Anatomy",
    "text": "Shapefile Anatomy\n\nFrom Rodrigue (2016)"
  },
  {
    "objectID": "w03/slides.html#geojson-topojson-.geojson",
    "href": "w03/slides.html#geojson-topojson-.geojson",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "GeoJSON / TopoJSON (.geojson)",
    "text": "GeoJSON / TopoJSON (.geojson)\n\n\n\nJavaScript Object Notation: General cross-platform format\nUseful when data is too complex for e.g.¬†.csv\nTopoJSON = Memory-efficient GeoJSON\nBonus: Inline preview on GitHub!\n\n\n\n\nmy_data.geojson\n\n{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [30, 20], [45, 40],\n            [10, 40], [30, 20]\n          ]\n        ]\n      },\n      \"properties\": {\n        \"color\": \"green\",\n        \"area\": 3565747\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [15, 5], [40, 10],\n            [10, 20], [5, 10], \n            [15, 5]\n          ]\n        ]\n      },\n      \"properties\": {\n        \"color\": \"red\",\n        \"area\": 3272386\n      }\n    }\n  ]\n}"
  },
  {
    "objectID": "w03/slides.html#geopackage-.gpkg",
    "href": "w03/slides.html#geopackage-.gpkg",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "GeoPackage (.gpkg)",
    "text": "GeoPackage (.gpkg)\n\nOpen-source (non-proprietary) data format standard"
  },
  {
    "objectID": "w03/slides.html#raster-formats",
    "href": "w03/slides.html#raster-formats",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Raster Formats",
    "text": "Raster Formats\n\nGeoTIFF (.tif or .tiff)\n\nBased on TIFF format developed at NASA\n\nNetCDF (.nc4)\n\nUsed in earth sciences, as format for data sources measured and distributed multiple times per day over large full-country or full-continent areas."
  },
  {
    "objectID": "w03/slides.html#coordinate-reference-systems-crs",
    "href": "w03/slides.html#coordinate-reference-systems-crs",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Coordinate Reference Systems (CRS)",
    "text": "Coordinate Reference Systems (CRS)\n\nEPSG (European Petroleum Survey Group) Registry: Most common way to specify a CRS\n\nFor example, 4326 is the EPSG code for the WGS84 coordinate system\n\nPROJ: Rather than opaque numeric code like EPSG, uses plaintext ‚Äúproj-strings‚Äù containing parameter info: datum, ellipsoid, projection, and units (e.g.¬†meters). Example: PROJ4 code EPSG:4326 is represented as\n+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\nWKT: Lengthy but human-readable descriptions"
  },
  {
    "objectID": "w03/slides.html#getting-the-geometries",
    "href": "w03/slides.html#getting-the-geometries",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Getting the Geometries",
    "text": "Getting the Geometries\nUsing rnaturalearth with mapview\n\n\nCode\nset.seed(6805)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(mapview)\nsource(\"../dsan-globals/_globals.r\")\nfrance_sf &lt;- ne_countries(country = \"France\", scale = 50)\n(france_map &lt;- mapview(france_sf, label = \"geounit\", legend = FALSE))"
  },
  {
    "objectID": "w03/slides.html#centroid-of-france",
    "href": "w03/slides.html#centroid-of-france",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Centroid of France",
    "text": "Centroid of France\n\n\nCode\nfrance_cent_sf &lt;- sf::st_centroid(france_sf)\nfrance_map + mapview(france_cent_sf, label = \"Centroid\", legend = FALSE)"
  },
  {
    "objectID": "w03/slides.html#one-we-already-saw-union",
    "href": "w03/slides.html#one-we-already-saw-union",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "One We Already Saw: Union",
    "text": "One We Already Saw: Union\nComputing the union of all geometries in the sf via sf::st_union()\n\n\nCode\nlibrary(leaflet.extras2)\nafrica_sf &lt;- ne_countries(continent = \"Africa\", scale = 50)\nafrica_union_sf &lt;- sf::st_union(africa_sf)\nafrica_map &lt;- mapview(africa_sf, label=\"geounit\", legend=FALSE)\nafrica_union_map &lt;- mapview(africa_union_sf, label=\"st_union(africa)\", legend=FALSE)\nafrica_map | africa_union_map"
  },
  {
    "objectID": "w03/slides.html#helpful-for-rasterizing-bbox",
    "href": "w03/slides.html#helpful-for-rasterizing-bbox",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Helpful for Rasterizing: BBox",
    "text": "Helpful for Rasterizing: BBox\n\n\nCode\nafrica_bbox_sf &lt;- sf::st_bbox(africa_sf)\nafrica_bbox_map &lt;- mapview(africa_bbox_sf, label=\"st_bbox(africa)\", legend=FALSE)\nafrica_map | africa_bbox_map"
  },
  {
    "objectID": "w03/slides.html#convex-hulls-by-country",
    "href": "w03/slides.html#convex-hulls-by-country",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Convex Hulls by Country",
    "text": "Convex Hulls by Country\n\n\nCode\nafrica_countries_cvx &lt;- sf::st_convex_hull(africa_sf)\nafrica_countries_cvx_map &lt;- mapview(africa_countries_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_countries_cvx_map"
  },
  {
    "objectID": "w03/slides.html#convex-hull-of-continent",
    "href": "w03/slides.html#convex-hull-of-continent",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Convex Hull of Continent",
    "text": "Convex Hull of Continent\nUse st_union() first:\n\n\nCode\nafrica_cvx &lt;- africa_sf |&gt; st_union() |&gt; st_convex_hull()\nafrica_cvx_map &lt;- mapview(africa_cvx, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cvx_map"
  },
  {
    "objectID": "w03/slides.html#one-we-already-saw-centroids",
    "href": "w03/slides.html#one-we-already-saw-centroids",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "One We Already Saw: Centroids",
    "text": "One We Already Saw: Centroids\nComputing the centroid of all geometries in the sf via sf::st_centroid()\n\n\nCode\nafrica_cents_sf &lt;- sf::st_centroid(africa_sf)\nafrica_cents_map &lt;- mapview(africa_cents_sf, label=\"geounit\", legend=FALSE)\nafrica_map | africa_cents_map"
  },
  {
    "objectID": "w03/slides.html#spatial-joins",
    "href": "w03/slides.html#spatial-joins",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Spatial Joins",
    "text": "Spatial Joins\n\n\n\nCode\nnc &lt;- system.file(\"shape/nc.shp\", package=\"sf\") |&gt;\n  read_sf() |&gt;\n  st_transform('EPSG:2264')\ngr &lt;- st_sf(\n         label = apply(expand.grid(1:10, LETTERS[10:1])[,2:1], 1, paste0, collapse = \"\"),\n         geom = st_make_grid(nc))\ngr$col &lt;- sf.colors(10, categorical = TRUE, alpha = .3)\n# cut, to verify that NA's work out:\ngr &lt;- gr[-(1:30),]\nsuppressWarnings(nc_j &lt;- st_join(nc, gr, largest = TRUE))\npar(mfrow = c(2,1), mar = rep(0,4))\nplot(st_geometry(nc_j), border = 'grey')\nplot(st_geometry(gr), add = TRUE, col = gr$col)\ntext(st_coordinates(st_centroid(st_geometry(gr))), labels = gr$label, cex = .85)\n# the joined dataset:\nplot(st_geometry(nc_j), border = 'grey', col = nc_j$col)\ntext(st_coordinates(st_centroid(st_geometry(nc_j))), labels = nc_j$label, cex = .7)\nplot(st_geometry(gr), border = '#88ff88aa', add = TRUE)"
  },
  {
    "objectID": "w03/slides.html#spatial-sampling",
    "href": "w03/slides.html#spatial-sampling",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Spatial Sampling",
    "text": "Spatial Sampling\n\n\nCode\n# Sample random points\nafrica_points_list &lt;- sf::st_sample(africa_union_sf, 10)\nafrica_points_sf &lt;- sf::st_sf(africa_points_list)\nafrica_points_map &lt;- mapview(africa_points_sf, label=\"Random Point\", col.regions=cbPalette[1], legend=FALSE)\nafrica_map + africa_points_map"
  },
  {
    "objectID": "w03/slides.html#the-default-predicate-st_intersects",
    "href": "w03/slides.html#the-default-predicate-st_intersects",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "The ‚ÄúDefault‚Äù Predicate: st_intersects",
    "text": "The ‚ÄúDefault‚Äù Predicate: st_intersects\n\n\nCode\ncountries_w_points &lt;- africa_sf[africa_points_sf,]\nmapview(countries_w_points, label=\"geounit\", legend=FALSE) + africa_points_map"
  },
  {
    "objectID": "w03/slides.html#counting-with-lengths",
    "href": "w03/slides.html#counting-with-lengths",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Counting with lengths()",
    "text": "Counting with lengths()\n\n\nCode\ncountry_inter &lt;- sf::st_intersects(africa_sf, africa_points_sf)\n# Computes point counts for each polygon\n(num_intersections &lt;- lengths(country_inter))\n\n\n [1] 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0\n[39] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2\n\n\nCode\nafrica_sf &lt;- africa_sf |&gt; mutate(\n  num_points = num_intersections\n) |&gt; arrange(geounit)\nafrica_sf |&gt; select(geounit, num_points) |&gt; head()\n\n\n\n\n\n\ngeounit\nnum_points\ngeometry\n\n\n\n\nAlgeria\n2\nMULTIPOLYGON (((8.576563 36‚Ä¶\n\n\nAngola\n2\nMULTIPOLYGON (((13.07275 -4‚Ä¶\n\n\nBenin\n0\nMULTIPOLYGON (((1.622656 6‚Ä¶.\n\n\nBotswana\n0\nMULTIPOLYGON (((25.25879 -1‚Ä¶\n\n\nBurkina Faso\n0\nMULTIPOLYGON (((0.9004883 1‚Ä¶\n\n\nBurundi\n0\nMULTIPOLYGON (((30.55361 -2‚Ä¶"
  },
  {
    "objectID": "w03/slides.html#plotting-with-mapview",
    "href": "w03/slides.html#plotting-with-mapview",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Plotting with mapview",
    "text": "Plotting with mapview\n\n\nCode\nmapview(africa_sf, zcol=\"num_points\")"
  },
  {
    "objectID": "w03/slides.html#plotting-with-ggplot2",
    "href": "w03/slides.html#plotting-with-ggplot2",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Plotting with ggplot2",
    "text": "Plotting with ggplot2\nSince we‚Äôre starting to get into data attributes rather than geometric features, switching to ggplot2 is recommended!\n\n\nCode\nafrica_sf |&gt; ggplot(aes(fill=num_points)) +\n  geom_sf() +\n  theme_classic()"
  },
  {
    "objectID": "w03/slides.html#getting-fancier",
    "href": "w03/slides.html#getting-fancier",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "Getting Fancier‚Ä¶",
    "text": "Getting Fancier‚Ä¶\n\nTo do fancier geospatial operations, we‚Äôll need to start overthinking the different possible relationships between two or more geometries!\nTo this end: predicates"
  },
  {
    "objectID": "w03/slides.html#de-9im-strings",
    "href": "w03/slides.html#de-9im-strings",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "DE-9IM Strings",
    "text": "DE-9IM Strings\n\n\nCode\nlibrary(sf)\npolygon &lt;- po &lt;- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))\np0 &lt;- st_polygon(list(rbind(c(-1,-1), c(2,-1), c(2,2), c(-1,2), c(-1,-1))))\nline &lt;- li &lt;- st_linestring(rbind(c(.5, -.5), c(.5, 0.5)))\ns &lt;- st_sfc(po, li)\n\npar(mfrow = c(3,3))\npar(mar = c(1,1,1,1))\n\n# \"1020F1102\"\n# 1: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5,0), c(.5,.495)), col = 'red', lwd = 2)\npoints(0.5, 0.5, pch = 1)\n\n# 2: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"B(line) = 0\")))\npoints(0.5, 0.5, col = 'red', pch = 16)\n\n# 3: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"I(pol)\",intersect(),\"E(line) = 2\")))\nplot(po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n# 4: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"I(line) = 0\")))\npoints(.5, 0, col = 'red', pch = 16)\n\n# 5: F\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"B(line) = F\")))\n\n# 6: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"B(pol)\",intersect(),\"E(line) = 1\")))\nplot(po, border = 'red', col = NA, add = TRUE, lwd = 2)\n\n# 7: 1\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"I(line) = 1\")))\nlines(rbind(c(.5, -.5), c(.5, 0)), col = 'red', lwd = 2)\n\n# 8: 0\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"B(line) = 0\")))\npoints(.5, -.5, col = 'red', pch = 16)\n\n# 9: 2\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', main = expression(paste(\"E(pol)\",intersect(),\"E(line) = 2\")))\nplot(p0 / po, col = '#ff8888', add = TRUE)\nplot(s, col = c(NA, 'darkgreen'), border = 'blue', add = TRUE)\n\n\n\n\nThe predicate equals corresponds to the DE-9IM string \"T*F**FFF*\". If any two geometries obey this relationship, they are (topologically) equal!"
  },
  {
    "objectID": "w03/slides.html#references",
    "href": "w03/slides.html#references",
    "title": "Week 3: Basic Geospatial Operations",
    "section": "References",
    "text": "References\n\n\nRodrigue, Jean-Paul. 2016. The Geography of Transport Systems. Taylor & Francis.\n\n\n\n\n\nPPOL 6805 Week 3: Geospatial Operations"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PPOL 6805 / DSAN 6750: Geographic Information Systems (GIS) for Spatial Data Science",
    "section": "",
    "text": "Welcome to the homepage for PPOL 6805 / DSAN 6750: Geographic Information Systems (GIS) for Spatial Data Science, Fall 2024, at Georgetown University! The course takes place on Wednesdays from 6:30 to 9:00pm in Car Barn Room 204. More details are provided on the syllabus.\n\n\n\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nWeek 1: Introduction to GIS\n\n\nAug 28\n\n\n\n\nWeek 2: How Do Maps Work?\n\n\nSep 4\n\n\n\n\nWeek 3: Basic Geospatial Operations\n\n\nSep 11\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "",
    "text": "Welcome to the Fall 2024 version of Geographic Information Systems (GIS) for Spatial Data Science at Georgetown University! Please note that the most up-to-date version of this syllabus will always be available at jjacobs.me/ppol6805",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-staff-and-office-hours",
    "href": "syllabus.html#course-staff-and-office-hours",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Course Staff and Office Hours",
    "text": "Course Staff and Office Hours\n\nProf.¬†Jeff Jacobs, jj1088@georgetown.edu: Schedule office hour slots at jjacobs.me/meet\n\nMondays 4:30-6:30pm\nTuesdays 3-5:30pm\n(Please try to schedule at least 8 hours in advance, and let me know briefly what you‚Äôd like to discuss, so I have time to prepare)\n\nTA Billy McGloin, wtm30@georgetown.edu\n\nBy appointment (Email)",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-description",
    "href": "syllabus.html#course-description",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Course Description",
    "text": "Course Description\nThis course provides students with an overview of Geographic Information Systems (GIS), encompassing both general principles of geospatial data analysis and their applications for studying important issues of climate change, international conflict, economic development, and urban planning, among other areas of application.\nThe beginning of the course emphasizes fundamentals of GIS design and use, such as projection systems, raster and vector data, and efficient representation and storage of geospatial data. As students become more comfortable with these foundations, the course will shift to a greater emphasis on applications during the second half of the semester. Particular emphasis will be placed on effective visualization of spatial data, through creation of static publication-quality maps as well as interactive maps for web applications and data dashboards.\nThe course will utilize libraries from R, Python, and JavaScript as needed, so experience using any of these languages will be helpful, but is not required. Pre-requisites (for PPOL students): PPOL 564 or PPOL 670.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#assignment-structure",
    "href": "syllabus.html#assignment-structure",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Assignment Structure",
    "text": "Assignment Structure\nOn the basis of the guidelines we‚Äôve developed for courses offered through DSAN, this course will have one in-class midterm but no final exam! Instead, you will work on a final project throughout the second half of the course. Each of the four units will involve a homework assignment, and final grades will be determined using the following weighting scheme:\n\n\n\nCategory\nPercent of Final Grade\n\n\n\n\nIn-Class Midterm (Nov 6)\n30%\n\n\nFinal Project\n30%\n\n\nHomeworks\n40%\n\n\nHW1: GIS Concepts\n10%\n\n\nHW2: Geospatial Operations\n10%\n\n\nHW3: Mapping Libraries\n10%\n\n\nHW4: Clustering\n10%\n\n\n\nThe course does not have any ‚Äúofficial‚Äù prerequisites, but a general comfort with R and/or Python is strongly recommended. If you have never used Python before, however (or if you haven‚Äôt used it in a while and feel like your skills are rusty), you can browse the materials on the Resources page!",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-topics-calendar",
    "href": "syllabus.html#course-topics-calendar",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Course Topics / Calendar",
    "text": "Course Topics / Calendar\nThe following is a rough map of what we will work through together throughout the semester; given that everyone learns at a different pace, my aim is to leave us with a good amount of flexibility in terms of how much time we spend on each topic.\nIf I find that it takes me longer than a week to convey a certain topic in sufficient depth, for example, then I view it as a strength rather than a weakness of the course that we can then rearrange the calendar below by adding an extra week on that particular topic! Similarly, if it seems like I am spending too much time on a topic, to the point that students seem bored or impatient to move onto the next topic, we can move a topic intended for the next week to the current week!\nIf you find any discrepancies between this schedule and Georgetown‚Äôs official calendar, please let me know.\n\n\n\n\n\n\n\n\n\nUnit\nWeek\nDate\nTopic\n\n\n\n\nUnit 1: GIS Concepts\n1\nAug 28\nIntroduction to GIS\n\n\n\n2\nSep 4\nHow Do Maps Work?\nHW1 Release\n\n\nUnit 2: Geospatial Operations\n3\nSep 11\nBasic Geospatial Operations\n[Deliverable] HW1: GIS Concepts\n\n\n\n4\nSep 18\nSlightly-More-Complex Geospatial Operations\nHW2 Release\n\n\nUnit 3: Mapping Libraries\n5\nSep 25\nStatic Mapping Libraries\n[Deliverable] HW2: Geospatial Operations\n\n\n\n6\nOct 2\nInteractive Mapping Libraries\nHW3 Release\n\n\nUnit 4: Spatial Data Science\n7\nOct 9\nSpatial Autocorrelation\n[Deliverable] HW3: Mapping Libraries\n\n\n\n8\nOct 16\nPoint Patterns and Clustering\nHW4 Release\n\n\n\n9\nOct 23\nSpatial Interpolation\n[Deliverable] HW4: Clustering\n\n\n\n10\nOct 30\nSpatial Regression\nMidterm Practice Problems Release\n\n\n\n11\nNov 6\nIn-Class Midterm\n\n\nUnit 5: Applications\n12\nNov 13\nApplications: Public Policy\n\n\n\n13\nNov 20\nApplications: Urban Planning\n\n\n\n\nNov 27\nNo Class (Fall Break)\n\n\n\n14\nDec 4\nApplications: Climate Change and Ecological Data\n\n\n\n15\nDec 11\nFinal Presentations\n\n\n\n\nDec 13 (Friday)\n[Deliverable] Final Project",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#assignment-distribution-submission-and-grading",
    "href": "syllabus.html#assignment-distribution-submission-and-grading",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Assignment Distribution, Submission, and Grading",
    "text": "Assignment Distribution, Submission, and Grading\nThe programming assignments for the course will be managed through Posit.Cloud This means that, to work on and submit the assignments, you will use the following workflow:\n\nClick the ‚ÄúStart‚Äù button for the assignment within the Posit.Cloud interface, which should immediately create and display a new in-browser RStudio workspace for you.\nWork on the problems within the project‚Äôs .qmd file, saving your progress early and often! You can try things out or create drafts of your solutions locally if you‚Äôd like (for example, in VSCode or JupyterLab or any other IDE), but the .qmd file within your RStudio project will be considered your ‚Äúofficial‚Äù submission for each assignment.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#late-policy",
    "href": "syllabus.html#late-policy",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Late Policy",
    "text": "Late Policy\nAfter the due date, for each homework assignment, you will have a grace period of 24 hours to submit the assignment without a lateness penalty. After this 24 hour grace period, late penalties will be applied up until 66 hours after the due date. Specifically, late penalties will be applied based on the following scale (unless you obtain an excused lateness from one of the instructional staff!):\n\n0 to 24 hours after due date: no penalty\n24 to 30 hours after due date: 2.5% penalty\n30 to 42 hours after due date: 5% penalty\n42 to 54 hours after due date: 10% penalty\n54 to 66 hours after due date: 20% penalty\nMore than 66 hours after due date: Assignment submissions no longer accepted (without instructor approval)",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#final-letter-grade-determination",
    "href": "syllabus.html#final-letter-grade-determination",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Final Letter Grade Determination",
    "text": "Final Letter Grade Determination\nOnce all assignments have been graded, we will compute your final numeric grade according to the above weighting, rounded to two decimal places. The letter grade that we report to Georgetown on the basis of this numeric grade will then follow the DSAN letter grade policy as follows, where the start and end points for each range are inclusive:\n\n\n\nRange Start\nRange End\nLetter Grade\n\n\n\n\n92.50\n100.00\nA\n\n\n89.50\n92.49\nA-\n\n\n87.99\n89.49\nB+\n\n\n81.50\n87.98\nB\n\n\n79.50\n81.49\nB-\n\n\n69.50\n79.49\nC\n\n\n59.50\n69.49\nD\n\n\n0.00\n59.49\nF",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#title-ixsexual-misconduct-statement",
    "href": "syllabus.html#title-ixsexual-misconduct-statement",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "Title IX/Sexual Misconduct Statement",
    "text": "Title IX/Sexual Misconduct Statement\nGeorgetown University and its faculty are committed to supporting survivors and those impacted by sexual misconduct, which includes sexual assault, sexual harassment, relationship violence, and stalking. Georgetown requires faculty members, unless otherwise designated as confidential, to report all disclosures of sexual misconduct to the University Title IX Coordinator or a Deputy Title IX Coordinator.\nIf you disclose an incident of sexual misconduct to a professor in or outside of the classroom (with the exception of disclosures in papers), that faculty member must report the incident to the Title IX Coordinator, or Deputy Title IX Coordinator. The coordinator will, in turn, reach out to the student to provide support, resources, and the option to meet. [Please note that the student is not required to meet with the Title IX coordinator.]. More information about reporting options and resources can be found in the Sexual Misconduct Resource Center.\nIf you would prefer to speak to someone confidentially, Georgetown has a number of fully confidential professional resources that can provide support and assistance. These resources include:\n\nHealth Education Services for Sexual Assault Response and Prevention: Confidential email sarp@georgetown.edu\nCounseling and Psychiatric Services (CAPS): 202-687-6985\n\nAfter hours you can call 833-960-3006 to reach Fonemed, a telehealth service, and ask for the on-call CAPS clinician",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#gsas-and-mccourt-resources-and-policies",
    "href": "syllabus.html#gsas-and-mccourt-resources-and-policies",
    "title": "PPOL 6805 / DSAN 6750",
    "section": "GSAS and McCourt Resources and Policies",
    "text": "GSAS and McCourt Resources and Policies\nYou can find a collection of relevant resources and policies for students on the GSAS website, and the Provost‚Äôs policy on accommodating students‚Äô religious observances on the Campus Ministry website.\nYou can also make use of the Student Academic Resource Center. In particular, within the Resource Center there is a link to Georgetown‚Äôs Disability Support page. If you believe you have a disability, you can contact the Academic Resource Center (arc@georgetown.edu) for further information. The ARC is located in the Leavey Center, Suite 335 (202-687-8354), and it is the campus office responsible for reviewing documentation provided by students with disabilities and for determining reasonable accommodations in accordance with the Americans with Disabilities Act (ADA) and University policies.\n\nMcCourt Academic Integrity Policy\nMcCourt School students are expected to uphold the academic policies set forth by Georgetown University and the Graduate School of Arts and Sciences. Students should therefore familiarize themselves with all the rules, regulations, and procedures relevant to their pursuit of a Graduate School degree. The relevant policies are listed at this link.",
    "crumbs": [
      "Syllabus"
    ]
  }
]