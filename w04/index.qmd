---
title: "Week 4: {{< var weeks.4.title >}}"
subtitle: "{{< var course.slides-subtitle >}}"
author: "{{< var course.author >}}"
institute: "{{< var course.institute >}}"
date: "September 17, 2024"
date-format: full
lecnum: 4
categories:
  - "Class Sessions"
bibliography: "../_PPOL6805.bib"
# Shared across formats:
cache: true
echo: true
code-fold: show
html-math-method: mathjax
# Format-specific settings:
format:
  revealjs:
    output-file: "slides.html"
    df-print: kable
    slide-number: true
    scrollable: true
    tbl-cap-location: bottom
    link-external-icon: true
    link-external-newwindow: true
    footer: "{{< var weeks.4.footer >}}"
    include-in-header:
      text: "<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css'><link rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/gh/dreampulse/computer-modern-web-font@master/fonts.css'><link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH' crossorigin='anonymous'><script src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js' integrity='sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz' crossorigin='anonymous'></script>"
    theme: [default, "../dsan-globals/jjquarto.scss"]
    revealjs-plugins:
      - simplemenu
    simplemenu:
      flat: true
      barhtml:
        header: "<div class='menubar'><span style='position: absolute; left: 8; padding-left: 8px;'><a href='./index.html'>&larr; Return to Notes</a></span><ul class='menu'></ul></div>"
      scale: 0.5
  html:
    output-file: "index.html"
    html-math-method: mathjax
    df-print: kable
---

::: {.content-visible unless-format="revealjs"}

<center class='mb-3'>
<a class="h2" href="./slides.html" target="_blank">Open slides in new tab &rarr;</a>
</center>

:::

# Quick Logistical Things

* HW1 Question 1 Clarifications
* "Public Tests" vs. Hidden Tests

::: {.hidden}

```{r}
#| label: r-source-globals
source("../dsan-globals/_globals.r")
library(rnaturalearth)
library(mapview)
```

:::

## HW1 Question 1 Generally

* "Simplest" / Most Efficient Representation

  > *"Indicate which of the seven geometries above would provide the **simplest** representation of the entity"*

* `GEOMETRYCOLLECTION` *could* represent any of the geographic entities in Q1, but would be overkill for representing e.g. a single point or line

## HW1 Question 1.8 Specifically {.smaller .leaflet-300 .crunch-title}

For the United Arab Emirates (UAE) data... we have what we call the **[Not-Paraguay-Problem]{style="font-variant: small-caps;"}**: Most countries, including the UAE, have a bunch of lil "pieces":

:::: {.columns}
::: {.column width="50%"}

```{r}
#| label: russia-pieces
ru_national_map <- ne_countries(type = "countries", country = "Russia", scale = "medium", returnclass = "sf")
mapview(ru_national_map)
```

:::
::: {.column width="50%"}

```{r}
#| label: uae-pieces
uae_national_map <- ne_countries(type = "countries", country = "United Arab Emirates", scale = "large", returnclass = "sf")
mapview(uae_national_map)
```

:::
::::

So, for Q1.8: Assume we're just trying to have the computer represent the **"mainland"** (the biggest contiguous landmass, with Dubai on it!)

## Public vs. Hidden Tests

* Public Tests are basically **"Quality Assurance Test"**
* Hidden Tests check for **correctness**

# Coordinate Reference Systems {data-stack-name="CRS"}

* First things first... what are **coordinates?**
* We need a way to unambiguously specify **where** things are on the earth

## Latitude and Longitude are *Angles*!

![From @krygier_making_2016](images/lat_lon.svg){fig-align="center"}

## Angular Distance vs. Travel Distance {.crunch-title}

The Earth's "width" is slightly greater than its "length" ðŸ˜°

![From [Wikimedia Commons](https://commons.wikimedia.org/wiki/File:WGS84_mean_Earth_radius.svg){target='_blank'}](images/WGS84_earth.svg){fig-align="center"}

# Projections

## Smooshing 3D into 2D

![From @monmonier_how_2018](images/chi-monmonier-fig02003.jpeg){fig-align="center"}

## Avoid Getting Lost in the Sauce

<center>

{{< video "https://jpj.georgetown.domains/ppol6805-scratch/sauce.mp4" width="800" height="550" >}}

</center>

## How To Avoid Getting Lost in the Sauce {.crunch-title .title-08}

::: {.columns}
::: {.column width="50%"}

![**Tissot Circles**: *Imagine infinitely small ellipses placed at regular intervals on the curved surface of the earth. Imagine these ellipses being projected along with the earth's surface. When scaled up, changes in the ellipses show the location and quality of distortions on the projected map.*](images/sphere_tissot.svg){fig-align="center" width="50%"}

:::
::: {.column width="50%"}

![](images/mercator_tissot.svg){fig-align="center" width="55%"}

![](images/equal_area_tissot.svg){fig-align="center" width="100%"}

:::
:::

# Choropleths for Good and Evil {data-stack-name="Choropleths"}

* Crucial crucial aspect of GIS: Having ***Domain Knowledge* of a Region**

## The US's Ur-Choropleth #1: Population {.smaller .title-12}

![Kieran Healy, [*"America's Ur-Choropleths"*](https://kieranhealy.org/blog/archives/2015/06/12/americas-ur-choropleths/)](images/us-pop-density-2014.png){fig-align="center"}

## The US's Ur-Choropleth #2: Race {.smaller .title-12}

![Kieran Healy, [*"America's Ur-Choropleths"*](https://kieranhealy.org/blog/archives/2015/06/12/americas-ur-choropleths/)](images/us-pct-black-2013.png){fig-align="center"}

## Crime in Mongolia

![From [Reddit](https://www.reddit.com/r/MapPorn/comments/717vkc/population_density_in_mongolia_the_least_densely/){target='_blank'}](images/mongolia.png){fig-align="center"}

## Population of Mongolia

![From [Wikimedia Commons](https://commons.wikimedia.org/wiki/File:Mongolia_Population_Density,_2000_%285457623300%29.jpg){target='_blank'}](images/mongolia_density_2000.jpg){fig-align="center"}

## Exhibit A

![From @monmonier_how_2018](images/chi-monmonier-fig03009.jpeg)

## Exhibit B

![From @monmonier_how_2018](images/chi-monmonier-fig03010.jpeg)

## Continuous Choropleth {.smaller .crunch-title .crunch-p}

*Is poverty a "significant issue" in the US?*

![From @krygier_making_2016](images/choro1.svg){fig-align="center"}

## Quantile Colormap {.smaller .crunch-title .crunch-p}

*Is poverty a "significant issue" in the US?*

Assigns the **same number of observations** to each color

![From @krygier_making_2016](images/choro2.svg){fig-align="center"}

## Equal-Area Colormap {.smaller .crunch-title .crunch-p}

*Is poverty a "significant issue" in the US?*

Boundaries between colors come at **regular (equal) intervals**

![From @krygier_making_2016](images/choro_equal_area.svg){fig-align="center"}

## Natural-Break Colormap {.smaller .crunch-title .crunch-p}

*Is poverty a "significant issue" in the US?*

**Clustering algorithm** chooses classes to (a) minimize differences within classes, (b) maximize differences between classes

![From @krygier_making_2016](images/choro_natural_break.svg){fig-align="center"}

## Context-Sensitive Colormap {.smaller .crunch-title .crunch-p}

*Is poverty a "significant issue" in the US?*

A government program offers special funding for **counties with above 25% poverty**

![From @krygier_making_2016](images/choro_external.svg){fig-align="center"}

## The Importance of *History* {.smaller .crunch-title .crunch-p}

*Is poverty a "significant issue" in the US?*

![From @krygier_making_2016](images/choro_think.svg){fig-align="center"}

# Geospatial Operations 1: Unary Operations {data-stack-name="Unary Operations"}

## Getting the Geometries {.smaller .crunch-title .leaflet-350}

Using [`rnaturalearth`](http://ropensci.github.io/rnaturalearth/){target='_blank'} with [`mapview`](https://r-spatial.github.io/mapview/){target='_blank'}

```{r}
#| label: france-mapview
set.seed(6805)
library(tidyverse)
library(sf)
library(rnaturalearth)
library(mapview)
france_sf <- ne_countries(country = "France", scale = 50)
(france_map <- mapview(france_sf, label = "geounit", legend = FALSE))
```

## Centroid of France

```{r}
#| label: france-centroid
france_cent_sf <- sf::st_centroid(france_sf)
france_map + mapview(france_cent_sf, label = "Centroid", legend = FALSE)
```

## One We Already Saw: Union {.smaller .crunch-title .leaflet-375}

Computing the **union** of all geometries in the `sf` via `sf::st_union()`

```{r}
#| label: africa-union
library(leaflet.extras2)
africa_sf <- ne_countries(continent = "Africa", scale = 50)
africa_union_sf <- sf::st_union(africa_sf)
africa_map <- mapview(africa_sf, label="geounit", legend=FALSE)
africa_union_map <- mapview(africa_union_sf, label="st_union(africa)", legend=FALSE)
africa_map | africa_union_map
```

## Helpful for Rasterizing: BBox {.small}

```{r}
#| label: africa-bbox
africa_bbox_sf <- sf::st_bbox(africa_sf)
africa_bbox_map <- mapview(africa_bbox_sf, label="st_bbox(africa)", legend=FALSE)
africa_map | africa_bbox_map
```

## Convex Hulls by Country {.smaller}

```{r}
#| label: africa-countries-convex-hull
africa_countries_cvx <- sf::st_convex_hull(africa_sf)
africa_countries_cvx_map <- mapview(africa_countries_cvx, label="geounit", legend=FALSE)
africa_map | africa_countries_cvx_map
```

## Convex Hull of Continent {.smaller .crunch-title .leaflet-375}

Use `st_union()` first:

```{r}
#| label: africa-convex_hull
africa_cvx <- africa_sf |> st_union() |> st_convex_hull()
africa_cvx_map <- mapview(africa_cvx, label="geounit", legend=FALSE)
africa_map | africa_cvx_map
```

## One We Already Saw: Centroids {.smaller .crunch-title .leaflet-375}

Computing the **centroid** of all geometries in the `sf` via `sf::st_centroid()`

```{r}
#| label: africa-centroids
africa_cents_sf <- sf::st_centroid(africa_sf)
africa_cents_map <- mapview(africa_cents_sf, label="geounit", legend=FALSE)
africa_map | africa_cents_map
```

## References

::: {#refs}
:::
