---
title: "Week 2: {{< var w02.title >}}"
subtitle: "{{< var course.slides-subtitle >}}"
author: "{{< var course.author >}}"
institute: "{{< var course.institute >}}"
date: "September 4, 2024"
date-format: full
lecnum: 2
categories:
  - "Class Sessions"
crossref:
  fig-title: Fig
bibliography: "../_PPOL6805.bib"
# Shared across formats:
echo: true
code-fold: show
css: "../dsan-globals/jjstyles.css"
html-math-method: mathjax
# Format-specific settings:
format:
  revealjs:
    output-file: "slides.html"
    slide-number: true
    scrollable: true
    link-external-icon: true
    link-external-newwindow: true
    footer: "{{< var w02.footer >}}"
    include-in-header:
      text: "<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css'><link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH' crossorigin='anonymous'><script src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js' integrity='sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz' crossorigin='anonymous'></script>"
    theme: [default]
    revealjs-plugins:
      - simplemenu
    simplemenu:
      flat: true
      barhtml:
        header: "<div class='menubar'><span style='position: absolute; left: 8; padding-left: 8px;'><a href='./index.html'>&larr; Return to Notes</a></span><ul class='menu'></ul></div>"
      scale: 0.5
  html:
    output-file: "index.html"
    include-in-header:
      text: |
        <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css'>
        <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH' crossorigin='anonymous'>
        <script src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js' integrity='sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz' crossorigin='anonymous'></script>
        <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js' integrity='sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=='' crossorigin='anonymous' referrerpolicy='no-referrer'></script>
        <script src='/sidebar.js'></script>"
---

::: {.content-visible unless-format="revealjs"}

<center class='mb-3'>
<a class="h2" href="./slides.html" target="_blank">Open slides in new tab &rarr;</a>
</center>

:::

# Vector $\rightarrow$ Raster Data {data-stack-name="Vector &rarr; Raster"}

## End of Last Week: Vector Data {.crunch-title .smaller .crunch-quarto-figure}

```{r}
#| echo: true
#| warning: false
#| code-fold: true
#| fig-align: center
library(sf)
library(tidyverse)
# Load DC tracts data
dc_sf_fpath <- "data/DC_Census_2020/Census_Tracts_in_2020.shp"
dc_sf <- st_read(dc_sf_fpath, quiet = TRUE)
cols_to_keep <- c("OBJECTID", "TRACT", "GEOID", "ALAND", "AWATER", "STUSAB", "SUMLEV", "GEOCODE", "STATE", "NAME", "POP100", "HU100", "geometry")
dc_sf <- dc_sf |> select(cols_to_keep)
# We can extract the geometry with the st_geometry function
dc_geo <- st_geometry(dc_sf)
# And plot the geometry with base R's plot() function
plot(dc_geo, mar = c(0,0,0,0))
```

## Now with `ggplot`!

```{r}
#| label: dc-map-ggplot
#| fig-align: center
ggplot2::theme_set(ggplot2::theme_classic())
dc_sf |>
  ggplot() +
  geom_sf()
```

## Raster Data

* Each **DC Census Tract** has its own (odd) shape, which can be described by discrete coordinates forming a `POLYGON`
* For geospatial analysis, however, we often need to compute over **evenly-spaced grids** rather than this odd collection of shapes
* `POLYGON`s may make sense for **demographers**, but how about someone studying **air pollution** in DC? (Smog, for example, does not confine itself to census tracts!)

## Step 1: Union of All Tracts {.smaller}

```{r}
#| fig-align: center
dc_union_sf <- sf::st_union(dc_sf)
dc_union_sf |>
  ggplot() +
  geom_sf()
```

## Step 2: Rasterize (`terra`) {.smaller .crunch-title}

```{r}
#| label: rasterized-dc
#| fig-align: center
library(terra)
dc_SpatVector <- terra::vect(dc_union_sf)
rast_template <- rast(ext(dc_SpatVector),
  resolution = 1000, # meters
  crs = crs(dc_SpatVector)
)
dc_SpatRaster <- terra::rasterize(dc_SpatVector, rast_template)
dim(dc_SpatRaster)
nlyr(dc_SpatRaster)
plot(dc_SpatRaster)
```

## And with `tidyterra`

```{r}
#| label: rasterized-dc-tidy
#| fig-align: center
library(tidyterra)
ggplot(data=dc_SpatRaster, aes(fill=layer)) +
  geom_spatraster(data=dc_SpatRaster)
```

## Rasters From Scratch

Welcome to Gridtown!

```{r}
#| label: create-grid-town
set.seed(6805)
library(terra)
grid_town <- terra::rast(
  nrows = 4, ncols = 4,
  xmin = 0, xmax = 4, ymin = 0, ymax = 4,
  vals = sample(1:16)
)
```

## Important Distinction: Raster **Indices** vs. **Values** {.smaller}

Here we plot the **indices** for each cell: since a raster is a regular grid, can achieve memory-efficient representation with a **single** index (rather than, e.g., $(x, y)$ coords)

```{r}
plot(grid_town)
text(
  grid_town,
  labels=1:16,
  halo=TRUE,
  hc="black",
  col="white",
  hw=0.2
)
```

## And the **Values** at Each Cell

```{r}
plot(grid_town)
text(
  grid_town,
  halo=TRUE,
  hc="black",
  col="white",
  hw=0.2
)
```

# First Things First: Coordinates {data-stack-name="Coordinates"}

* We need a way to unambiguously specify **where** things are on the earth

## Latitude and Longitude are *Angles*!

![From @krygier_making_2016](images/lat_lon.svg){fig-align="center"}

## Angular Distance vs. Travel Distance {.crunch-title}

The Earth's "width" is slightly greater than its "length" ðŸ˜°

![From [Wikimedia Commons](https://commons.wikimedia.org/wiki/File:WGS84_mean_Earth_radius.svg){target='_blank'}](images/WGS84_earth.svg){fig-align="center"}

# Projections {data-stack-name="Projections"}

## Smooshing 3D into 2D

![](images/chi-monmonier-fig02003.jpeg){fig-align="center"}

## Avoid Getting Lost in the Sauce

<center>

{{< video "https://jpj.georgetown.domains/dsan6750-scratch/sauce.mp4" width="800" height="550" >}}

</center>

## How To Avoid Getting Lost in the Sauce {.crunch-title .title-09}

::: {.columns}
::: {.column width="50%"}

![**Tissot Circles**: *Imagine infinitely small ellipses placed at regular intervals on the curved surface of the earth. Imagine these ellipses being projected along with the earth's surface. When scaled up, changes in the ellipses show the location and quality of distortions on the projected map.*](images/sphere_tissot.svg){fig-align="center" width="50%"}

:::
::: {.column width="50%"}

![](images/mercator_tissot.svg){fig-align="center" width="55%"}

![](images/equal_area_tissot.svg){fig-align="center" width="100%"}

:::
:::

# The Things We Put On Maps {data-stack-name="Three Key Elements"}

* Scales
* Points
* Lines
* Areas

## Scales (w/Rules of Thumb)

![](images/scales.svg){fig-align="center"}

## The Three Key Elements

![](images/chi-monmonier-fig02011.jpeg){fig-align="center"}

# Thought Experiment: Zooming In and Out {data-stack-name="Zooming"}

* What happens to points, lines, and areas?

## What Can Happen to *Points*?

![](images/chi-monmonier-fig03002.jpeg){fig-align="center"}

## What Can Happen to *Lines*?

![](images/chi-monmonier-fig03001.jpeg){fig-align="center"}

## What Can Happen to *Lines*?

::: {.columns}
::: {.column width="50%"}

**Selection**

![In any map, **most** features from the human or natural environment are eliminated!](images/selection.svg){fig-align="center" width="100%"}

:::
::: {.column width="50%"}

**Simplification**

![Within the features that *do* remain, eliminate **details** that are unnecessary with respect to audience/context](images/simplification.svg){fig-align="center" width="100%"}

:::
:::

## What Can Happen to *Areas*?

<!-- ![](images/chi-monmonier-fig03003.jpeg){fig-align="center"} -->

**Dimension Change**

![](images/dimension_change.svg){fig-align="center" width="100%"}

## What Is Gained?

![](images/chi-monmonier-fig03004.jpeg){fig-align="center"}

## What Is Lost?

![](images/chi-monmonier-fig03005.jpeg){fig-align="center"}

## Who Is Affected?

![](images/chi-monmonier-fig03007.jpeg){fig-align="center"}

# Choropleths for Good and Evil {data-stack-name="Choropleths"}

## Exhibit A

![](images/chi-monmonier-fig03009.jpeg)

## Exhibit B

![](images/chi-monmonier-fig03010.jpeg)

## References

::: {#refs}
:::
